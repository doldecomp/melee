.include "macros.inc"
.file "ar.c"

# 0x00000000 - 0x00001250
.text
.balign 4

.fn ARRegisterDMACallback, global
/* 00000000 00000040  7C 08 02 A6 */	mflr r0
/* 00000004 00000044  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000008 00000048  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 0000000C 0000004C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000010 00000050  93 C1 00 10 */	stw r30, 0x10(r1)
/* 00000014 00000054  7C 7E 1B 78 */	mr r30, r3
/* 00000018 00000058  83 E0 00 00 */	lwz r31, __AR_Callback@sda21(r0)
/* 0000001C 0000005C  48 00 00 01 */	bl OSDisableInterrupts
/* 00000020 00000060  93 C0 00 00 */	stw r30, __AR_Callback@sda21(r0)
/* 00000024 00000064  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000028 00000068  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 0000002C 0000006C  7F E3 FB 78 */	mr r3, r31
/* 00000030 00000070  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000034 00000074  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 00000038 00000078  7C 08 03 A6 */	mtlr r0
/* 0000003C 0000007C  38 21 00 18 */	addi r1, r1, 0x18
/* 00000040 00000080  4E 80 00 20 */	blr
.endfn ARRegisterDMACallback

.fn ARStartDMA, global
/* 00000044 00000084  7C 08 02 A6 */	mflr r0
/* 00000048 00000088  90 01 00 04 */	stw r0, 0x4(r1)
/* 0000004C 0000008C  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 00000050 00000090  93 E1 00 24 */	stw r31, 0x24(r1)
/* 00000054 00000094  3B E6 00 00 */	addi r31, r6, 0x0
/* 00000058 00000098  93 C1 00 20 */	stw r30, 0x20(r1)
/* 0000005C 0000009C  3B C5 00 00 */	addi r30, r5, 0x0
/* 00000060 000000A0  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 00000064 000000A4  3B A3 00 00 */	addi r29, r3, 0x0
/* 00000068 000000A8  93 81 00 18 */	stw r28, 0x18(r1)
/* 0000006C 000000AC  3B 84 00 00 */	addi r28, r4, 0x0
/* 00000070 000000B0  48 00 00 01 */	bl OSDisableInterrupts
/* 00000074 000000B4  3C C0 CC 00 */	lis r6, 0xcc00
/* 00000078 000000B8  A0 06 50 20 */	lhz r0, 0x5020(r6)
/* 0000007C 000000BC  39 06 50 00 */	addi r8, r6, 0x5000
/* 00000080 000000C0  39 26 50 00 */	addi r9, r6, 0x5000
/* 00000084 000000C4  54 04 00 2A */	clrrwi r4, r0, 10
/* 00000088 000000C8  57 80 84 3E */	srwi r0, r28, 16
/* 0000008C 000000CC  7C 80 03 78 */	or r0, r4, r0
/* 00000090 000000D0  B0 06 50 20 */	sth r0, 0x5020(r6)
/* 00000094 000000D4  57 80 04 3E */	clrlwi r0, r28, 16
/* 00000098 000000D8  38 86 50 00 */	addi r4, r6, 0x5000
/* 0000009C 000000DC  A0 A6 50 22 */	lhz r5, 0x5022(r6)
/* 000000A0 000000E0  54 A5 06 DE */	rlwinm r5, r5, 0, 27, 15
/* 000000A4 000000E4  7C A0 03 78 */	or r0, r5, r0
/* 000000A8 000000E8  B0 06 50 22 */	sth r0, 0x5022(r6)
/* 000000AC 000000EC  38 A6 50 00 */	addi r5, r6, 0x5000
/* 000000B0 000000F0  57 C0 84 3E */	srwi r0, r30, 16
/* 000000B4 000000F4  A0 C6 50 24 */	lhz r6, 0x5024(r6)
/* 000000B8 000000F8  54 C6 00 2A */	clrrwi r6, r6, 10
/* 000000BC 000000FC  7C C0 03 78 */	or r0, r6, r0
/* 000000C0 00000100  B0 08 00 24 */	sth r0, 0x24(r8)
/* 000000C4 00000104  57 C0 04 3E */	clrlwi r0, r30, 16
/* 000000C8 00000108  A0 C9 00 26 */	lhz r6, 0x26(r9)
/* 000000CC 0000010C  54 C6 06 DE */	rlwinm r6, r6, 0, 27, 15
/* 000000D0 00000110  7C C0 03 78 */	or r0, r6, r0
/* 000000D4 00000114  B0 09 00 26 */	sth r0, 0x26(r9)
/* 000000D8 00000118  57 E6 84 3E */	srwi r6, r31, 16
/* 000000DC 0000011C  57 E0 04 3E */	clrlwi r0, r31, 16
/* 000000E0 00000120  A0 E4 00 28 */	lhz r7, 0x28(r4)
/* 000000E4 00000124  54 E7 04 5E */	rlwinm r7, r7, 0, 17, 15
/* 000000E8 00000128  53 A7 78 20 */	rlwimi r7, r29, 15, 0, 16
/* 000000EC 0000012C  B0 E4 00 28 */	sth r7, 0x28(r4)
/* 000000F0 00000130  A0 E4 00 28 */	lhz r7, 0x28(r4)
/* 000000F4 00000134  54 E7 00 2A */	clrrwi r7, r7, 10
/* 000000F8 00000138  7C E6 33 78 */	or r6, r7, r6
/* 000000FC 0000013C  B0 C4 00 28 */	sth r6, 0x28(r4)
/* 00000100 00000140  A0 85 00 2A */	lhz r4, 0x2a(r5)
/* 00000104 00000144  54 84 06 DE */	rlwinm r4, r4, 0, 27, 15
/* 00000108 00000148  7C 80 03 78 */	or r0, r4, r0
/* 0000010C 0000014C  B0 05 00 2A */	sth r0, 0x2a(r5)
/* 00000110 00000150  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000114 00000154  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 00000118 00000158  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 0000011C 0000015C  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 00000120 00000160  7C 08 03 A6 */	mtlr r0
/* 00000124 00000164  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 00000128 00000168  83 81 00 18 */	lwz r28, 0x18(r1)
/* 0000012C 0000016C  38 21 00 28 */	addi r1, r1, 0x28
/* 00000130 00000170  4E 80 00 20 */	blr
.endfn ARStartDMA

.fn ARAlloc, global
/* 00000134 00000174  7C 08 02 A6 */	mflr r0
/* 00000138 00000178  90 01 00 04 */	stw r0, 0x4(r1)
/* 0000013C 0000017C  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00000140 00000180  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000144 00000184  93 C1 00 10 */	stw r30, 0x10(r1)
/* 00000148 00000188  7C 7E 1B 78 */	mr r30, r3
/* 0000014C 0000018C  48 00 00 01 */	bl OSDisableInterrupts
/* 00000150 00000190  83 E0 00 00 */	lwz r31, __AR_StackPointer@sda21(r0)
/* 00000154 00000194  80 80 00 00 */	lwz r4, __AR_BlockLength@sda21(r0)
/* 00000158 00000198  7C 1F F2 14 */	add r0, r31, r30
/* 0000015C 0000019C  90 00 00 00 */	stw r0, __AR_StackPointer@sda21(r0)
/* 00000160 000001A0  93 C4 00 00 */	stw r30, 0x0(r4)
/* 00000164 000001A4  80 A0 00 00 */	lwz r5, __AR_BlockLength@sda21(r0)
/* 00000168 000001A8  80 80 00 00 */	lwz r4, __AR_FreeBlocks@sda21(r0)
/* 0000016C 000001AC  38 A5 00 04 */	addi r5, r5, 0x4
/* 00000170 000001B0  38 04 FF FF */	subi r0, r4, 0x1
/* 00000174 000001B4  90 A0 00 00 */	stw r5, __AR_BlockLength@sda21(r0)
/* 00000178 000001B8  90 00 00 00 */	stw r0, __AR_FreeBlocks@sda21(r0)
/* 0000017C 000001BC  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000180 000001C0  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00000184 000001C4  7F E3 FB 78 */	mr r3, r31
/* 00000188 000001C8  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 0000018C 000001CC  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 00000190 000001D0  7C 08 03 A6 */	mtlr r0
/* 00000194 000001D4  38 21 00 18 */	addi r1, r1, 0x18
/* 00000198 000001D8  4E 80 00 20 */	blr
.endfn ARAlloc

.fn ARFree, global
/* 0000019C 000001DC  7C 08 02 A6 */	mflr r0
/* 000001A0 000001E0  90 01 00 04 */	stw r0, 0x4(r1)
/* 000001A4 000001E4  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 000001A8 000001E8  93 E1 00 14 */	stw r31, 0x14(r1)
/* 000001AC 000001EC  7C 7F 1B 78 */	mr r31, r3
/* 000001B0 000001F0  48 00 00 01 */	bl OSDisableInterrupts
/* 000001B4 000001F4  80 80 00 00 */	lwz r4, __AR_BlockLength@sda21(r0)
/* 000001B8 000001F8  28 1F 00 00 */	cmplwi r31, 0x0
/* 000001BC 000001FC  38 04 FF FC */	subi r0, r4, 0x4
/* 000001C0 00000200  90 00 00 00 */	stw r0, __AR_BlockLength@sda21(r0)
/* 000001C4 00000204  41 82 00 10 */	beq .L_000001D4
/* 000001C8 00000208  80 80 00 00 */	lwz r4, __AR_BlockLength@sda21(r0)
/* 000001CC 0000020C  80 04 00 00 */	lwz r0, 0x0(r4)
/* 000001D0 00000210  90 1F 00 00 */	stw r0, 0x0(r31)
.L_000001D4:
/* 000001D4 00000214  80 A0 00 00 */	lwz r5, __AR_BlockLength@sda21(r0)
/* 000001D8 00000218  80 80 00 00 */	lwz r4, __AR_FreeBlocks@sda21(r0)
/* 000001DC 0000021C  80 C5 00 00 */	lwz r6, 0x0(r5)
/* 000001E0 00000220  38 04 00 01 */	addi r0, r4, 0x1
/* 000001E4 00000224  80 A0 00 00 */	lwz r5, __AR_StackPointer@sda21(r0)
/* 000001E8 00000228  90 00 00 00 */	stw r0, __AR_FreeBlocks@sda21(r0)
/* 000001EC 0000022C  7C 06 28 50 */	subf r0, r6, r5
/* 000001F0 00000230  90 00 00 00 */	stw r0, __AR_StackPointer@sda21(r0)
/* 000001F4 00000234  48 00 00 01 */	bl OSRestoreInterrupts
/* 000001F8 00000238  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 000001FC 0000023C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000200 00000240  38 21 00 18 */	addi r1, r1, 0x18
/* 00000204 00000244  80 60 00 00 */	lwz r3, __AR_StackPointer@sda21(r0)
/* 00000208 00000248  7C 08 03 A6 */	mtlr r0
/* 0000020C 0000024C  4E 80 00 20 */	blr
.endfn ARFree

.fn ARInit, global
/* 00000210 00000250  7C 08 02 A6 */	mflr r0
/* 00000214 00000254  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000218 00000258  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 0000021C 0000025C  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 00000220 00000260  93 C1 00 28 */	stw r30, 0x28(r1)
/* 00000224 00000264  3B C4 00 00 */	addi r30, r4, 0x0
/* 00000228 00000268  93 A1 00 24 */	stw r29, 0x24(r1)
/* 0000022C 0000026C  3B A3 00 00 */	addi r29, r3, 0x0
/* 00000230 00000270  80 00 00 00 */	lwz r0, __AR_init_flag@sda21(r0)
/* 00000234 00000274  2C 00 00 01 */	cmpwi r0, 0x1
/* 00000238 00000278  40 82 00 0C */	bne .L_00000244
/* 0000023C 0000027C  38 60 40 00 */	li r3, 0x4000
/* 00000240 00000280  48 00 00 A8 */	b .L_000002E8
.L_00000244:
/* 00000244 00000284  48 00 00 01 */	bl OSDisableInterrupts
/* 00000248 00000288  38 00 00 00 */	li r0, 0x0
/* 0000024C 0000028C  3C 80 00 00 */	lis r4, __ARHandler@ha
/* 00000250 00000290  90 00 00 00 */	stw r0, __AR_Callback@sda21(r0)
/* 00000254 00000294  3B E3 00 00 */	addi r31, r3, 0x0
/* 00000258 00000298  38 84 00 00 */	addi r4, r4, __ARHandler@l
/* 0000025C 0000029C  38 60 00 06 */	li r3, 0x6
/* 00000260 000002A0  48 00 00 01 */	bl __OSSetInterruptHandler
/* 00000264 000002A4  3C 60 02 00 */	lis r3, 0x200
/* 00000268 000002A8  48 00 00 01 */	bl __OSUnmaskInterrupts
/* 0000026C 000002AC  3C 60 80 00 */	lis r3, 0x8000
/* 00000270 000002B0  C8 40 00 00 */	lfd f2, "@28"@sda21(r0)
/* 00000274 000002B4  80 03 00 F8 */	lwz r0, 0xf8(r3)
/* 00000278 000002B8  38 80 40 00 */	li r4, 0x4000
/* 0000027C 000002BC  3C 60 CC 00 */	lis r3, 0xcc00
/* 00000280 000002C0  C0 00 00 00 */	lfs f0, "@26"@sda21(r0)
/* 00000284 000002C4  90 01 00 1C */	stw r0, 0x1c(r1)
/* 00000288 000002C8  3C 00 43 30 */	lis r0, 0x4330
/* 0000028C 000002CC  C0 60 00 00 */	lfs f3, "@25"@sda21(r0)
/* 00000290 000002D0  90 01 00 18 */	stw r0, 0x18(r1)
/* 00000294 000002D4  38 A3 50 00 */	addi r5, r3, 0x5000
/* 00000298 000002D8  C8 21 00 18 */	lfd f1, 0x18(r1)
/* 0000029C 000002DC  90 80 00 00 */	stw r4, __AR_StackPointer@sda21(r0)
/* 000002A0 000002E0  EC 21 10 28 */	fsubs f1, f1, f2
/* 000002A4 000002E4  93 C0 00 00 */	stw r30, __AR_FreeBlocks@sda21(r0)
/* 000002A8 000002E8  EC 01 00 24 */	fdivs f0, f1, f0
/* 000002AC 000002EC  93 A0 00 00 */	stw r29, __AR_BlockLength@sda21(r0)
/* 000002B0 000002F0  A0 63 50 1A */	lhz r3, 0x501a(r3)
/* 000002B4 000002F4  EC 03 00 32 */	fmuls f0, f3, f0
/* 000002B8 000002F8  FC 00 00 1E */	fctiwz f0, f0
/* 000002BC 000002FC  D8 01 00 10 */	stfd f0, 0x10(r1)
/* 000002C0 00000300  80 01 00 14 */	lwz r0, 0x14(r1)
/* 000002C4 00000304  54 00 06 3E */	clrlwi r0, r0, 24
/* 000002C8 00000308  50 60 04 2E */	rlwimi r0, r3, 0, 16, 23
/* 000002CC 0000030C  B0 05 00 1A */	sth r0, 0x1a(r5)
/* 000002D0 00000310  48 00 00 01 */	bl __ARChecksize
/* 000002D4 00000314  38 00 00 01 */	li r0, 0x1
/* 000002D8 00000318  90 00 00 00 */	stw r0, __AR_init_flag@sda21(r0)
/* 000002DC 0000031C  7F E3 FB 78 */	mr r3, r31
/* 000002E0 00000320  48 00 00 01 */	bl OSRestoreInterrupts
/* 000002E4 00000324  80 60 00 00 */	lwz r3, __AR_StackPointer@sda21(r0)
.L_000002E8:
/* 000002E8 00000328  80 01 00 34 */	lwz r0, 0x34(r1)
/* 000002EC 0000032C  83 E1 00 2C */	lwz r31, 0x2c(r1)
/* 000002F0 00000330  83 C1 00 28 */	lwz r30, 0x28(r1)
/* 000002F4 00000334  7C 08 03 A6 */	mtlr r0
/* 000002F8 00000338  83 A1 00 24 */	lwz r29, 0x24(r1)
/* 000002FC 0000033C  38 21 00 30 */	addi r1, r1, 0x30
/* 00000300 00000340  4E 80 00 20 */	blr
.endfn ARInit

.fn ARGetSize, global
/* 00000304 00000344  80 60 00 00 */	lwz r3, __AR_Size@sda21(r0)
/* 00000308 00000348  4E 80 00 20 */	blr
.endfn ARGetSize

.fn __ARHandler, global
/* 0000030C 0000034C  7C 08 02 A6 */	mflr r0
/* 00000310 00000350  3C 60 CC 00 */	lis r3, 0xcc00
/* 00000314 00000354  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000318 00000358  38 63 50 00 */	addi r3, r3, 0x5000
/* 0000031C 0000035C  38 00 FF 77 */	li r0, -0x89
/* 00000320 00000360  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 00000324 00000364  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 00000328 00000368  3B E4 00 00 */	addi r31, r4, 0x0
/* 0000032C 0000036C  A0 A3 00 0A */	lhz r5, 0xa(r3)
/* 00000330 00000370  7C A0 00 38 */	and r0, r5, r0
/* 00000334 00000374  60 00 00 20 */	ori r0, r0, 0x20
/* 00000338 00000378  B0 03 00 0A */	sth r0, 0xa(r3)
/* 0000033C 0000037C  38 61 00 10 */	addi r3, r1, 0x10
/* 00000340 00000380  48 00 00 01 */	bl OSClearContext
/* 00000344 00000384  38 61 00 10 */	addi r3, r1, 0x10
/* 00000348 00000388  48 00 00 01 */	bl OSSetCurrentContext
/* 0000034C 0000038C  81 80 00 00 */	lwz r12, __AR_Callback@sda21(r0)
/* 00000350 00000390  28 0C 00 00 */	cmplwi r12, 0x0
/* 00000354 00000394  41 82 00 0C */	beq .L_00000360
/* 00000358 00000398  7D 88 03 A6 */	mtlr r12
/* 0000035C 0000039C  4E 80 00 21 */	blrl
.L_00000360:
/* 00000360 000003A0  38 61 00 10 */	addi r3, r1, 0x10
/* 00000364 000003A4  48 00 00 01 */	bl OSClearContext
/* 00000368 000003A8  7F E3 FB 78 */	mr r3, r31
/* 0000036C 000003AC  48 00 00 01 */	bl OSSetCurrentContext
/* 00000370 000003B0  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 00000374 000003B4  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 00000378 000003B8  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 0000037C 000003BC  7C 08 03 A6 */	mtlr r0
/* 00000380 000003C0  4E 80 00 20 */	blr
.endfn __ARHandler

.fn __ARChecksize, global
/* 00000384 000003C4  7C 08 02 A6 */	mflr r0
/* 00000388 000003C8  3C 60 DE AE */	lis r3, 0xdeae
/* 0000038C 000003CC  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000390 000003D0  38 A3 BE EF */	subi r5, r3, 0x4111
/* 00000394 000003D4  3C 60 BA D1 */	lis r3, 0xbad1
/* 00000398 000003D8  94 21 FE C0 */	stwu r1, -0x140(r1)
/* 0000039C 000003DC  BD C1 00 F8 */	stmw r14, 0xf8(r1)
/* 000003A0 000003E0  38 01 00 B3 */	addi r0, r1, 0xb3
/* 000003A4 000003E4  54 17 00 34 */	clrrwi r23, r0, 5
/* 000003A8 000003E8  38 01 00 73 */	addi r0, r1, 0x73
/* 000003AC 000003EC  54 1F 00 34 */	clrrwi r31, r0, 5
/* 000003B0 000003F0  38 03 BA D0 */	subi r0, r3, 0x4530
/* 000003B4 000003F4  38 81 00 33 */	addi r4, r1, 0x33
/* 000003B8 000003F8  54 98 00 34 */	clrrwi r24, r4, 5
/* 000003BC 000003FC  38 77 00 00 */	addi r3, r23, 0x0
/* 000003C0 00000400  3A 20 00 00 */	li r17, 0x0
/* 000003C4 00000404  3A C0 00 00 */	li r22, 0x0
/* 000003C8 00000408  38 80 00 20 */	li r4, 0x20
/* 000003CC 0000040C  90 B7 00 00 */	stw r5, 0x0(r23)
/* 000003D0 00000410  90 1F 00 00 */	stw r0, 0x0(r31)
/* 000003D4 00000414  90 B7 00 04 */	stw r5, 0x4(r23)
/* 000003D8 00000418  90 1F 00 04 */	stw r0, 0x4(r31)
/* 000003DC 0000041C  90 B7 00 08 */	stw r5, 0x8(r23)
/* 000003E0 00000420  90 1F 00 08 */	stw r0, 0x8(r31)
/* 000003E4 00000424  90 B7 00 0C */	stw r5, 0xc(r23)
/* 000003E8 00000428  90 1F 00 0C */	stw r0, 0xc(r31)
/* 000003EC 0000042C  90 B7 00 10 */	stw r5, 0x10(r23)
/* 000003F0 00000430  90 1F 00 10 */	stw r0, 0x10(r31)
/* 000003F4 00000434  90 B7 00 14 */	stw r5, 0x14(r23)
/* 000003F8 00000438  90 1F 00 14 */	stw r0, 0x14(r31)
/* 000003FC 0000043C  90 B7 00 18 */	stw r5, 0x18(r23)
/* 00000400 00000440  90 1F 00 18 */	stw r0, 0x18(r31)
/* 00000404 00000444  90 B7 00 1C */	stw r5, 0x1c(r23)
/* 00000408 00000448  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 0000040C 0000044C  48 00 00 01 */	bl DCFlushRange
/* 00000410 00000450  38 7F 00 00 */	addi r3, r31, 0x0
/* 00000414 00000454  38 80 00 20 */	li r4, 0x20
/* 00000418 00000458  48 00 00 01 */	bl DCFlushRange
/* 0000041C 0000045C  3C 60 CC 00 */	lis r3, 0xcc00
/* 00000420 00000460  38 63 50 00 */	addi r3, r3, 0x5000
.L_00000424:
/* 00000424 00000464  A0 03 00 16 */	lhz r0, 0x16(r3)
/* 00000428 00000468  54 00 07 FF */	clrlwi. r0, r0, 31
/* 0000042C 0000046C  41 82 FF F8 */	beq .L_00000424
/* 00000430 00000470  3C 60 CC 00 */	lis r3, 0xcc00
/* 00000434 00000474  A0 03 50 12 */	lhz r0, 0x5012(r3)
/* 00000438 00000478  39 C3 50 00 */	addi r14, r3, 0x5000
/* 0000043C 0000047C  57 F4 84 3E */	srwi r20, r31, 16
/* 00000440 00000480  54 00 00 32 */	clrrwi r0, r0, 6
/* 00000444 00000484  60 00 00 24 */	ori r0, r0, 0x24
/* 00000448 00000488  B4 0E 00 12 */	sthu r0, 0x12(r14)
/* 0000044C 0000048C  3B 23 50 00 */	addi r25, r3, 0x5000
/* 00000450 00000490  57 F5 04 3E */	clrlwi r21, r31, 16
/* 00000454 00000494  A0 03 50 20 */	lhz r0, 0x5020(r3)
/* 00000458 00000498  3B 43 50 00 */	addi r26, r3, 0x5000
/* 0000045C 0000049C  3B 63 50 00 */	addi r27, r3, 0x5000
/* 00000460 000004A0  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000464 000004A4  7C 00 A3 78 */	or r0, r0, r20
/* 00000468 000004A8  B4 19 00 20 */	sthu r0, 0x20(r25)
/* 0000046C 000004AC  3B 83 50 00 */	addi r28, r3, 0x5000
/* 00000470 000004B0  3B C3 50 00 */	addi r30, r3, 0x5000
/* 00000474 000004B4  A0 03 50 22 */	lhz r0, 0x5022(r3)
/* 00000478 000004B8  3B A3 50 00 */	addi r29, r3, 0x5000
/* 0000047C 000004BC  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000480 000004C0  7C 00 AB 78 */	or r0, r0, r21
/* 00000484 000004C4  B4 1A 00 22 */	sthu r0, 0x22(r26)
/* 00000488 000004C8  A0 03 50 24 */	lhz r0, 0x5024(r3)
/* 0000048C 000004CC  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000490 000004D0  60 00 00 00 */	nop
/* 00000494 000004D4  B4 1B 00 24 */	sthu r0, 0x24(r27)
/* 00000498 000004D8  A0 03 50 26 */	lhz r0, 0x5026(r3)
/* 0000049C 000004DC  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000004A0 000004E0  60 00 00 00 */	nop
/* 000004A4 000004E4  B4 1C 00 26 */	sthu r0, 0x26(r28)
/* 000004A8 000004E8  A0 03 50 28 */	lhz r0, 0x5028(r3)
/* 000004AC 000004EC  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 000004B0 000004F0  B0 03 50 28 */	sth r0, 0x5028(r3)
/* 000004B4 000004F4  A0 03 50 28 */	lhz r0, 0x5028(r3)
/* 000004B8 000004F8  54 00 00 2A */	clrrwi r0, r0, 10
/* 000004BC 000004FC  60 00 00 00 */	nop
/* 000004C0 00000500  B4 1E 00 28 */	sthu r0, 0x28(r30)
/* 000004C4 00000504  A0 03 50 2A */	lhz r0, 0x502a(r3)
/* 000004C8 00000508  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000004CC 0000050C  60 00 00 20 */	ori r0, r0, 0x20
/* 000004D0 00000510  B4 1D 00 2A */	sthu r0, 0x2a(r29)
.L_000004D4:
/* 000004D4 00000514  3B E3 50 00 */	addi r31, r3, 0x5000
/* 000004D8 00000518  A4 1F 00 0A */	lhzu r0, 0xa(r31)
/* 000004DC 0000051C  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 000004E0 00000520  40 82 FF F4 */	bne .L_000004D4
/* 000004E4 00000524  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 000004E8 00000528  54 00 00 2A */	clrrwi r0, r0, 10
/* 000004EC 0000052C  7C 00 A3 78 */	or r0, r0, r20
/* 000004F0 00000530  B0 19 00 00 */	sth r0, 0x0(r25)
/* 000004F4 00000534  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 000004F8 00000538  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000004FC 0000053C  7C 00 AB 78 */	or r0, r0, r21
/* 00000500 00000540  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000504 00000544  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000508 00000548  54 00 00 2A */	clrrwi r0, r0, 10
/* 0000050C 0000054C  60 00 00 20 */	ori r0, r0, 0x20
/* 00000510 00000550  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000514 00000554  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000518 00000558  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 0000051C 0000055C  60 00 00 00 */	nop
/* 00000520 00000560  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000524 00000564  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000528 00000568  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 0000052C 0000056C  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000530 00000570  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000534 00000574  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000538 00000578  60 00 00 00 */	nop
/* 0000053C 0000057C  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000540 00000580  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000544 00000584  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000548 00000588  60 00 00 20 */	ori r0, r0, 0x20
/* 0000054C 0000058C  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000550:
/* 00000550 00000590  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000554 00000594  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000558 00000598  40 82 FF F8 */	bne .L_00000550
/* 0000055C 0000059C  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 00000560 000005A0  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000564 000005A4  7C 00 A3 78 */	or r0, r0, r20
/* 00000568 000005A8  B0 19 00 00 */	sth r0, 0x0(r25)
/* 0000056C 000005AC  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00000570 000005B0  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000574 000005B4  7C 00 AB 78 */	or r0, r0, r21
/* 00000578 000005B8  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 0000057C 000005BC  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000580 000005C0  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000584 000005C4  60 00 00 00 */	nop
/* 00000588 000005C8  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 0000058C 000005CC  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000590 000005D0  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000594 000005D4  60 00 02 00 */	ori r0, r0, 0x200
/* 00000598 000005D8  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 0000059C 000005DC  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 000005A0 000005E0  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 000005A4 000005E4  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 000005A8 000005E8  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 000005AC 000005EC  54 00 00 2A */	clrrwi r0, r0, 10
/* 000005B0 000005F0  60 00 00 00 */	nop
/* 000005B4 000005F4  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 000005B8 000005F8  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 000005BC 000005FC  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000005C0 00000600  60 00 00 20 */	ori r0, r0, 0x20
/* 000005C4 00000604  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_000005C8:
/* 000005C8 00000608  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 000005CC 0000060C  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 000005D0 00000610  40 82 FF F8 */	bne .L_000005C8
/* 000005D4 00000614  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 000005D8 00000618  54 00 00 2A */	clrrwi r0, r0, 10
/* 000005DC 0000061C  7C 00 A3 78 */	or r0, r0, r20
/* 000005E0 00000620  B0 19 00 00 */	sth r0, 0x0(r25)
/* 000005E4 00000624  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 000005E8 00000628  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000005EC 0000062C  7C 00 AB 78 */	or r0, r0, r21
/* 000005F0 00000630  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 000005F4 00000634  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 000005F8 00000638  54 00 00 2A */	clrrwi r0, r0, 10
/* 000005FC 0000063C  60 00 01 00 */	ori r0, r0, 0x100
/* 00000600 00000640  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000604 00000644  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000608 00000648  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 0000060C 0000064C  60 00 00 00 */	nop
/* 00000610 00000650  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000614 00000654  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000618 00000658  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 0000061C 0000065C  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000620 00000660  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000624 00000664  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000628 00000668  60 00 00 00 */	nop
/* 0000062C 0000066C  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000630 00000670  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000634 00000674  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000638 00000678  60 00 00 20 */	ori r0, r0, 0x20
/* 0000063C 0000067C  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000640:
/* 00000640 00000680  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000644 00000684  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000648 00000688  40 82 FF F8 */	bne .L_00000640
/* 0000064C 0000068C  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 00000650 00000690  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000654 00000694  7C 00 A3 78 */	or r0, r0, r20
/* 00000658 00000698  B0 19 00 00 */	sth r0, 0x0(r25)
/* 0000065C 0000069C  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00000660 000006A0  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000664 000006A4  7C 00 AB 78 */	or r0, r0, r21
/* 00000668 000006A8  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 0000066C 000006AC  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000670 000006B0  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000674 000006B4  60 00 00 40 */	ori r0, r0, 0x40
/* 00000678 000006B8  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 0000067C 000006BC  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000680 000006C0  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000684 000006C4  60 00 00 00 */	nop
/* 00000688 000006C8  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 0000068C 000006CC  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000690 000006D0  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 00000694 000006D4  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000698 000006D8  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 0000069C 000006DC  54 00 00 2A */	clrrwi r0, r0, 10
/* 000006A0 000006E0  60 00 00 00 */	nop
/* 000006A4 000006E4  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 000006A8 000006E8  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 000006AC 000006EC  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000006B0 000006F0  60 00 00 20 */	ori r0, r0, 0x20
/* 000006B4 000006F4  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_000006B8:
/* 000006B8 000006F8  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 000006BC 000006FC  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 000006C0 00000700  40 82 FF F8 */	bne .L_000006B8
/* 000006C4 00000704  38 78 00 00 */	addi r3, r24, 0x0
/* 000006C8 00000708  38 80 00 00 */	li r4, 0x0
/* 000006CC 0000070C  38 A0 00 20 */	li r5, 0x20
/* 000006D0 00000710  48 00 00 01 */	bl memset
/* 000006D4 00000714  38 78 00 00 */	addi r3, r24, 0x0
/* 000006D8 00000718  38 80 00 20 */	li r4, 0x20
/* 000006DC 0000071C  48 00 00 01 */	bl DCFlushRange
/* 000006E0 00000720  56 E0 84 3E */	srwi r0, r23, 16
/* 000006E4 00000724  A0 79 00 00 */	lhz r3, 0x0(r25)
/* 000006E8 00000728  90 01 00 E4 */	stw r0, 0xe4(r1)
/* 000006EC 0000072C  54 63 00 2A */	clrrwi r3, r3, 10
/* 000006F0 00000730  80 01 00 E4 */	lwz r0, 0xe4(r1)
/* 000006F4 00000734  7C 60 03 78 */	or r0, r3, r0
/* 000006F8 00000738  B0 19 00 00 */	sth r0, 0x0(r25)
/* 000006FC 0000073C  56 E0 04 3E */	clrlwi r0, r23, 16
/* 00000700 00000740  90 01 00 E8 */	stw r0, 0xe8(r1)
/* 00000704 00000744  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00000708 00000748  54 03 06 DE */	rlwinm r3, r0, 0, 27, 15
/* 0000070C 0000074C  80 01 00 E8 */	lwz r0, 0xe8(r1)
/* 00000710 00000750  7C 60 03 78 */	or r0, r3, r0
/* 00000714 00000754  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000718 00000758  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 0000071C 0000075C  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000720 00000760  60 00 00 00 */	nop
/* 00000724 00000764  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000728 00000768  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 0000072C 0000076C  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000730 00000770  60 00 00 00 */	nop
/* 00000734 00000774  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000738 00000778  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 0000073C 0000077C  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 00000740 00000780  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000744 00000784  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000748 00000788  54 00 00 2A */	clrrwi r0, r0, 10
/* 0000074C 0000078C  60 00 00 00 */	nop
/* 00000750 00000790  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000754 00000794  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000758 00000798  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 0000075C 0000079C  60 00 00 20 */	ori r0, r0, 0x20
/* 00000760 000007A0  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000764:
/* 00000764 000007A4  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000768 000007A8  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 0000076C 000007AC  40 82 FF F8 */	bne .L_00000764
/* 00000770 000007B0  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 00000774 000007B4  57 13 84 3E */	srwi r19, r24, 16
/* 00000778 000007B8  57 12 04 3E */	clrlwi r18, r24, 16
/* 0000077C 000007BC  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000780 000007C0  7C 00 9B 78 */	or r0, r0, r19
/* 00000784 000007C4  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00000788 000007C8  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 0000078C 000007CC  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000790 000007D0  7C 00 93 78 */	or r0, r0, r18
/* 00000794 000007D4  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000798 000007D8  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 0000079C 000007DC  54 00 00 2A */	clrrwi r0, r0, 10
/* 000007A0 000007E0  60 00 00 00 */	nop
/* 000007A4 000007E4  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 000007A8 000007E8  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 000007AC 000007EC  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000007B0 000007F0  60 00 00 00 */	nop
/* 000007B4 000007F4  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 000007B8 000007F8  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 000007BC 000007FC  60 00 80 00 */	ori r0, r0, 0x8000
/* 000007C0 00000800  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 000007C4 00000804  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 000007C8 00000808  54 00 00 2A */	clrrwi r0, r0, 10
/* 000007CC 0000080C  60 00 00 00 */	nop
/* 000007D0 00000810  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 000007D4 00000814  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 000007D8 00000818  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000007DC 0000081C  60 00 00 20 */	ori r0, r0, 0x20
/* 000007E0 00000820  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_000007E4:
/* 000007E4 00000824  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 000007E8 00000828  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 000007EC 0000082C  40 82 FF F8 */	bne .L_000007E4
/* 000007F0 00000830  38 78 00 00 */	addi r3, r24, 0x0
/* 000007F4 00000834  38 80 00 20 */	li r4, 0x20
/* 000007F8 00000838  48 00 00 01 */	bl DCInvalidateRange
/* 000007FC 0000083C  80 18 00 00 */	lwz r0, 0x0(r24)
/* 00000800 00000840  80 77 00 00 */	lwz r3, 0x0(r23)
/* 00000804 00000844  7C 00 18 40 */	cmplw r0, r3
/* 00000808 00000848  40 82 02 FC */	bne .L_00000B04
/* 0000080C 0000084C  38 78 00 00 */	addi r3, r24, 0x0
/* 00000810 00000850  38 80 00 00 */	li r4, 0x0
/* 00000814 00000854  38 A0 00 20 */	li r5, 0x20
/* 00000818 00000858  48 00 00 01 */	bl memset
/* 0000081C 0000085C  38 78 00 00 */	addi r3, r24, 0x0
/* 00000820 00000860  38 80 00 20 */	li r4, 0x20
/* 00000824 00000864  48 00 00 01 */	bl DCFlushRange
/* 00000828 00000868  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 0000082C 0000086C  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000830 00000870  7C 00 9B 78 */	or r0, r0, r19
/* 00000834 00000874  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00000838 00000878  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 0000083C 0000087C  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000840 00000880  7C 00 93 78 */	or r0, r0, r18
/* 00000844 00000884  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000848 00000888  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 0000084C 0000088C  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000850 00000890  60 00 00 20 */	ori r0, r0, 0x20
/* 00000854 00000894  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000858 00000898  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 0000085C 0000089C  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000860 000008A0  60 00 00 00 */	nop
/* 00000864 000008A4  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000868 000008A8  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 0000086C 000008AC  60 00 80 00 */	ori r0, r0, 0x8000
/* 00000870 000008B0  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000874 000008B4  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000878 000008B8  54 00 00 2A */	clrrwi r0, r0, 10
/* 0000087C 000008BC  60 00 00 00 */	nop
/* 00000880 000008C0  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000884 000008C4  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000888 000008C8  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 0000088C 000008CC  60 00 00 20 */	ori r0, r0, 0x20
/* 00000890 000008D0  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000894:
/* 00000894 000008D4  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000898 000008D8  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 0000089C 000008DC  40 82 FF F8 */	bne .L_00000894
/* 000008A0 000008E0  38 78 00 00 */	addi r3, r24, 0x0
/* 000008A4 000008E4  38 80 00 20 */	li r4, 0x20
/* 000008A8 000008E8  48 00 00 01 */	bl DCInvalidateRange
/* 000008AC 000008EC  80 18 00 00 */	lwz r0, 0x0(r24)
/* 000008B0 000008F0  80 77 00 00 */	lwz r3, 0x0(r23)
/* 000008B4 000008F4  7C 00 18 40 */	cmplw r0, r3
/* 000008B8 000008F8  40 82 00 10 */	bne .L_000008C8
/* 000008BC 000008FC  3A 20 00 00 */	li r17, 0x0
/* 000008C0 00000900  3E C0 00 20 */	lis r22, 0x20
/* 000008C4 00000904  48 00 02 40 */	b .L_00000B04
.L_000008C8:
/* 000008C8 00000908  38 78 00 00 */	addi r3, r24, 0x0
/* 000008CC 0000090C  38 80 00 00 */	li r4, 0x0
/* 000008D0 00000910  38 A0 00 20 */	li r5, 0x20
/* 000008D4 00000914  48 00 00 01 */	bl memset
/* 000008D8 00000918  38 78 00 00 */	addi r3, r24, 0x0
/* 000008DC 0000091C  38 80 00 20 */	li r4, 0x20
/* 000008E0 00000920  48 00 00 01 */	bl DCFlushRange
/* 000008E4 00000924  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 000008E8 00000928  54 00 00 2A */	clrrwi r0, r0, 10
/* 000008EC 0000092C  7C 00 9B 78 */	or r0, r0, r19
/* 000008F0 00000930  B0 19 00 00 */	sth r0, 0x0(r25)
/* 000008F4 00000934  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 000008F8 00000938  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000008FC 0000093C  7C 00 93 78 */	or r0, r0, r18
/* 00000900 00000940  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000904 00000944  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000908 00000948  54 00 00 2A */	clrrwi r0, r0, 10
/* 0000090C 0000094C  60 00 01 00 */	ori r0, r0, 0x100
/* 00000910 00000950  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000914 00000954  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000918 00000958  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 0000091C 0000095C  60 00 00 00 */	nop
/* 00000920 00000960  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000924 00000964  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000928 00000968  60 00 80 00 */	ori r0, r0, 0x8000
/* 0000092C 0000096C  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000930 00000970  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000934 00000974  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000938 00000978  60 00 00 00 */	nop
/* 0000093C 0000097C  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000940 00000980  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000944 00000984  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000948 00000988  60 00 00 20 */	ori r0, r0, 0x20
/* 0000094C 0000098C  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000950:
/* 00000950 00000990  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000954 00000994  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000958 00000998  40 82 FF F8 */	bne .L_00000950
/* 0000095C 0000099C  38 78 00 00 */	addi r3, r24, 0x0
/* 00000960 000009A0  38 80 00 20 */	li r4, 0x20
/* 00000964 000009A4  48 00 00 01 */	bl DCInvalidateRange
/* 00000968 000009A8  80 18 00 00 */	lwz r0, 0x0(r24)
/* 0000096C 000009AC  80 77 00 00 */	lwz r3, 0x0(r23)
/* 00000970 000009B0  7C 00 18 40 */	cmplw r0, r3
/* 00000974 000009B4  40 82 00 10 */	bne .L_00000984
/* 00000978 000009B8  3A 20 00 01 */	li r17, 0x1
/* 0000097C 000009BC  3E C0 00 40 */	lis r22, 0x40
/* 00000980 000009C0  48 00 01 84 */	b .L_00000B04
.L_00000984:
/* 00000984 000009C4  38 78 00 00 */	addi r3, r24, 0x0
/* 00000988 000009C8  38 80 00 00 */	li r4, 0x0
/* 0000098C 000009CC  38 A0 00 20 */	li r5, 0x20
/* 00000990 000009D0  48 00 00 01 */	bl memset
/* 00000994 000009D4  38 78 00 00 */	addi r3, r24, 0x0
/* 00000998 000009D8  38 80 00 20 */	li r4, 0x20
/* 0000099C 000009DC  48 00 00 01 */	bl DCFlushRange
/* 000009A0 000009E0  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 000009A4 000009E4  54 00 00 2A */	clrrwi r0, r0, 10
/* 000009A8 000009E8  7C 00 9B 78 */	or r0, r0, r19
/* 000009AC 000009EC  B0 19 00 00 */	sth r0, 0x0(r25)
/* 000009B0 000009F0  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 000009B4 000009F4  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000009B8 000009F8  7C 00 93 78 */	or r0, r0, r18
/* 000009BC 000009FC  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 000009C0 00000A00  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 000009C4 00000A04  54 00 00 2A */	clrrwi r0, r0, 10
/* 000009C8 00000A08  60 00 00 00 */	nop
/* 000009CC 00000A0C  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 000009D0 00000A10  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 000009D4 00000A14  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000009D8 00000A18  60 00 02 00 */	ori r0, r0, 0x200
/* 000009DC 00000A1C  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 000009E0 00000A20  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 000009E4 00000A24  60 00 80 00 */	ori r0, r0, 0x8000
/* 000009E8 00000A28  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 000009EC 00000A2C  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 000009F0 00000A30  54 00 00 2A */	clrrwi r0, r0, 10
/* 000009F4 00000A34  60 00 00 00 */	nop
/* 000009F8 00000A38  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 000009FC 00000A3C  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000A00 00000A40  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000A04 00000A44  60 00 00 20 */	ori r0, r0, 0x20
/* 00000A08 00000A48  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000A0C:
/* 00000A0C 00000A4C  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000A10 00000A50  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000A14 00000A54  40 82 FF F8 */	bne .L_00000A0C
/* 00000A18 00000A58  38 78 00 00 */	addi r3, r24, 0x0
/* 00000A1C 00000A5C  38 80 00 20 */	li r4, 0x20
/* 00000A20 00000A60  48 00 00 01 */	bl DCInvalidateRange
/* 00000A24 00000A64  80 18 00 00 */	lwz r0, 0x0(r24)
/* 00000A28 00000A68  80 77 00 00 */	lwz r3, 0x0(r23)
/* 00000A2C 00000A6C  7C 00 18 40 */	cmplw r0, r3
/* 00000A30 00000A70  40 82 00 10 */	bne .L_00000A40
/* 00000A34 00000A74  3A 20 00 02 */	li r17, 0x2
/* 00000A38 00000A78  3E C0 00 80 */	lis r22, 0x80
/* 00000A3C 00000A7C  48 00 00 C8 */	b .L_00000B04
.L_00000A40:
/* 00000A40 00000A80  38 78 00 00 */	addi r3, r24, 0x0
/* 00000A44 00000A84  38 80 00 00 */	li r4, 0x0
/* 00000A48 00000A88  38 A0 00 20 */	li r5, 0x20
/* 00000A4C 00000A8C  48 00 00 01 */	bl memset
/* 00000A50 00000A90  38 78 00 00 */	addi r3, r24, 0x0
/* 00000A54 00000A94  38 80 00 20 */	li r4, 0x20
/* 00000A58 00000A98  48 00 00 01 */	bl DCFlushRange
/* 00000A5C 00000A9C  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 00000A60 00000AA0  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000A64 00000AA4  7C 00 9B 78 */	or r0, r0, r19
/* 00000A68 00000AA8  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00000A6C 00000AAC  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00000A70 00000AB0  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000A74 00000AB4  7C 00 93 78 */	or r0, r0, r18
/* 00000A78 00000AB8  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000A7C 00000ABC  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000A80 00000AC0  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000A84 00000AC4  60 00 00 40 */	ori r0, r0, 0x40
/* 00000A88 00000AC8  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000A8C 00000ACC  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000A90 00000AD0  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000A94 00000AD4  60 00 00 00 */	nop
/* 00000A98 00000AD8  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000A9C 00000ADC  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000AA0 00000AE0  60 00 80 00 */	ori r0, r0, 0x8000
/* 00000AA4 00000AE4  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000AA8 00000AE8  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000AAC 00000AEC  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000AB0 00000AF0  60 00 00 00 */	nop
/* 00000AB4 00000AF4  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000AB8 00000AF8  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000ABC 00000AFC  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000AC0 00000B00  60 00 00 20 */	ori r0, r0, 0x20
/* 00000AC4 00000B04  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000AC8:
/* 00000AC8 00000B08  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000ACC 00000B0C  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000AD0 00000B10  40 82 FF F8 */	bne .L_00000AC8
/* 00000AD4 00000B14  38 78 00 00 */	addi r3, r24, 0x0
/* 00000AD8 00000B18  38 80 00 20 */	li r4, 0x20
/* 00000ADC 00000B1C  48 00 00 01 */	bl DCInvalidateRange
/* 00000AE0 00000B20  80 18 00 00 */	lwz r0, 0x0(r24)
/* 00000AE4 00000B24  80 77 00 00 */	lwz r3, 0x0(r23)
/* 00000AE8 00000B28  7C 00 18 40 */	cmplw r0, r3
/* 00000AEC 00000B2C  40 82 00 10 */	bne .L_00000AFC
/* 00000AF0 00000B30  3A 20 00 03 */	li r17, 0x3
/* 00000AF4 00000B34  3E C0 01 00 */	lis r22, 0x100
/* 00000AF8 00000B38  48 00 00 0C */	b .L_00000B04
.L_00000AFC:
/* 00000AFC 00000B3C  3A 20 00 04 */	li r17, 0x4
/* 00000B00 00000B40  3E C0 02 00 */	lis r22, 0x200
.L_00000B04:
/* 00000B04 00000B44  A0 0E 00 00 */	lhz r0, 0x0(r14)
/* 00000B08 00000B48  56 CF 84 3E */	srwi r15, r22, 16
/* 00000B0C 00000B4C  56 D0 04 3E */	clrlwi r16, r22, 16
/* 00000B10 00000B50  54 00 00 32 */	clrrwi r0, r0, 6
/* 00000B14 00000B54  60 00 00 20 */	ori r0, r0, 0x20
/* 00000B18 00000B58  7C 00 8B 78 */	or r0, r0, r17
/* 00000B1C 00000B5C  B0 0E 00 00 */	sth r0, 0x0(r14)
/* 00000B20 00000B60  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 00000B24 00000B64  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000B28 00000B68  7C 00 A3 78 */	or r0, r0, r20
/* 00000B2C 00000B6C  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00000B30 00000B70  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00000B34 00000B74  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000B38 00000B78  7C 00 AB 78 */	or r0, r0, r21
/* 00000B3C 00000B7C  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000B40 00000B80  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000B44 00000B84  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000B48 00000B88  7C 00 7B 78 */	or r0, r0, r15
/* 00000B4C 00000B8C  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000B50 00000B90  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000B54 00000B94  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000B58 00000B98  7C 00 83 78 */	or r0, r0, r16
/* 00000B5C 00000B9C  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000B60 00000BA0  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000B64 00000BA4  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 00000B68 00000BA8  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000B6C 00000BAC  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000B70 00000BB0  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000B74 00000BB4  60 00 00 00 */	nop
/* 00000B78 00000BB8  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000B7C 00000BBC  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000B80 00000BC0  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000B84 00000BC4  60 00 00 20 */	ori r0, r0, 0x20
/* 00000B88 00000BC8  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000B8C:
/* 00000B8C 00000BCC  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000B90 00000BD0  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000B94 00000BD4  40 82 FF F8 */	bne .L_00000B8C
/* 00000B98 00000BD8  3C 76 00 20 */	addis r3, r22, 0x20
/* 00000B9C 00000BDC  A0 99 00 00 */	lhz r4, 0x0(r25)
/* 00000BA0 00000BE0  54 60 84 3E */	srwi r0, r3, 16
/* 00000BA4 00000BE4  90 01 00 E0 */	stw r0, 0xe0(r1)
/* 00000BA8 00000BE8  54 80 00 2A */	clrrwi r0, r4, 10
/* 00000BAC 00000BEC  7C 00 A3 78 */	or r0, r0, r20
/* 00000BB0 00000BF0  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00000BB4 00000BF4  54 60 04 3E */	clrlwi r0, r3, 16
/* 00000BB8 00000BF8  90 01 00 EC */	stw r0, 0xec(r1)
/* 00000BBC 00000BFC  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00000BC0 00000C00  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000BC4 00000C04  7C 00 AB 78 */	or r0, r0, r21
/* 00000BC8 00000C08  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000BCC 00000C0C  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000BD0 00000C10  54 03 00 2A */	clrrwi r3, r0, 10
/* 00000BD4 00000C14  80 01 00 E0 */	lwz r0, 0xe0(r1)
/* 00000BD8 00000C18  7C 60 03 78 */	or r0, r3, r0
/* 00000BDC 00000C1C  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000BE0 00000C20  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000BE4 00000C24  54 03 06 DE */	rlwinm r3, r0, 0, 27, 15
/* 00000BE8 00000C28  80 01 00 EC */	lwz r0, 0xec(r1)
/* 00000BEC 00000C2C  7C 60 03 78 */	or r0, r3, r0
/* 00000BF0 00000C30  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000BF4 00000C34  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000BF8 00000C38  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 00000BFC 00000C3C  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000C00 00000C40  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000C04 00000C44  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000C08 00000C48  60 00 00 00 */	nop
/* 00000C0C 00000C4C  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000C10 00000C50  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000C14 00000C54  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000C18 00000C58  60 00 00 20 */	ori r0, r0, 0x20
/* 00000C1C 00000C5C  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000C20:
/* 00000C20 00000C60  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000C24 00000C64  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000C28 00000C68  40 82 FF F8 */	bne .L_00000C20
/* 00000C2C 00000C6C  3C 76 01 00 */	addis r3, r22, 0x100
/* 00000C30 00000C70  A0 99 00 00 */	lhz r4, 0x0(r25)
/* 00000C34 00000C74  54 60 84 3E */	srwi r0, r3, 16
/* 00000C38 00000C78  90 01 00 DC */	stw r0, 0xdc(r1)
/* 00000C3C 00000C7C  54 80 00 2A */	clrrwi r0, r4, 10
/* 00000C40 00000C80  7C 00 A3 78 */	or r0, r0, r20
/* 00000C44 00000C84  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00000C48 00000C88  54 60 04 3E */	clrlwi r0, r3, 16
/* 00000C4C 00000C8C  90 01 00 F0 */	stw r0, 0xf0(r1)
/* 00000C50 00000C90  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00000C54 00000C94  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000C58 00000C98  7C 00 AB 78 */	or r0, r0, r21
/* 00000C5C 00000C9C  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000C60 00000CA0  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000C64 00000CA4  54 03 00 2A */	clrrwi r3, r0, 10
/* 00000C68 00000CA8  80 01 00 DC */	lwz r0, 0xdc(r1)
/* 00000C6C 00000CAC  7C 60 03 78 */	or r0, r3, r0
/* 00000C70 00000CB0  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000C74 00000CB4  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000C78 00000CB8  54 03 06 DE */	rlwinm r3, r0, 0, 27, 15
/* 00000C7C 00000CBC  80 01 00 F0 */	lwz r0, 0xf0(r1)
/* 00000C80 00000CC0  7C 60 03 78 */	or r0, r3, r0
/* 00000C84 00000CC4  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000C88 00000CC8  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000C8C 00000CCC  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 00000C90 00000CD0  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000C94 00000CD4  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000C98 00000CD8  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000C9C 00000CDC  60 00 00 00 */	nop
/* 00000CA0 00000CE0  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000CA4 00000CE4  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000CA8 00000CE8  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000CAC 00000CEC  60 00 00 20 */	ori r0, r0, 0x20
/* 00000CB0 00000CF0  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000CB4:
/* 00000CB4 00000CF4  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000CB8 00000CF8  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000CBC 00000CFC  40 82 FF F8 */	bne .L_00000CB4
/* 00000CC0 00000D00  38 76 02 00 */	addi r3, r22, 0x200
/* 00000CC4 00000D04  A0 99 00 00 */	lhz r4, 0x0(r25)
/* 00000CC8 00000D08  54 60 84 3E */	srwi r0, r3, 16
/* 00000CCC 00000D0C  90 01 00 D8 */	stw r0, 0xd8(r1)
/* 00000CD0 00000D10  54 80 00 2A */	clrrwi r0, r4, 10
/* 00000CD4 00000D14  7C 00 A3 78 */	or r0, r0, r20
/* 00000CD8 00000D18  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00000CDC 00000D1C  54 60 04 3E */	clrlwi r0, r3, 16
/* 00000CE0 00000D20  90 01 00 F4 */	stw r0, 0xf4(r1)
/* 00000CE4 00000D24  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00000CE8 00000D28  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000CEC 00000D2C  7C 00 AB 78 */	or r0, r0, r21
/* 00000CF0 00000D30  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000CF4 00000D34  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000CF8 00000D38  54 03 00 2A */	clrrwi r3, r0, 10
/* 00000CFC 00000D3C  80 01 00 D8 */	lwz r0, 0xd8(r1)
/* 00000D00 00000D40  7C 60 03 78 */	or r0, r3, r0
/* 00000D04 00000D44  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000D08 00000D48  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000D0C 00000D4C  54 03 06 DE */	rlwinm r3, r0, 0, 27, 15
/* 00000D10 00000D50  80 01 00 F4 */	lwz r0, 0xf4(r1)
/* 00000D14 00000D54  7C 60 03 78 */	or r0, r3, r0
/* 00000D18 00000D58  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000D1C 00000D5C  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000D20 00000D60  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 00000D24 00000D64  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000D28 00000D68  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000D2C 00000D6C  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000D30 00000D70  60 00 00 00 */	nop
/* 00000D34 00000D74  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000D38 00000D78  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000D3C 00000D7C  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000D40 00000D80  60 00 00 20 */	ori r0, r0, 0x20
/* 00000D44 00000D84  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000D48:
/* 00000D48 00000D88  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000D4C 00000D8C  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000D50 00000D90  40 82 FF F8 */	bne .L_00000D48
/* 00000D54 00000D94  3C 76 00 40 */	addis r3, r22, 0x40
/* 00000D58 00000D98  A0 99 00 00 */	lhz r4, 0x0(r25)
/* 00000D5C 00000D9C  54 60 84 3E */	srwi r0, r3, 16
/* 00000D60 00000DA0  90 01 00 D4 */	stw r0, 0xd4(r1)
/* 00000D64 00000DA4  54 80 00 2A */	clrrwi r0, r4, 10
/* 00000D68 00000DA8  7C 00 A3 78 */	or r0, r0, r20
/* 00000D6C 00000DAC  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00000D70 00000DB0  54 74 04 3E */	clrlwi r20, r3, 16
/* 00000D74 00000DB4  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00000D78 00000DB8  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000D7C 00000DBC  7C 00 AB 78 */	or r0, r0, r21
/* 00000D80 00000DC0  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000D84 00000DC4  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000D88 00000DC8  54 03 00 2A */	clrrwi r3, r0, 10
/* 00000D8C 00000DCC  80 01 00 D4 */	lwz r0, 0xd4(r1)
/* 00000D90 00000DD0  7C 60 03 78 */	or r0, r3, r0
/* 00000D94 00000DD4  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000D98 00000DD8  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000D9C 00000DDC  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000DA0 00000DE0  7C 00 A3 78 */	or r0, r0, r20
/* 00000DA4 00000DE4  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000DA8 00000DE8  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000DAC 00000DEC  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 00000DB0 00000DF0  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000DB4 00000DF4  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000DB8 00000DF8  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000DBC 00000DFC  60 00 00 00 */	nop
/* 00000DC0 00000E00  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000DC4 00000E04  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000DC8 00000E08  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000DCC 00000E0C  60 00 00 20 */	ori r0, r0, 0x20
/* 00000DD0 00000E10  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000DD4:
/* 00000DD4 00000E14  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000DD8 00000E18  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000DDC 00000E1C  40 82 FF F8 */	bne .L_00000DD4
/* 00000DE0 00000E20  38 78 00 00 */	addi r3, r24, 0x0
/* 00000DE4 00000E24  38 80 00 00 */	li r4, 0x0
/* 00000DE8 00000E28  38 A0 00 20 */	li r5, 0x20
/* 00000DEC 00000E2C  48 00 00 01 */	bl memset
/* 00000DF0 00000E30  38 78 00 00 */	addi r3, r24, 0x0
/* 00000DF4 00000E34  38 80 00 20 */	li r4, 0x20
/* 00000DF8 00000E38  48 00 00 01 */	bl DCFlushRange
/* 00000DFC 00000E3C  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 00000E00 00000E40  54 03 00 2A */	clrrwi r3, r0, 10
/* 00000E04 00000E44  80 01 00 E4 */	lwz r0, 0xe4(r1)
/* 00000E08 00000E48  7C 60 03 78 */	or r0, r3, r0
/* 00000E0C 00000E4C  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00000E10 00000E50  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00000E14 00000E54  54 03 06 DE */	rlwinm r3, r0, 0, 27, 15
/* 00000E18 00000E58  80 01 00 E8 */	lwz r0, 0xe8(r1)
/* 00000E1C 00000E5C  7C 60 03 78 */	or r0, r3, r0
/* 00000E20 00000E60  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000E24 00000E64  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000E28 00000E68  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000E2C 00000E6C  7C 00 7B 78 */	or r0, r0, r15
/* 00000E30 00000E70  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000E34 00000E74  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000E38 00000E78  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000E3C 00000E7C  7C 00 83 78 */	or r0, r0, r16
/* 00000E40 00000E80  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000E44 00000E84  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000E48 00000E88  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 00000E4C 00000E8C  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000E50 00000E90  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000E54 00000E94  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000E58 00000E98  60 00 00 00 */	nop
/* 00000E5C 00000E9C  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000E60 00000EA0  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000E64 00000EA4  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000E68 00000EA8  60 00 00 20 */	ori r0, r0, 0x20
/* 00000E6C 00000EAC  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000E70:
/* 00000E70 00000EB0  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000E74 00000EB4  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000E78 00000EB8  40 82 FF F8 */	bne .L_00000E70
/* 00000E7C 00000EBC  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 00000E80 00000EC0  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000E84 00000EC4  7C 00 9B 78 */	or r0, r0, r19
/* 00000E88 00000EC8  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00000E8C 00000ECC  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00000E90 00000ED0  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000E94 00000ED4  7C 00 93 78 */	or r0, r0, r18
/* 00000E98 00000ED8  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000E9C 00000EDC  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000EA0 00000EE0  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000EA4 00000EE4  7C 00 7B 78 */	or r0, r0, r15
/* 00000EA8 00000EE8  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000EAC 00000EEC  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000EB0 00000EF0  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000EB4 00000EF4  7C 00 83 78 */	or r0, r0, r16
/* 00000EB8 00000EF8  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000EBC 00000EFC  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000EC0 00000F00  60 00 80 00 */	ori r0, r0, 0x8000
/* 00000EC4 00000F04  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000EC8 00000F08  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000ECC 00000F0C  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000ED0 00000F10  60 00 00 00 */	nop
/* 00000ED4 00000F14  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000ED8 00000F18  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000EDC 00000F1C  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000EE0 00000F20  60 00 00 20 */	ori r0, r0, 0x20
/* 00000EE4 00000F24  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000EE8:
/* 00000EE8 00000F28  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000EEC 00000F2C  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000EF0 00000F30  40 82 FF F8 */	bne .L_00000EE8
/* 00000EF4 00000F34  38 78 00 00 */	addi r3, r24, 0x0
/* 00000EF8 00000F38  38 80 00 20 */	li r4, 0x20
/* 00000EFC 00000F3C  48 00 00 01 */	bl DCInvalidateRange
/* 00000F00 00000F40  80 18 00 00 */	lwz r0, 0x0(r24)
/* 00000F04 00000F44  80 77 00 00 */	lwz r3, 0x0(r23)
/* 00000F08 00000F48  7C 00 18 40 */	cmplw r0, r3
/* 00000F0C 00000F4C  40 82 03 24 */	bne .L_00001230
/* 00000F10 00000F50  38 78 00 00 */	addi r3, r24, 0x0
/* 00000F14 00000F54  38 80 00 00 */	li r4, 0x0
/* 00000F18 00000F58  38 A0 00 20 */	li r5, 0x20
/* 00000F1C 00000F5C  48 00 00 01 */	bl memset
/* 00000F20 00000F60  38 78 00 00 */	addi r3, r24, 0x0
/* 00000F24 00000F64  38 80 00 20 */	li r4, 0x20
/* 00000F28 00000F68  48 00 00 01 */	bl DCFlushRange
/* 00000F2C 00000F6C  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 00000F30 00000F70  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000F34 00000F74  7C 00 9B 78 */	or r0, r0, r19
/* 00000F38 00000F78  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00000F3C 00000F7C  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00000F40 00000F80  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000F44 00000F84  7C 00 93 78 */	or r0, r0, r18
/* 00000F48 00000F88  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00000F4C 00000F8C  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00000F50 00000F90  54 03 00 2A */	clrrwi r3, r0, 10
/* 00000F54 00000F94  80 01 00 E0 */	lwz r0, 0xe0(r1)
/* 00000F58 00000F98  7C 60 03 78 */	or r0, r3, r0
/* 00000F5C 00000F9C  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00000F60 00000FA0  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00000F64 00000FA4  54 03 06 DE */	rlwinm r3, r0, 0, 27, 15
/* 00000F68 00000FA8  80 01 00 EC */	lwz r0, 0xec(r1)
/* 00000F6C 00000FAC  7C 60 03 78 */	or r0, r3, r0
/* 00000F70 00000FB0  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00000F74 00000FB4  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000F78 00000FB8  60 00 80 00 */	ori r0, r0, 0x8000
/* 00000F7C 00000FBC  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000F80 00000FC0  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00000F84 00000FC4  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000F88 00000FC8  60 00 00 00 */	nop
/* 00000F8C 00000FCC  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00000F90 00000FD0  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00000F94 00000FD4  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00000F98 00000FD8  60 00 00 20 */	ori r0, r0, 0x20
/* 00000F9C 00000FDC  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00000FA0:
/* 00000FA0 00000FE0  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000FA4 00000FE4  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00000FA8 00000FE8  40 82 FF F8 */	bne .L_00000FA0
/* 00000FAC 00000FEC  38 78 00 00 */	addi r3, r24, 0x0
/* 00000FB0 00000FF0  38 80 00 20 */	li r4, 0x20
/* 00000FB4 00000FF4  48 00 00 01 */	bl DCInvalidateRange
/* 00000FB8 00000FF8  80 18 00 00 */	lwz r0, 0x0(r24)
/* 00000FBC 00000FFC  80 77 00 00 */	lwz r3, 0x0(r23)
/* 00000FC0 00001000  7C 00 18 40 */	cmplw r0, r3
/* 00000FC4 00001004  40 82 00 0C */	bne .L_00000FD0
/* 00000FC8 00001008  3E D6 00 20 */	addis r22, r22, 0x20
/* 00000FCC 0000100C  48 00 02 54 */	b .L_00001220
.L_00000FD0:
/* 00000FD0 00001010  38 78 00 00 */	addi r3, r24, 0x0
/* 00000FD4 00001014  38 80 00 00 */	li r4, 0x0
/* 00000FD8 00001018  38 A0 00 20 */	li r5, 0x20
/* 00000FDC 0000101C  48 00 00 01 */	bl memset
/* 00000FE0 00001020  38 78 00 00 */	addi r3, r24, 0x0
/* 00000FE4 00001024  38 80 00 20 */	li r4, 0x20
/* 00000FE8 00001028  48 00 00 01 */	bl DCFlushRange
/* 00000FEC 0000102C  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 00000FF0 00001030  54 00 00 2A */	clrrwi r0, r0, 10
/* 00000FF4 00001034  7C 00 9B 78 */	or r0, r0, r19
/* 00000FF8 00001038  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00000FFC 0000103C  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 00001000 00001040  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00001004 00001044  7C 00 93 78 */	or r0, r0, r18
/* 00001008 00001048  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 0000100C 0000104C  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 00001010 00001050  54 03 00 2A */	clrrwi r3, r0, 10
/* 00001014 00001054  80 01 00 DC */	lwz r0, 0xdc(r1)
/* 00001018 00001058  7C 60 03 78 */	or r0, r3, r0
/* 0000101C 0000105C  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 00001020 00001060  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 00001024 00001064  54 03 06 DE */	rlwinm r3, r0, 0, 27, 15
/* 00001028 00001068  80 01 00 F0 */	lwz r0, 0xf0(r1)
/* 0000102C 0000106C  7C 60 03 78 */	or r0, r3, r0
/* 00001030 00001070  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 00001034 00001074  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00001038 00001078  60 00 80 00 */	ori r0, r0, 0x8000
/* 0000103C 0000107C  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00001040 00001080  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00001044 00001084  54 00 00 2A */	clrrwi r0, r0, 10
/* 00001048 00001088  60 00 00 00 */	nop
/* 0000104C 0000108C  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00001050 00001090  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00001054 00001094  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00001058 00001098  60 00 00 20 */	ori r0, r0, 0x20
/* 0000105C 0000109C  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00001060:
/* 00001060 000010A0  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00001064 000010A4  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 00001068 000010A8  40 82 FF F8 */	bne .L_00001060
/* 0000106C 000010AC  38 78 00 00 */	addi r3, r24, 0x0
/* 00001070 000010B0  38 80 00 20 */	li r4, 0x20
/* 00001074 000010B4  48 00 00 01 */	bl DCInvalidateRange
/* 00001078 000010B8  80 18 00 00 */	lwz r0, 0x0(r24)
/* 0000107C 000010BC  80 77 00 00 */	lwz r3, 0x0(r23)
/* 00001080 000010C0  7C 00 18 40 */	cmplw r0, r3
/* 00001084 000010C4  40 82 00 10 */	bne .L_00001094
/* 00001088 000010C8  62 31 00 08 */	ori r17, r17, 0x8
/* 0000108C 000010CC  3E D6 00 40 */	addis r22, r22, 0x40
/* 00001090 000010D0  48 00 01 90 */	b .L_00001220
.L_00001094:
/* 00001094 000010D4  38 78 00 00 */	addi r3, r24, 0x0
/* 00001098 000010D8  38 80 00 00 */	li r4, 0x0
/* 0000109C 000010DC  38 A0 00 20 */	li r5, 0x20
/* 000010A0 000010E0  48 00 00 01 */	bl memset
/* 000010A4 000010E4  38 78 00 00 */	addi r3, r24, 0x0
/* 000010A8 000010E8  38 80 00 20 */	li r4, 0x20
/* 000010AC 000010EC  48 00 00 01 */	bl DCFlushRange
/* 000010B0 000010F0  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 000010B4 000010F4  54 00 00 2A */	clrrwi r0, r0, 10
/* 000010B8 000010F8  7C 00 9B 78 */	or r0, r0, r19
/* 000010BC 000010FC  B0 19 00 00 */	sth r0, 0x0(r25)
/* 000010C0 00001100  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 000010C4 00001104  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000010C8 00001108  7C 00 93 78 */	or r0, r0, r18
/* 000010CC 0000110C  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 000010D0 00001110  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 000010D4 00001114  54 03 00 2A */	clrrwi r3, r0, 10
/* 000010D8 00001118  80 01 00 D8 */	lwz r0, 0xd8(r1)
/* 000010DC 0000111C  7C 60 03 78 */	or r0, r3, r0
/* 000010E0 00001120  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 000010E4 00001124  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 000010E8 00001128  54 03 06 DE */	rlwinm r3, r0, 0, 27, 15
/* 000010EC 0000112C  80 01 00 F4 */	lwz r0, 0xf4(r1)
/* 000010F0 00001130  7C 60 03 78 */	or r0, r3, r0
/* 000010F4 00001134  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 000010F8 00001138  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 000010FC 0000113C  60 00 80 00 */	ori r0, r0, 0x8000
/* 00001100 00001140  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00001104 00001144  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 00001108 00001148  54 00 00 2A */	clrrwi r0, r0, 10
/* 0000110C 0000114C  60 00 00 00 */	nop
/* 00001110 00001150  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 00001114 00001154  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 00001118 00001158  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 0000111C 0000115C  60 00 00 20 */	ori r0, r0, 0x20
/* 00001120 00001160  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_00001124:
/* 00001124 00001164  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00001128 00001168  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 0000112C 0000116C  40 82 FF F8 */	bne .L_00001124
/* 00001130 00001170  38 78 00 00 */	addi r3, r24, 0x0
/* 00001134 00001174  38 80 00 20 */	li r4, 0x20
/* 00001138 00001178  48 00 00 01 */	bl DCInvalidateRange
/* 0000113C 0000117C  80 18 00 00 */	lwz r0, 0x0(r24)
/* 00001140 00001180  80 77 00 00 */	lwz r3, 0x0(r23)
/* 00001144 00001184  7C 00 18 40 */	cmplw r0, r3
/* 00001148 00001188  40 82 00 10 */	bne .L_00001158
/* 0000114C 0000118C  62 31 00 10 */	ori r17, r17, 0x10
/* 00001150 00001190  3E D6 00 80 */	addis r22, r22, 0x80
/* 00001154 00001194  48 00 00 CC */	b .L_00001220
.L_00001158:
/* 00001158 00001198  38 78 00 00 */	addi r3, r24, 0x0
/* 0000115C 0000119C  38 80 00 00 */	li r4, 0x0
/* 00001160 000011A0  38 A0 00 20 */	li r5, 0x20
/* 00001164 000011A4  48 00 00 01 */	bl memset
/* 00001168 000011A8  38 78 00 00 */	addi r3, r24, 0x0
/* 0000116C 000011AC  38 80 00 20 */	li r4, 0x20
/* 00001170 000011B0  48 00 00 01 */	bl DCFlushRange
/* 00001174 000011B4  A0 19 00 00 */	lhz r0, 0x0(r25)
/* 00001178 000011B8  80 61 00 D4 */	lwz r3, 0xd4(r1)
/* 0000117C 000011BC  54 00 00 2A */	clrrwi r0, r0, 10
/* 00001180 000011C0  7C 00 9B 78 */	or r0, r0, r19
/* 00001184 000011C4  B0 19 00 00 */	sth r0, 0x0(r25)
/* 00001188 000011C8  A0 1A 00 00 */	lhz r0, 0x0(r26)
/* 0000118C 000011CC  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 00001190 000011D0  7C 00 93 78 */	or r0, r0, r18
/* 00001194 000011D4  B0 1A 00 00 */	sth r0, 0x0(r26)
/* 00001198 000011D8  A0 1B 00 00 */	lhz r0, 0x0(r27)
/* 0000119C 000011DC  54 00 00 2A */	clrrwi r0, r0, 10
/* 000011A0 000011E0  7C 00 1B 78 */	or r0, r0, r3
/* 000011A4 000011E4  B0 1B 00 00 */	sth r0, 0x0(r27)
/* 000011A8 000011E8  A0 1C 00 00 */	lhz r0, 0x0(r28)
/* 000011AC 000011EC  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000011B0 000011F0  7C 00 A3 78 */	or r0, r0, r20
/* 000011B4 000011F4  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 000011B8 000011F8  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 000011BC 000011FC  60 00 80 00 */	ori r0, r0, 0x8000
/* 000011C0 00001200  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 000011C4 00001204  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 000011C8 00001208  54 00 00 2A */	clrrwi r0, r0, 10
/* 000011CC 0000120C  60 00 00 00 */	nop
/* 000011D0 00001210  B0 1E 00 00 */	sth r0, 0x0(r30)
/* 000011D4 00001214  A0 1D 00 00 */	lhz r0, 0x0(r29)
/* 000011D8 00001218  54 00 06 DE */	rlwinm r0, r0, 0, 27, 15
/* 000011DC 0000121C  60 00 00 20 */	ori r0, r0, 0x20
/* 000011E0 00001220  B0 1D 00 00 */	sth r0, 0x0(r29)
.L_000011E4:
/* 000011E4 00001224  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 000011E8 00001228  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 000011EC 0000122C  40 82 FF F8 */	bne .L_000011E4
/* 000011F0 00001230  38 78 00 00 */	addi r3, r24, 0x0
/* 000011F4 00001234  38 80 00 20 */	li r4, 0x20
/* 000011F8 00001238  48 00 00 01 */	bl DCInvalidateRange
/* 000011FC 0000123C  80 78 00 00 */	lwz r3, 0x0(r24)
/* 00001200 00001240  80 17 00 00 */	lwz r0, 0x0(r23)
/* 00001204 00001244  7C 03 00 40 */	cmplw r3, r0
/* 00001208 00001248  40 82 00 10 */	bne .L_00001218
/* 0000120C 0000124C  62 31 00 18 */	ori r17, r17, 0x18
/* 00001210 00001250  3E D6 01 00 */	addis r22, r22, 0x100
/* 00001214 00001254  48 00 00 0C */	b .L_00001220
.L_00001218:
/* 00001218 00001258  62 31 00 20 */	ori r17, r17, 0x20
/* 0000121C 0000125C  3E D6 02 00 */	addis r22, r22, 0x200
.L_00001220:
/* 00001220 00001260  A0 0E 00 00 */	lhz r0, 0x0(r14)
/* 00001224 00001264  54 00 00 32 */	clrrwi r0, r0, 6
/* 00001228 00001268  7C 00 8B 78 */	or r0, r0, r17
/* 0000122C 0000126C  B0 0E 00 00 */	sth r0, 0x0(r14)
.L_00001230:
/* 00001230 00001270  3C 60 C0 00 */	lis r3, 0xc000
/* 00001234 00001274  92 C3 00 D0 */	stw r22, 0xd0(r3)
/* 00001238 00001278  92 C0 00 00 */	stw r22, __AR_Size@sda21(r0)
/* 0000123C 0000127C  80 01 01 44 */	lwz r0, 0x144(r1)
/* 00001240 00001280  B9 C1 00 F8 */	lmw r14, 0xf8(r1)
/* 00001244 00001284  38 21 01 40 */	addi r1, r1, 0x140
/* 00001248 00001288  7C 08 03 A6 */	mtlr r0
/* 0000124C 0000128C  4E 80 00 20 */	blr
.endfn __ARChecksize

# 0x00000000 - 0x00000018
.section .sbss, "wa", @nobits
.balign 8

.obj __AR_Callback, global
	.skip 0x4
.endobj __AR_Callback

.obj __AR_Size, global
	.skip 0x4
.endobj __AR_Size

.obj __AR_StackPointer, global
	.skip 0x4
.endobj __AR_StackPointer

.obj __AR_FreeBlocks, global
	.skip 0x4
.endobj __AR_FreeBlocks

.obj __AR_BlockLength, global
	.skip 0x4
.endobj __AR_BlockLength

.obj __AR_init_flag, global
	.skip 0x4
.endobj __AR_init_flag

# 0x00000000 - 0x00000010
.section .sdata2, "a"
.balign 8

.obj "@25", local
	.4byte 0x43440000
.endobj "@25"

.obj "@26", local
	.4byte 0x4D411E7A
.endobj "@26"

.obj "@28", local
	.4byte 0x43300000
	.4byte 0x00000000
.endobj "@28"
