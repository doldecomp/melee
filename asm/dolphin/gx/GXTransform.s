.include "macros.inc"
.file "GXTransform.c"

# 0x00000000 - 0x000007B4
.text
.balign 4

.fn GXProject, global
/* 00000000 00000040  C0 83 00 00 */	lfs f4, 0x0(r3)
/* 00000004 00000044  C0 03 00 04 */	lfs f0, 0x4(r3)
/* 00000008 00000048  C0 C3 00 10 */	lfs f6, 0x10(r3)
/* 0000000C 0000004C  ED 44 00 72 */	fmuls f10, f4, f1
/* 00000010 00000050  C0 A3 00 14 */	lfs f5, 0x14(r3)
/* 00000014 00000054  ED 20 00 B2 */	fmuls f9, f0, f2
/* 00000018 00000058  C0 83 00 20 */	lfs f4, 0x20(r3)
/* 0000001C 0000005C  C0 03 00 24 */	lfs f0, 0x24(r3)
/* 00000020 00000060  C1 63 00 08 */	lfs f11, 0x8(r3)
/* 00000024 00000064  EC E6 00 72 */	fmuls f7, f6, f1
/* 00000028 00000068  EC C5 00 B2 */	fmuls f6, f5, f2
/* 0000002C 0000006C  C1 03 00 18 */	lfs f8, 0x18(r3)
/* 00000030 00000070  C0 A3 00 28 */	lfs f5, 0x28(r3)
/* 00000034 00000074  EC 84 00 72 */	fmuls f4, f4, f1
/* 00000038 00000078  EC 40 00 B2 */	fmuls f2, f0, f2
/* 0000003C 0000007C  ED 6B 00 F2 */	fmuls f11, f11, f3
/* 00000040 00000080  C0 20 00 00 */	lfs f1, "@65"@sda21(r0)
/* 00000044 00000084  ED 2A 48 2A */	fadds f9, f10, f9
/* 00000048 00000088  C0 04 00 00 */	lfs f0, 0x0(r4)
/* 0000004C 0000008C  ED 08 00 F2 */	fmuls f8, f8, f3
/* 00000050 00000090  EC C7 30 2A */	fadds f6, f7, f6
/* 00000054 00000094  C1 43 00 0C */	lfs f10, 0xc(r3)
/* 00000058 00000098  ED 2B 48 2A */	fadds f9, f11, f9
/* 0000005C 0000009C  C0 E3 00 1C */	lfs f7, 0x1c(r3)
/* 00000060 000000A0  EC C8 30 2A */	fadds f6, f8, f6
/* 00000064 000000A4  EC 65 00 F2 */	fmuls f3, f5, f3
/* 00000068 000000A8  C0 A3 00 2C */	lfs f5, 0x2c(r3)
/* 0000006C 000000AC  EC 44 10 2A */	fadds f2, f4, f2
/* 00000070 000000B0  FC 01 00 00 */	fcmpu cr0, f1, f0
/* 00000074 000000B4  ED 0A 48 2A */	fadds f8, f10, f9
/* 00000078 000000B8  EC 03 10 2A */	fadds f0, f3, f2
/* 0000007C 000000BC  EC E7 30 2A */	fadds f7, f7, f6
/* 00000080 000000C0  ED 25 00 2A */	fadds f9, f5, f0
/* 00000084 000000C4  40 82 00 4C */	bne .L_000000D0
/* 00000088 000000C8  FC 00 48 50 */	fneg f0, f9
/* 0000008C 000000CC  C0 20 00 00 */	lfs f1, "@67"@sda21(r0)
/* 00000090 000000D0  C0 C4 00 04 */	lfs f6, 0x4(r4)
/* 00000094 000000D4  C0 A4 00 08 */	lfs f5, 0x8(r4)
/* 00000098 000000D8  EC 01 00 24 */	fdivs f0, f1, f0
/* 0000009C 000000DC  C0 84 00 0C */	lfs f4, 0xc(r4)
/* 000000A0 000000E0  C0 64 00 10 */	lfs f3, 0x10(r4)
/* 000000A4 000000E4  C0 24 00 14 */	lfs f1, 0x14(r4)
/* 000000A8 000000E8  C0 44 00 18 */	lfs f2, 0x18(r4)
/* 000000AC 000000EC  EC 29 00 72 */	fmuls f1, f9, f1
/* 000000B0 000000F0  EC C8 01 B2 */	fmuls f6, f8, f6
/* 000000B4 000000F4  EC A9 01 72 */	fmuls f5, f9, f5
/* 000000B8 000000F8  EC 87 01 32 */	fmuls f4, f7, f4
/* 000000BC 000000FC  EC 69 00 F2 */	fmuls f3, f9, f3
/* 000000C0 00000100  EC C6 28 2A */	fadds f6, f6, f5
/* 000000C4 00000104  EC E2 08 2A */	fadds f7, f2, f1
/* 000000C8 00000108  EC 64 18 2A */	fadds f3, f4, f3
/* 000000CC 0000010C  48 00 00 38 */	b .L_00000104
.L_000000D0:
/* 000000D0 00000110  C0 44 00 04 */	lfs f2, 0x4(r4)
/* 000000D4 00000114  C0 24 00 0C */	lfs f1, 0xc(r4)
/* 000000D8 00000118  C0 04 00 14 */	lfs f0, 0x14(r4)
/* 000000DC 0000011C  EC A8 00 B2 */	fmuls f5, f8, f2
/* 000000E0 00000120  C0 C4 00 08 */	lfs f6, 0x8(r4)
/* 000000E4 00000124  EC 67 00 72 */	fmuls f3, f7, f1
/* 000000E8 00000128  C0 84 00 10 */	lfs f4, 0x10(r4)
/* 000000EC 0000012C  EC 29 00 32 */	fmuls f1, f9, f0
/* 000000F0 00000130  C0 44 00 18 */	lfs f2, 0x18(r4)
/* 000000F4 00000134  EC C6 28 2A */	fadds f6, f6, f5
/* 000000F8 00000138  EC 64 18 2A */	fadds f3, f4, f3
/* 000000FC 0000013C  C0 00 00 00 */	lfs f0, "@67"@sda21(r0)
/* 00000100 00000140  EC E2 08 2A */	fadds f7, f2, f1
.L_00000104:
/* 00000104 00000144  C0 85 00 08 */	lfs f4, 0x8(r5)
/* 00000108 00000148  FC 20 18 50 */	fneg f1, f3
/* 0000010C 0000014C  C0 A0 00 00 */	lfs f5, "@69"@sda21(r0)
/* 00000110 00000150  EC 46 01 32 */	fmuls f2, f6, f4
/* 00000114 00000154  C0 65 00 00 */	lfs f3, 0x0(r5)
/* 00000118 00000158  EC 84 01 72 */	fmuls f4, f4, f5
/* 0000011C 0000015C  EC 42 01 72 */	fmuls f2, f2, f5
/* 00000120 00000160  EC 40 00 B2 */	fmuls f2, f0, f2
/* 00000124 00000164  EC 43 10 2A */	fadds f2, f3, f2
/* 00000128 00000168  EC 44 10 2A */	fadds f2, f4, f2
/* 0000012C 0000016C  D0 46 00 00 */	stfs f2, 0x0(r6)
/* 00000130 00000170  C0 65 00 0C */	lfs f3, 0xc(r5)
/* 00000134 00000174  C0 45 00 04 */	lfs f2, 0x4(r5)
/* 00000138 00000178  EC 21 00 F2 */	fmuls f1, f1, f3
/* 0000013C 0000017C  EC 63 01 72 */	fmuls f3, f3, f5
/* 00000140 00000180  EC 21 01 72 */	fmuls f1, f1, f5
/* 00000144 00000184  EC 20 00 72 */	fmuls f1, f0, f1
/* 00000148 00000188  EC 22 08 2A */	fadds f1, f2, f1
/* 0000014C 0000018C  EC 23 08 2A */	fadds f1, f3, f1
/* 00000150 00000190  D0 27 00 00 */	stfs f1, 0x0(r7)
/* 00000154 00000194  C0 45 00 14 */	lfs f2, 0x14(r5)
/* 00000158 00000198  C0 25 00 10 */	lfs f1, 0x10(r5)
/* 0000015C 0000019C  EC 22 08 28 */	fsubs f1, f2, f1
/* 00000160 000001A0  EC 27 00 72 */	fmuls f1, f7, f1
/* 00000164 000001A4  EC 00 00 72 */	fmuls f0, f0, f1
/* 00000168 000001A8  EC 02 00 2A */	fadds f0, f2, f0
/* 0000016C 000001AC  D0 08 00 00 */	stfs f0, 0x0(r8)
/* 00000170 000001B0  4E 80 00 20 */	blr
.endfn GXProject

.fn GXSetProjection, global
/* 00000174 000001B4  80 A0 00 00 */	lwz r5, gx@sda21(r0)
/* 00000178 000001B8  2C 04 00 01 */	cmpwi r4, 0x1
/* 0000017C 000001BC  90 85 04 20 */	stw r4, 0x420(r5)
/* 00000180 000001C0  C0 03 00 00 */	lfs f0, 0x0(r3)
/* 00000184 000001C4  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 00000188 000001C8  D0 04 04 24 */	stfs f0, 0x424(r4)
/* 0000018C 000001CC  C0 03 00 14 */	lfs f0, 0x14(r3)
/* 00000190 000001D0  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 00000194 000001D4  D0 04 04 2C */	stfs f0, 0x42c(r4)
/* 00000198 000001D8  C0 03 00 28 */	lfs f0, 0x28(r3)
/* 0000019C 000001DC  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000001A0 000001E0  D0 04 04 34 */	stfs f0, 0x434(r4)
/* 000001A4 000001E4  C0 03 00 2C */	lfs f0, 0x2c(r3)
/* 000001A8 000001E8  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000001AC 000001EC  D0 04 04 38 */	stfs f0, 0x438(r4)
/* 000001B0 000001F0  40 82 00 20 */	bne .L_000001D0
/* 000001B4 000001F4  C0 03 00 0C */	lfs f0, 0xc(r3)
/* 000001B8 000001F8  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000001BC 000001FC  D0 04 04 28 */	stfs f0, 0x428(r4)
/* 000001C0 00000200  C0 03 00 1C */	lfs f0, 0x1c(r3)
/* 000001C4 00000204  80 60 00 00 */	lwz r3, gx@sda21(r0)
/* 000001C8 00000208  D0 03 04 30 */	stfs f0, 0x430(r3)
/* 000001CC 0000020C  48 00 00 1C */	b .L_000001E8
.L_000001D0:
/* 000001D0 00000210  C0 03 00 08 */	lfs f0, 0x8(r3)
/* 000001D4 00000214  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000001D8 00000218  D0 04 04 28 */	stfs f0, 0x428(r4)
/* 000001DC 0000021C  C0 03 00 18 */	lfs f0, 0x18(r3)
/* 000001E0 00000220  80 60 00 00 */	lwz r3, gx@sda21(r0)
/* 000001E4 00000224  D0 03 04 30 */	stfs f0, 0x430(r3)
.L_000001E8:
/* 000001E8 00000228  38 00 00 10 */	li r0, 0x10
/* 000001EC 0000022C  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000001F0 00000230  3C A0 CC 01 */	lis r5, 0xcc01
/* 000001F4 00000234  3C 60 00 06 */	lis r3, 0x6
/* 000001F8 00000238  98 05 80 00 */	stb r0, -0x8000(r5)
/* 000001FC 0000023C  38 03 10 20 */	addi r0, r3, 0x1020
/* 00000200 00000240  90 05 80 00 */	stw r0, -0x8000(r5)
/* 00000204 00000244  38 00 00 01 */	li r0, 0x1
/* 00000208 00000248  C0 04 04 24 */	lfs f0, 0x424(r4)
/* 0000020C 0000024C  D0 05 80 00 */	stfs f0, -0x8000(r5)
/* 00000210 00000250  C0 04 04 28 */	lfs f0, 0x428(r4)
/* 00000214 00000254  D0 05 80 00 */	stfs f0, -0x8000(r5)
/* 00000218 00000258  C0 04 04 2C */	lfs f0, 0x42c(r4)
/* 0000021C 0000025C  D0 05 80 00 */	stfs f0, -0x8000(r5)
/* 00000220 00000260  C0 04 04 30 */	lfs f0, 0x430(r4)
/* 00000224 00000264  D0 05 80 00 */	stfs f0, -0x8000(r5)
/* 00000228 00000268  C0 04 04 34 */	lfs f0, 0x434(r4)
/* 0000022C 0000026C  D0 05 80 00 */	stfs f0, -0x8000(r5)
/* 00000230 00000270  C0 04 04 38 */	lfs f0, 0x438(r4)
/* 00000234 00000274  D0 05 80 00 */	stfs f0, -0x8000(r5)
/* 00000238 00000278  80 64 04 20 */	lwz r3, 0x420(r4)
/* 0000023C 0000027C  90 65 80 00 */	stw r3, -0x8000(r5)
/* 00000240 00000280  B0 04 00 02 */	sth r0, 0x2(r4)
/* 00000244 00000284  4E 80 00 20 */	blr
.endfn GXSetProjection

.fn GXGetProjectionv, global
/* 00000248 00000288  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 0000024C 0000028C  3C 00 43 30 */	lis r0, 0x4330
/* 00000250 00000290  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 00000254 00000294  C8 20 00 00 */	lfd f1, "@77"@sda21(r0)
/* 00000258 00000298  80 84 04 20 */	lwz r4, 0x420(r4)
/* 0000025C 0000029C  90 81 00 14 */	stw r4, 0x14(r1)
/* 00000260 000002A0  90 01 00 10 */	stw r0, 0x10(r1)
/* 00000264 000002A4  C8 01 00 10 */	lfd f0, 0x10(r1)
/* 00000268 000002A8  38 21 00 18 */	addi r1, r1, 0x18
/* 0000026C 000002AC  EC 00 08 28 */	fsubs f0, f0, f1
/* 00000270 000002B0  D0 03 00 00 */	stfs f0, 0x0(r3)
/* 00000274 000002B4  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 00000278 000002B8  C0 04 04 24 */	lfs f0, 0x424(r4)
/* 0000027C 000002BC  D0 03 00 04 */	stfs f0, 0x4(r3)
/* 00000280 000002C0  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 00000284 000002C4  C0 04 04 28 */	lfs f0, 0x428(r4)
/* 00000288 000002C8  D0 03 00 08 */	stfs f0, 0x8(r3)
/* 0000028C 000002CC  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 00000290 000002D0  C0 04 04 2C */	lfs f0, 0x42c(r4)
/* 00000294 000002D4  D0 03 00 0C */	stfs f0, 0xc(r3)
/* 00000298 000002D8  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 0000029C 000002DC  C0 04 04 30 */	lfs f0, 0x430(r4)
/* 000002A0 000002E0  D0 03 00 10 */	stfs f0, 0x10(r3)
/* 000002A4 000002E4  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000002A8 000002E8  C0 04 04 34 */	lfs f0, 0x434(r4)
/* 000002AC 000002EC  D0 03 00 14 */	stfs f0, 0x14(r3)
/* 000002B0 000002F0  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000002B4 000002F4  C0 04 04 38 */	lfs f0, 0x438(r4)
/* 000002B8 000002F8  D0 03 00 18 */	stfs f0, 0x18(r3)
/* 000002BC 000002FC  4E 80 00 20 */	blr
.endfn GXGetProjectionv

.fn WriteMTXPS4x3, global
/* 000002C0 00000300  E0 03 00 00 */	psq_l f0, 0x0(r3), 0, qr0
/* 000002C4 00000304  E0 23 00 08 */	psq_l f1, 0x8(r3), 0, qr0
/* 000002C8 00000308  E0 43 00 10 */	psq_l f2, 0x10(r3), 0, qr0
/* 000002CC 0000030C  E0 63 00 18 */	psq_l f3, 0x18(r3), 0, qr0
/* 000002D0 00000310  E0 83 00 20 */	psq_l f4, 0x20(r3), 0, qr0
/* 000002D4 00000314  E0 A3 00 28 */	psq_l f5, 0x28(r3), 0, qr0
/* 000002D8 00000318  F0 04 00 00 */	psq_st f0, 0x0(r4), 0, qr0
/* 000002DC 0000031C  F0 24 00 00 */	psq_st f1, 0x0(r4), 0, qr0
/* 000002E0 00000320  F0 44 00 00 */	psq_st f2, 0x0(r4), 0, qr0
/* 000002E4 00000324  F0 64 00 00 */	psq_st f3, 0x0(r4), 0, qr0
/* 000002E8 00000328  F0 84 00 00 */	psq_st f4, 0x0(r4), 0, qr0
/* 000002EC 0000032C  F0 A4 00 00 */	psq_st f5, 0x0(r4), 0, qr0
/* 000002F0 00000330  4E 80 00 20 */	blr
.endfn WriteMTXPS4x3

.fn WriteMTXPS3x3from3x4, global
/* 000002F4 00000334  E0 03 00 00 */	psq_l f0, 0x0(r3), 0, qr0
/* 000002F8 00000338  C0 23 00 08 */	lfs f1, 0x8(r3)
/* 000002FC 0000033C  E0 43 00 10 */	psq_l f2, 0x10(r3), 0, qr0
/* 00000300 00000340  C0 63 00 18 */	lfs f3, 0x18(r3)
/* 00000304 00000344  E0 83 00 20 */	psq_l f4, 0x20(r3), 0, qr0
/* 00000308 00000348  C0 A3 00 28 */	lfs f5, 0x28(r3)
/* 0000030C 0000034C  F0 04 00 00 */	psq_st f0, 0x0(r4), 0, qr0
/* 00000310 00000350  D0 24 00 00 */	stfs f1, 0x0(r4)
/* 00000314 00000354  F0 44 00 00 */	psq_st f2, 0x0(r4), 0, qr0
/* 00000318 00000358  D0 64 00 00 */	stfs f3, 0x0(r4)
/* 0000031C 0000035C  F0 84 00 00 */	psq_st f4, 0x0(r4), 0, qr0
/* 00000320 00000360  D0 A4 00 00 */	stfs f5, 0x0(r4)
/* 00000324 00000364  4E 80 00 20 */	blr
.endfn WriteMTXPS3x3from3x4

.fn WriteMTXPS4x2, global
/* 00000328 00000368  E0 03 00 00 */	psq_l f0, 0x0(r3), 0, qr0
/* 0000032C 0000036C  E0 23 00 08 */	psq_l f1, 0x8(r3), 0, qr0
/* 00000330 00000370  E0 43 00 10 */	psq_l f2, 0x10(r3), 0, qr0
/* 00000334 00000374  E0 63 00 18 */	psq_l f3, 0x18(r3), 0, qr0
/* 00000338 00000378  F0 04 00 00 */	psq_st f0, 0x0(r4), 0, qr0
/* 0000033C 0000037C  F0 24 00 00 */	psq_st f1, 0x0(r4), 0, qr0
/* 00000340 00000380  F0 44 00 00 */	psq_st f2, 0x0(r4), 0, qr0
/* 00000344 00000384  F0 64 00 00 */	psq_st f3, 0x0(r4), 0, qr0
/* 00000348 00000388  4E 80 00 20 */	blr
.endfn WriteMTXPS4x2

.fn GXLoadPosMtxImm, global
/* 0000034C 0000038C  7C 08 02 A6 */	mflr r0
/* 00000350 00000390  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000354 00000394  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 00000358 00000398  38 C0 00 10 */	li r6, 0x10
/* 0000035C 0000039C  3C A0 CC 01 */	lis r5, 0xcc01
/* 00000360 000003A0  54 80 10 3A */	slwi r0, r4, 2
/* 00000364 000003A4  98 C5 80 00 */	stb r6, -0x8000(r5)
/* 00000368 000003A8  64 00 00 0B */	oris r0, r0, 0xb
/* 0000036C 000003AC  90 05 80 00 */	stw r0, -0x8000(r5)
/* 00000370 000003B0  38 85 80 00 */	addi r4, r5, -0x8000
/* 00000374 000003B4  48 00 00 01 */	bl WriteMTXPS4x3
/* 00000378 000003B8  80 01 00 0C */	lwz r0, 0xc(r1)
/* 0000037C 000003BC  38 21 00 08 */	addi r1, r1, 0x8
/* 00000380 000003C0  7C 08 03 A6 */	mtlr r0
/* 00000384 000003C4  4E 80 00 20 */	blr
.endfn GXLoadPosMtxImm

.fn GXLoadNrmMtxImm, global
/* 00000388 000003C8  7C 08 02 A6 */	mflr r0
/* 0000038C 000003CC  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000390 000003D0  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 00000394 000003D4  1C 84 00 03 */	mulli r4, r4, 0x3
/* 00000398 000003D8  38 04 04 00 */	addi r0, r4, 0x400
/* 0000039C 000003DC  3C A0 CC 01 */	lis r5, 0xcc01
/* 000003A0 000003E0  38 C0 00 10 */	li r6, 0x10
/* 000003A4 000003E4  98 C5 80 00 */	stb r6, -0x8000(r5)
/* 000003A8 000003E8  64 00 00 08 */	oris r0, r0, 0x8
/* 000003AC 000003EC  38 85 80 00 */	addi r4, r5, -0x8000
/* 000003B0 000003F0  90 05 80 00 */	stw r0, -0x8000(r5)
/* 000003B4 000003F4  48 00 00 01 */	bl WriteMTXPS3x3from3x4
/* 000003B8 000003F8  80 01 00 0C */	lwz r0, 0xc(r1)
/* 000003BC 000003FC  38 21 00 08 */	addi r1, r1, 0x8
/* 000003C0 00000400  7C 08 03 A6 */	mtlr r0
/* 000003C4 00000404  4E 80 00 20 */	blr
.endfn GXLoadNrmMtxImm

.fn GXSetCurrentMtx, global
/* 000003C8 00000408  7C 08 02 A6 */	mflr r0
/* 000003CC 0000040C  90 01 00 04 */	stw r0, 0x4(r1)
/* 000003D0 00000410  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 000003D4 00000414  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000003D8 00000418  38 84 00 80 */	addi r4, r4, 0x80
/* 000003DC 0000041C  80 04 00 00 */	lwz r0, 0x0(r4)
/* 000003E0 00000420  54 00 00 32 */	clrrwi r0, r0, 6
/* 000003E4 00000424  7C 00 1B 78 */	or r0, r0, r3
/* 000003E8 00000428  90 04 00 00 */	stw r0, 0x0(r4)
/* 000003EC 0000042C  38 60 00 00 */	li r3, 0x0
/* 000003F0 00000430  48 00 00 01 */	bl __GXSetMatrixIndex
/* 000003F4 00000434  80 01 00 0C */	lwz r0, 0xc(r1)
/* 000003F8 00000438  38 21 00 08 */	addi r1, r1, 0x8
/* 000003FC 0000043C  7C 08 03 A6 */	mtlr r0
/* 00000400 00000440  4E 80 00 20 */	blr
.endfn GXSetCurrentMtx

.fn GXLoadTexMtxImm, global
/* 00000404 00000444  7C 08 02 A6 */	mflr r0
/* 00000408 00000448  90 01 00 04 */	stw r0, 0x4(r1)
/* 0000040C 0000044C  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 00000410 00000450  28 04 00 40 */	cmplwi r4, 0x40
/* 00000414 00000454  41 80 00 14 */	blt .L_00000428
/* 00000418 00000458  38 04 FF C0 */	subi r0, r4, 0x40
/* 0000041C 0000045C  54 04 10 3A */	slwi r4, r0, 2
/* 00000420 00000460  38 E4 05 00 */	addi r7, r4, 0x500
/* 00000424 00000464  48 00 00 08 */	b .L_0000042C
.L_00000428:
/* 00000428 00000468  54 87 10 3A */	slwi r7, r4, 2
.L_0000042C:
/* 0000042C 0000046C  2C 05 00 01 */	cmpwi r5, 0x1
/* 00000430 00000470  40 82 00 0C */	bne .L_0000043C
/* 00000434 00000474  38 80 00 08 */	li r4, 0x8
/* 00000438 00000478  48 00 00 08 */	b .L_00000440
.L_0000043C:
/* 0000043C 0000047C  38 80 00 0C */	li r4, 0xc
.L_00000440:
/* 00000440 00000480  38 04 FF FF */	subi r0, r4, 0x1
/* 00000444 00000484  54 00 80 1E */	slwi r0, r0, 16
/* 00000448 00000488  38 C0 00 10 */	li r6, 0x10
/* 0000044C 0000048C  3C 80 CC 01 */	lis r4, 0xcc01
/* 00000450 00000490  98 C4 80 00 */	stb r6, -0x8000(r4)
/* 00000454 00000494  7C E0 03 78 */	or r0, r7, r0
/* 00000458 00000498  2C 05 00 00 */	cmpwi r5, 0x0
/* 0000045C 0000049C  90 04 80 00 */	stw r0, -0x8000(r4)
/* 00000460 000004A0  40 82 00 10 */	bne .L_00000470
/* 00000464 000004A4  38 84 80 00 */	addi r4, r4, -0x8000
/* 00000468 000004A8  48 00 00 01 */	bl WriteMTXPS4x3
/* 0000046C 000004AC  48 00 00 0C */	b .L_00000478
.L_00000470:
/* 00000470 000004B0  38 84 80 00 */	addi r4, r4, -0x8000
/* 00000474 000004B4  48 00 00 01 */	bl WriteMTXPS4x2
.L_00000478:
/* 00000478 000004B8  80 01 00 0C */	lwz r0, 0xc(r1)
/* 0000047C 000004BC  38 21 00 08 */	addi r1, r1, 0x8
/* 00000480 000004C0  7C 08 03 A6 */	mtlr r0
/* 00000484 000004C4  4E 80 00 20 */	blr
.endfn GXLoadTexMtxImm

.fn GXSetViewportJitter, global
/* 00000488 000004C8  7C 08 02 A6 */	mflr r0
/* 0000048C 000004CC  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000490 000004D0  94 21 FF A0 */	stwu r1, -0x60(r1)
/* 00000494 000004D4  DB E1 00 58 */	stfd f31, 0x58(r1)
/* 00000498 000004D8  DB C1 00 50 */	stfd f30, 0x50(r1)
/* 0000049C 000004DC  DB A1 00 48 */	stfd f29, 0x48(r1)
/* 000004A0 000004E0  DB 81 00 40 */	stfd f28, 0x40(r1)
/* 000004A4 000004E4  DB 61 00 38 */	stfd f27, 0x38(r1)
/* 000004A8 000004E8  DB 41 00 30 */	stfd f26, 0x30(r1)
/* 000004AC 000004EC  28 03 00 00 */	cmplwi r3, 0x0
/* 000004B0 000004F0  40 82 00 0C */	bne .L_000004BC
/* 000004B4 000004F4  C0 00 00 00 */	lfs f0, "@69"@sda21(r0)
/* 000004B8 000004F8  EC 42 00 28 */	fsubs f2, f2, f0
.L_000004BC:
/* 000004BC 000004FC  C1 60 00 00 */	lfs f11, "@69"@sda21(r0)
/* 000004C0 00000500  FD 40 20 50 */	fneg f10, f4
/* 000004C4 00000504  C0 00 00 00 */	lfs f0, "@102"@sda21(r0)
/* 000004C8 00000508  C1 20 00 00 */	lfs f9, "@101"@sda21(r0)
/* 000004CC 0000050C  EF E3 02 F2 */	fmuls f31, f3, f11
/* 000004D0 00000510  80 60 00 00 */	lwz r3, gx@sda21(r0)
/* 000004D4 00000514  EC E4 02 F2 */	fmuls f7, f4, f11
/* 000004D8 00000518  D0 23 04 3C */	stfs f1, 0x43c(r3)
/* 000004DC 0000051C  ED 01 F8 2A */	fadds f8, f1, f31
/* 000004E0 00000520  EF C0 01 B2 */	fmuls f30, f0, f6
/* 000004E4 00000524  80 60 00 00 */	lwz r3, gx@sda21(r0)
/* 000004E8 00000528  EC 22 38 2A */	fadds f1, f2, f7
/* 000004EC 0000052C  D0 43 04 40 */	stfs f2, 0x440(r3)
/* 000004F0 00000530  EC 00 01 72 */	fmuls f0, f0, f5
/* 000004F4 00000534  EF AA 02 F2 */	fmuls f29, f10, f11
/* 000004F8 00000538  80 60 00 00 */	lwz r3, gx@sda21(r0)
/* 000004FC 0000053C  EF 69 40 2A */	fadds f27, f9, f8
/* 00000500 00000540  D0 63 04 44 */	stfs f3, 0x444(r3)
/* 00000504 00000544  EF 49 08 2A */	fadds f26, f9, f1
/* 00000508 00000548  EF 9E 00 28 */	fsubs f28, f30, f0
/* 0000050C 0000054C  80 60 00 00 */	lwz r3, gx@sda21(r0)
/* 00000510 00000550  D0 83 04 48 */	stfs f4, 0x448(r3)
/* 00000514 00000554  80 60 00 00 */	lwz r3, gx@sda21(r0)
/* 00000518 00000558  D0 A3 04 4C */	stfs f5, 0x44c(r3)
/* 0000051C 0000055C  80 60 00 00 */	lwz r3, gx@sda21(r0)
/* 00000520 00000560  D0 C3 04 50 */	stfs f6, 0x450(r3)
/* 00000524 00000564  80 60 00 00 */	lwz r3, gx@sda21(r0)
/* 00000528 00000568  88 03 04 54 */	lbz r0, 0x454(r3)
/* 0000052C 0000056C  28 00 00 00 */	cmplwi r0, 0x0
/* 00000530 00000570  41 82 00 10 */	beq .L_00000540
/* 00000534 00000574  FC 20 28 90 */	fmr f1, f5
/* 00000538 00000578  C0 43 04 58 */	lfs f2, 0x458(r3)
/* 0000053C 0000057C  48 00 00 01 */	bl __GXSetRange
.L_00000540:
/* 00000540 00000580  38 00 00 10 */	li r0, 0x10
/* 00000544 00000584  80 60 00 00 */	lwz r3, gx@sda21(r0)
/* 00000548 00000588  3C A0 CC 01 */	lis r5, 0xcc01
/* 0000054C 0000058C  3C 80 00 05 */	lis r4, 0x5
/* 00000550 00000590  98 05 80 00 */	stb r0, -0x8000(r5)
/* 00000554 00000594  38 04 10 1A */	addi r0, r4, 0x101a
/* 00000558 00000598  90 05 80 00 */	stw r0, -0x8000(r5)
/* 0000055C 0000059C  38 00 00 01 */	li r0, 0x1
/* 00000560 000005A0  D3 E5 80 00 */	stfs f31, -0x8000(r5)
/* 00000564 000005A4  D3 A5 80 00 */	stfs f29, -0x8000(r5)
/* 00000568 000005A8  D3 85 80 00 */	stfs f28, -0x8000(r5)
/* 0000056C 000005AC  D3 65 80 00 */	stfs f27, -0x8000(r5)
/* 00000570 000005B0  D3 45 80 00 */	stfs f26, -0x8000(r5)
/* 00000574 000005B4  D3 C5 80 00 */	stfs f30, -0x8000(r5)
/* 00000578 000005B8  B0 03 00 02 */	sth r0, 0x2(r3)
/* 0000057C 000005BC  80 01 00 64 */	lwz r0, 0x64(r1)
/* 00000580 000005C0  CB E1 00 58 */	lfd f31, 0x58(r1)
/* 00000584 000005C4  CB C1 00 50 */	lfd f30, 0x50(r1)
/* 00000588 000005C8  7C 08 03 A6 */	mtlr r0
/* 0000058C 000005CC  CB A1 00 48 */	lfd f29, 0x48(r1)
/* 00000590 000005D0  CB 81 00 40 */	lfd f28, 0x40(r1)
/* 00000594 000005D4  CB 61 00 38 */	lfd f27, 0x38(r1)
/* 00000598 000005D8  CB 41 00 30 */	lfd f26, 0x30(r1)
/* 0000059C 000005DC  38 21 00 60 */	addi r1, r1, 0x60
/* 000005A0 000005E0  4E 80 00 20 */	blr
.endfn GXSetViewportJitter

.fn GXSetViewport, global
/* 000005A4 000005E4  7C 08 02 A6 */	mflr r0
/* 000005A8 000005E8  90 01 00 04 */	stw r0, 0x4(r1)
/* 000005AC 000005EC  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 000005B0 000005F0  38 60 00 01 */	li r3, 0x1
/* 000005B4 000005F4  48 00 00 01 */	bl GXSetViewportJitter
/* 000005B8 000005F8  80 01 00 0C */	lwz r0, 0xc(r1)
/* 000005BC 000005FC  38 21 00 08 */	addi r1, r1, 0x8
/* 000005C0 00000600  7C 08 03 A6 */	mtlr r0
/* 000005C4 00000604  4E 80 00 20 */	blr
.endfn GXSetViewport

.fn GXGetViewportv, global
/* 000005C8 00000608  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000005CC 0000060C  C0 04 04 3C */	lfs f0, 0x43c(r4)
/* 000005D0 00000610  D0 03 00 00 */	stfs f0, 0x0(r3)
/* 000005D4 00000614  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000005D8 00000618  C0 04 04 40 */	lfs f0, 0x440(r4)
/* 000005DC 0000061C  D0 03 00 04 */	stfs f0, 0x4(r3)
/* 000005E0 00000620  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000005E4 00000624  C0 04 04 44 */	lfs f0, 0x444(r4)
/* 000005E8 00000628  D0 03 00 08 */	stfs f0, 0x8(r3)
/* 000005EC 0000062C  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000005F0 00000630  C0 04 04 48 */	lfs f0, 0x448(r4)
/* 000005F4 00000634  D0 03 00 0C */	stfs f0, 0xc(r3)
/* 000005F8 00000638  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000005FC 0000063C  C0 04 04 4C */	lfs f0, 0x44c(r4)
/* 00000600 00000640  D0 03 00 10 */	stfs f0, 0x10(r3)
/* 00000604 00000644  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 00000608 00000648  C0 04 04 50 */	lfs f0, 0x450(r4)
/* 0000060C 0000064C  D0 03 00 14 */	stfs f0, 0x14(r3)
/* 00000610 00000650  4E 80 00 20 */	blr
.endfn GXGetViewportv

.fn GXSetScissor, global
/* 00000614 00000654  80 E0 00 00 */	lwz r7, gx@sda21(r0)
/* 00000618 00000658  39 03 01 56 */	addi r8, r3, 0x156
/* 0000061C 0000065C  38 05 FF FF */	subi r0, r5, 0x1
/* 00000620 00000660  38 A7 00 F8 */	addi r5, r7, 0xf8
/* 00000624 00000664  80 65 00 00 */	lwz r3, 0x0(r5)
/* 00000628 00000668  7C 08 02 14 */	add r0, r8, r0
/* 0000062C 0000066C  38 84 01 56 */	addi r4, r4, 0x156
/* 00000630 00000670  54 63 00 28 */	clrrwi r3, r3, 11
/* 00000634 00000674  7C 63 23 78 */	or r3, r3, r4
/* 00000638 00000678  90 65 00 00 */	stw r3, 0x0(r5)
/* 0000063C 0000067C  38 66 FF FF */	subi r3, r6, 0x1
/* 00000640 00000680  55 07 60 26 */	slwi r7, r8, 12
/* 00000644 00000684  80 A0 00 00 */	lwz r5, gx@sda21(r0)
/* 00000648 00000688  7C 84 1A 14 */	add r4, r4, r3
/* 0000064C 0000068C  54 03 60 26 */	slwi r3, r0, 12
/* 00000650 00000690  39 05 00 F8 */	addi r8, r5, 0xf8
/* 00000654 00000694  80 08 00 00 */	lwz r0, 0x0(r8)
/* 00000658 00000698  38 C0 00 61 */	li r6, 0x61
/* 0000065C 0000069C  3C A0 CC 01 */	lis r5, 0xcc01
/* 00000660 000006A0  54 00 05 10 */	rlwinm r0, r0, 0, 20, 8
/* 00000664 000006A4  7C 00 3B 78 */	or r0, r0, r7
/* 00000668 000006A8  90 08 00 00 */	stw r0, 0x0(r8)
/* 0000066C 000006AC  38 00 00 00 */	li r0, 0x0
/* 00000670 000006B0  80 E0 00 00 */	lwz r7, gx@sda21(r0)
/* 00000674 000006B4  39 07 00 FC */	addi r8, r7, 0xfc
/* 00000678 000006B8  80 E8 00 00 */	lwz r7, 0x0(r8)
/* 0000067C 000006BC  54 E7 00 28 */	clrrwi r7, r7, 11
/* 00000680 000006C0  7C E4 23 78 */	or r4, r7, r4
/* 00000684 000006C4  90 88 00 00 */	stw r4, 0x0(r8)
/* 00000688 000006C8  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 0000068C 000006CC  38 E4 00 FC */	addi r7, r4, 0xfc
/* 00000690 000006D0  80 87 00 00 */	lwz r4, 0x0(r7)
/* 00000694 000006D4  54 84 05 10 */	rlwinm r4, r4, 0, 20, 8
/* 00000698 000006D8  7C 83 1B 78 */	or r3, r4, r3
/* 0000069C 000006DC  90 67 00 00 */	stw r3, 0x0(r7)
/* 000006A0 000006E0  98 C5 80 00 */	stb r6, -0x8000(r5)
/* 000006A4 000006E4  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 000006A8 000006E8  80 64 00 F8 */	lwz r3, 0xf8(r4)
/* 000006AC 000006EC  90 65 80 00 */	stw r3, -0x8000(r5)
/* 000006B0 000006F0  98 C5 80 00 */	stb r6, -0x8000(r5)
/* 000006B4 000006F4  80 64 00 FC */	lwz r3, 0xfc(r4)
/* 000006B8 000006F8  90 65 80 00 */	stw r3, -0x8000(r5)
/* 000006BC 000006FC  B0 04 00 02 */	sth r0, 0x2(r4)
/* 000006C0 00000700  4E 80 00 20 */	blr
.endfn GXSetScissor

.fn GXSetScissorBoxOffset, global
/* 000006C4 00000704  38 A3 01 56 */	addi r5, r3, 0x156
/* 000006C8 00000708  80 60 00 00 */	lwz r3, gx@sda21(r0)
/* 000006CC 0000070C  38 04 01 56 */	addi r0, r4, 0x156
/* 000006D0 00000710  54 A4 F8 7E */	srwi r4, r5, 1
/* 000006D4 00000714  54 00 F8 7E */	srwi r0, r0, 1
/* 000006D8 00000718  54 84 05 96 */	rlwinm r4, r4, 0, 22, 11
/* 000006DC 0000071C  54 00 50 2A */	slwi r0, r0, 10
/* 000006E0 00000720  7C 80 03 78 */	or r0, r4, r0
/* 000006E4 00000724  54 05 02 3E */	clrlwi r5, r0, 8
/* 000006E8 00000728  38 00 00 61 */	li r0, 0x61
/* 000006EC 0000072C  3C 80 CC 01 */	lis r4, 0xcc01
/* 000006F0 00000730  98 04 80 00 */	stb r0, -0x8000(r4)
/* 000006F4 00000734  64 A5 59 00 */	oris r5, r5, 0x5900
/* 000006F8 00000738  38 00 00 00 */	li r0, 0x0
/* 000006FC 0000073C  90 A4 80 00 */	stw r5, -0x8000(r4)
/* 00000700 00000740  B0 03 00 02 */	sth r0, 0x2(r3)
/* 00000704 00000744  4E 80 00 20 */	blr
.endfn GXSetScissorBoxOffset

.fn GXSetClipMode, global
/* 00000708 00000748  38 00 00 10 */	li r0, 0x10
/* 0000070C 0000074C  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 00000710 00000750  3C C0 CC 01 */	lis r6, 0xcc01
/* 00000714 00000754  98 06 80 00 */	stb r0, -0x8000(r6)
/* 00000718 00000758  38 A0 10 05 */	li r5, 0x1005
/* 0000071C 0000075C  38 00 00 01 */	li r0, 0x1
/* 00000720 00000760  90 A6 80 00 */	stw r5, -0x8000(r6)
/* 00000724 00000764  90 66 80 00 */	stw r3, -0x8000(r6)
/* 00000728 00000768  B0 04 00 02 */	sth r0, 0x2(r4)
/* 0000072C 0000076C  4E 80 00 20 */	blr
.endfn GXSetClipMode

.fn __GXSetMatrixIndex, global
/* 00000730 00000770  2C 03 00 05 */	cmpwi r3, 0x5
/* 00000734 00000774  40 80 00 3C */	bge .L_00000770
/* 00000738 00000778  38 00 00 08 */	li r0, 0x8
/* 0000073C 0000077C  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 00000740 00000780  3C A0 CC 01 */	lis r5, 0xcc01
/* 00000744 00000784  98 05 80 00 */	stb r0, -0x8000(r5)
/* 00000748 00000788  38 00 00 30 */	li r0, 0x30
/* 0000074C 0000078C  38 60 00 10 */	li r3, 0x10
/* 00000750 00000790  98 05 80 00 */	stb r0, -0x8000(r5)
/* 00000754 00000794  38 00 10 18 */	li r0, 0x1018
/* 00000758 00000798  80 84 00 80 */	lwz r4, 0x80(r4)
/* 0000075C 0000079C  90 85 80 00 */	stw r4, -0x8000(r5)
/* 00000760 000007A0  98 65 80 00 */	stb r3, -0x8000(r5)
/* 00000764 000007A4  90 05 80 00 */	stw r0, -0x8000(r5)
/* 00000768 000007A8  90 85 80 00 */	stw r4, -0x8000(r5)
/* 0000076C 000007AC  48 00 00 38 */	b .L_000007A4
.L_00000770:
/* 00000770 000007B0  38 00 00 08 */	li r0, 0x8
/* 00000774 000007B4  80 80 00 00 */	lwz r4, gx@sda21(r0)
/* 00000778 000007B8  3C A0 CC 01 */	lis r5, 0xcc01
/* 0000077C 000007BC  98 05 80 00 */	stb r0, -0x8000(r5)
/* 00000780 000007C0  38 00 00 40 */	li r0, 0x40
/* 00000784 000007C4  38 60 00 10 */	li r3, 0x10
/* 00000788 000007C8  98 05 80 00 */	stb r0, -0x8000(r5)
/* 0000078C 000007CC  38 00 10 19 */	li r0, 0x1019
/* 00000790 000007D0  80 84 00 84 */	lwz r4, 0x84(r4)
/* 00000794 000007D4  90 85 80 00 */	stw r4, -0x8000(r5)
/* 00000798 000007D8  98 65 80 00 */	stb r3, -0x8000(r5)
/* 0000079C 000007DC  90 05 80 00 */	stw r0, -0x8000(r5)
/* 000007A0 000007E0  90 85 80 00 */	stw r4, -0x8000(r5)
.L_000007A4:
/* 000007A4 000007E4  80 60 00 00 */	lwz r3, gx@sda21(r0)
/* 000007A8 000007E8  38 00 00 01 */	li r0, 0x1
/* 000007AC 000007EC  B0 03 00 02 */	sth r0, 0x2(r3)
/* 000007B0 000007F0  4E 80 00 20 */	blr
.endfn __GXSetMatrixIndex

# 0x00000000 - 0x00000020
.section .sdata2, "a"
.balign 8

.obj "@65", local
	.4byte 0x00000000
.endobj "@65"

.obj "@67", local
	.4byte 0x3F800000
.endobj "@67"

.obj "@69", local
	.4byte 0x3F000000
.endobj "@69"

.obj gap_11_804DE2FC_sdata2, global
.hidden gap_11_804DE2FC_sdata2
	.4byte 0x00000000
.endobj gap_11_804DE2FC_sdata2

.obj "@77", local
	.4byte 0x43300000
	.4byte 0x00000000
.endobj "@77"

.obj "@101", local
	.4byte 0x43AB0000
.endobj "@101"

.obj "@102", local
	.4byte 0x4B7FFFFF
.endobj "@102"
