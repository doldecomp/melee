.include "macros.inc"
.file "OSSerial.c"

# 0x00000000 - 0x000016C4
.text
.balign 4

.fn SIBusy, global
/* 00000000 00000040  3C 60 00 00 */	lis r3, Si@ha
/* 00000004 00000044  80 03 00 00 */	lwz r0, Si@l(r3)
/* 00000008 00000048  2C 00 FF FF */	cmpwi r0, -0x1
/* 0000000C 0000004C  41 82 00 0C */	beq .L_00000018
/* 00000010 00000050  38 60 00 01 */	li r3, 0x1
/* 00000014 00000054  4E 80 00 20 */	blr
.L_00000018:
/* 00000018 00000058  38 60 00 00 */	li r3, 0x0
/* 0000001C 0000005C  4E 80 00 20 */	blr
.endfn SIBusy

.fn SIIsChanBusy, global
/* 00000020 00000060  3C 80 00 00 */	lis r4, Packet@ha
/* 00000024 00000064  54 65 28 34 */	slwi r5, r3, 5
/* 00000028 00000068  38 04 00 00 */	addi r0, r4, Packet@l
/* 0000002C 0000006C  7C 80 2A 14 */	add r4, r0, r5
/* 00000030 00000070  80 04 00 00 */	lwz r0, 0x0(r4)
/* 00000034 00000074  38 A0 00 01 */	li r5, 0x1
/* 00000038 00000078  2C 00 FF FF */	cmpwi r0, -0x1
/* 0000003C 0000007C  40 82 00 18 */	bne .L_00000054
/* 00000040 00000080  3C 80 00 00 */	lis r4, Si@ha
/* 00000044 00000084  80 04 00 00 */	lwz r0, Si@l(r4)
/* 00000048 00000088  7C 00 18 00 */	cmpw r0, r3
/* 0000004C 0000008C  41 82 00 08 */	beq .L_00000054
/* 00000050 00000090  38 A0 00 00 */	li r5, 0x0
.L_00000054:
/* 00000054 00000094  7C A3 2B 78 */	mr r3, r5
/* 00000058 00000098  4E 80 00 20 */	blr
.endfn SIIsChanBusy

.fn CompleteTransfer, local
/* 0000005C 0000009C  7C 08 02 A6 */	mflr r0
/* 00000060 000000A0  3C 60 CC 00 */	lis r3, 0xcc00
/* 00000064 000000A4  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000068 000000A8  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 0000006C 000000AC  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 00000070 000000B0  93 C1 00 18 */	stw r30, 0x18(r1)
/* 00000074 000000B4  3B C3 64 00 */	addi r30, r3, 0x6400
/* 00000078 000000B8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 0000007C 000000BC  3B BE 00 34 */	addi r29, r30, 0x34
/* 00000080 000000C0  93 81 00 10 */	stw r28, 0x10(r1)
/* 00000084 000000C4  80 03 64 34 */	lwz r0, 0x6434(r3)
/* 00000088 000000C8  83 83 64 38 */	lwz r28, 0x6438(r3)
/* 0000008C 000000CC  3C 60 00 00 */	lis r3, Si@ha
/* 00000090 000000D0  64 00 80 00 */	oris r0, r0, 0x8000
/* 00000094 000000D4  54 00 00 3C */	clrrwi r0, r0, 1
/* 00000098 000000D8  90 1E 00 34 */	stw r0, 0x34(r30)
/* 0000009C 000000DC  3B E3 00 00 */	addi r31, r3, Si@l
/* 000000A0 000000E0  80 1F 00 00 */	lwz r0, 0x0(r31)
/* 000000A4 000000E4  2C 00 FF FF */	cmpwi r0, -0x1
/* 000000A8 000000E8  41 82 02 74 */	beq .L_0000031C
/* 000000AC 000000EC  48 00 00 01 */	bl __OSGetSystemTime
/* 000000B0 000000F0  80 DF 00 00 */	lwz r6, 0x0(r31)
/* 000000B4 000000F4  3C A0 00 00 */	lis r5, OSSerial_804A7EF8@ha
/* 000000B8 000000F8  38 05 00 00 */	addi r0, r5, OSSerial_804A7EF8@l
/* 000000BC 000000FC  54 C5 18 38 */	slwi r5, r6, 3
/* 000000C0 00000100  7C A0 2A 14 */	add r5, r0, r5
/* 000000C4 00000104  90 85 00 04 */	stw r4, 0x4(r5)
/* 000000C8 00000108  38 DF 00 08 */	addi r6, r31, 0x8
/* 000000CC 0000010C  38 80 00 00 */	li r4, 0x0
/* 000000D0 00000110  90 65 00 00 */	stw r3, 0x0(r5)
/* 000000D4 00000114  80 1F 00 08 */	lwz r0, 0x8(r31)
/* 000000D8 00000118  80 BF 00 0C */	lwz r5, 0xc(r31)
/* 000000DC 0000011C  54 07 F0 BE */	srwi r7, r0, 2
/* 000000E0 00000120  28 07 00 00 */	cmplwi r7, 0x0
/* 000000E4 00000124  40 81 00 A0 */	ble .L_00000184
/* 000000E8 00000128  28 07 00 08 */	cmplwi r7, 0x8
/* 000000EC 0000012C  38 67 FF F8 */	subi r3, r7, 0x8
/* 000000F0 00000130  40 81 02 34 */	ble .L_00000324
/* 000000F4 00000134  38 03 00 07 */	addi r0, r3, 0x7
/* 000000F8 00000138  54 00 E8 FE */	srwi r0, r0, 3
/* 000000FC 0000013C  28 03 00 00 */	cmplwi r3, 0x0
/* 00000100 00000140  7C 09 03 A6 */	mtctr r0
/* 00000104 00000144  40 81 02 20 */	ble .L_00000324
.L_00000108:
/* 00000108 00000148  80 1E 00 80 */	lwz r0, 0x80(r30)
/* 0000010C 0000014C  38 84 00 08 */	addi r4, r4, 0x8
/* 00000110 00000150  90 05 00 00 */	stw r0, 0x0(r5)
/* 00000114 00000154  80 1E 00 84 */	lwz r0, 0x84(r30)
/* 00000118 00000158  90 05 00 04 */	stw r0, 0x4(r5)
/* 0000011C 0000015C  80 1E 00 88 */	lwz r0, 0x88(r30)
/* 00000120 00000160  90 05 00 08 */	stw r0, 0x8(r5)
/* 00000124 00000164  80 1E 00 8C */	lwz r0, 0x8c(r30)
/* 00000128 00000168  90 05 00 0C */	stw r0, 0xc(r5)
/* 0000012C 0000016C  80 1E 00 90 */	lwz r0, 0x90(r30)
/* 00000130 00000170  90 05 00 10 */	stw r0, 0x10(r5)
/* 00000134 00000174  80 1E 00 94 */	lwz r0, 0x94(r30)
/* 00000138 00000178  90 05 00 14 */	stw r0, 0x14(r5)
/* 0000013C 0000017C  80 1E 00 98 */	lwz r0, 0x98(r30)
/* 00000140 00000180  90 05 00 18 */	stw r0, 0x18(r5)
/* 00000144 00000184  80 1E 00 9C */	lwz r0, 0x9c(r30)
/* 00000148 00000188  3B DE 00 20 */	addi r30, r30, 0x20
/* 0000014C 0000018C  90 05 00 1C */	stw r0, 0x1c(r5)
/* 00000150 00000190  38 A5 00 20 */	addi r5, r5, 0x20
/* 00000154 00000194  42 00 FF B4 */	bdnz .L_00000108
/* 00000158 00000198  48 00 01 CC */	b .L_00000324
.L_0000015C:
/* 0000015C 0000019C  7C 04 38 50 */	subf r0, r4, r7
/* 00000160 000001A0  7C 04 38 40 */	cmplw r4, r7
/* 00000164 000001A4  7C 09 03 A6 */	mtctr r0
/* 00000168 000001A8  40 80 00 1C */	bge .L_00000184
.L_0000016C:
/* 0000016C 000001AC  80 03 00 80 */	lwz r0, 0x80(r3)
/* 00000170 000001B0  38 63 00 04 */	addi r3, r3, 0x4
/* 00000174 000001B4  38 84 00 01 */	addi r4, r4, 0x1
/* 00000178 000001B8  90 05 00 00 */	stw r0, 0x0(r5)
/* 0000017C 000001BC  38 A5 00 04 */	addi r5, r5, 0x4
/* 00000180 000001C0  42 00 FF EC */	bdnz .L_0000016C
.L_00000184:
/* 00000184 000001C4  80 06 00 00 */	lwz r0, 0x0(r6)
/* 00000188 000001C8  54 03 07 BF */	clrlwi. r3, r0, 30
/* 0000018C 000001CC  41 82 01 10 */	beq .L_0000029C
/* 00000190 000001D0  3C C0 CC 00 */	lis r6, 0xcc00
/* 00000194 000001D4  38 C6 64 00 */	addi r6, r6, 0x6400
/* 00000198 000001D8  54 80 10 3A */	slwi r0, r4, 2
/* 0000019C 000001DC  7C 86 02 14 */	add r4, r6, r0
/* 000001A0 000001E0  80 C4 00 80 */	lwz r6, 0x80(r4)
/* 000001A4 000001E4  38 80 00 00 */	li r4, 0x0
/* 000001A8 000001E8  40 81 00 F4 */	ble .L_0000029C
/* 000001AC 000001EC  28 03 00 08 */	cmplwi r3, 0x8
/* 000001B0 000001F0  38 E3 FF F8 */	subi r7, r3, 0x8
/* 000001B4 000001F4  40 81 00 BC */	ble .L_00000270
/* 000001B8 000001F8  38 07 00 07 */	addi r0, r7, 0x7
/* 000001BC 000001FC  54 00 E8 FE */	srwi r0, r0, 3
/* 000001C0 00000200  28 07 00 00 */	cmplwi r7, 0x0
/* 000001C4 00000204  7C 09 03 A6 */	mtctr r0
/* 000001C8 00000208  40 81 00 A8 */	ble .L_00000270
.L_000001CC:
/* 000001CC 0000020C  20 04 00 03 */	subfic r0, r4, 0x3
/* 000001D0 00000210  54 07 18 38 */	slwi r7, r0, 3
/* 000001D4 00000214  38 04 00 01 */	addi r0, r4, 0x1
/* 000001D8 00000218  7C C7 3C 30 */	srw r7, r6, r7
/* 000001DC 0000021C  20 00 00 03 */	subfic r0, r0, 0x3
/* 000001E0 00000220  98 E5 00 00 */	stb r7, 0x0(r5)
/* 000001E4 00000224  54 00 18 38 */	slwi r0, r0, 3
/* 000001E8 00000228  38 E4 00 02 */	addi r7, r4, 0x2
/* 000001EC 0000022C  7C C0 04 30 */	srw r0, r6, r0
/* 000001F0 00000230  20 E7 00 03 */	subfic r7, r7, 0x3
/* 000001F4 00000234  98 05 00 01 */	stb r0, 0x1(r5)
/* 000001F8 00000238  54 E7 18 38 */	slwi r7, r7, 3
/* 000001FC 0000023C  7C CC 3C 30 */	srw r12, r6, r7
/* 00000200 00000240  7C E4 00 D0 */	neg r7, r4
/* 00000204 00000244  99 85 00 02 */	stb r12, 0x2(r5)
/* 00000208 00000248  54 E8 18 38 */	slwi r8, r7, 3
/* 0000020C 0000024C  38 E4 00 04 */	addi r7, r4, 0x4
/* 00000210 00000250  7C CB 44 30 */	srw r11, r6, r8
/* 00000214 00000254  20 E7 00 03 */	subfic r7, r7, 0x3
/* 00000218 00000258  99 65 00 03 */	stb r11, 0x3(r5)
/* 0000021C 0000025C  54 E8 18 38 */	slwi r8, r7, 3
/* 00000220 00000260  38 E4 00 05 */	addi r7, r4, 0x5
/* 00000224 00000264  7C CA 44 30 */	srw r10, r6, r8
/* 00000228 00000268  20 E7 00 03 */	subfic r7, r7, 0x3
/* 0000022C 0000026C  99 45 00 04 */	stb r10, 0x4(r5)
/* 00000230 00000270  54 E8 18 38 */	slwi r8, r7, 3
/* 00000234 00000274  7C C9 44 30 */	srw r9, r6, r8
/* 00000238 00000278  38 E4 00 06 */	addi r7, r4, 0x6
/* 0000023C 0000027C  99 25 00 05 */	stb r9, 0x5(r5)
/* 00000240 00000280  21 07 00 03 */	subfic r8, r7, 0x3
/* 00000244 00000284  38 E4 00 07 */	addi r7, r4, 0x7
/* 00000248 00000288  55 08 18 38 */	slwi r8, r8, 3
/* 0000024C 0000028C  7C C8 44 30 */	srw r8, r6, r8
/* 00000250 00000290  20 E7 00 03 */	subfic r7, r7, 0x3
/* 00000254 00000294  99 05 00 06 */	stb r8, 0x6(r5)
/* 00000258 00000298  54 E7 18 38 */	slwi r7, r7, 3
/* 0000025C 0000029C  7C C7 3C 30 */	srw r7, r6, r7
/* 00000260 000002A0  98 E5 00 07 */	stb r7, 0x7(r5)
/* 00000264 000002A4  38 A5 00 08 */	addi r5, r5, 0x8
/* 00000268 000002A8  38 84 00 08 */	addi r4, r4, 0x8
/* 0000026C 000002AC  42 00 FF 60 */	bdnz .L_000001CC
.L_00000270:
/* 00000270 000002B0  7C 04 18 50 */	subf r0, r4, r3
/* 00000274 000002B4  7C 04 18 40 */	cmplw r4, r3
/* 00000278 000002B8  7C 09 03 A6 */	mtctr r0
/* 0000027C 000002BC  40 80 00 20 */	bge .L_0000029C
.L_00000280:
/* 00000280 000002C0  20 04 00 03 */	subfic r0, r4, 0x3
/* 00000284 000002C4  54 00 18 38 */	slwi r0, r0, 3
/* 00000288 000002C8  7C C0 04 30 */	srw r0, r6, r0
/* 0000028C 000002CC  98 05 00 00 */	stb r0, 0x0(r5)
/* 00000290 000002D0  38 A5 00 01 */	addi r5, r5, 0x1
/* 00000294 000002D4  38 84 00 01 */	addi r4, r4, 0x1
/* 00000298 000002D8  42 00 FF E8 */	bdnz .L_00000280
.L_0000029C:
/* 0000029C 000002DC  80 1D 00 00 */	lwz r0, 0x0(r29)
/* 000002A0 000002E0  54 00 00 85 */	rlwinm. r0, r0, 0, 2, 2
/* 000002A4 000002E4  41 82 00 4C */	beq .L_000002F0
/* 000002A8 000002E8  80 7F 00 00 */	lwz r3, 0x0(r31)
/* 000002AC 000002EC  20 03 00 03 */	subfic r0, r3, 0x3
/* 000002B0 000002F0  54 00 18 38 */	slwi r0, r0, 3
/* 000002B4 000002F4  7F 9C 04 30 */	srw r28, r28, r0
/* 000002B8 000002F8  57 9C 07 3E */	clrlwi r28, r28, 28
/* 000002BC 000002FC  57 80 07 39 */	rlwinm. r0, r28, 0, 28, 28
/* 000002C0 00000300  41 82 00 20 */	beq .L_000002E0
/* 000002C4 00000304  54 60 10 3A */	slwi r0, r3, 2
/* 000002C8 00000308  7C 7F 02 14 */	add r3, r31, r0
/* 000002CC 0000030C  84 03 00 14 */	lwzu r0, 0x14(r3)
/* 000002D0 00000310  54 00 06 31 */	rlwinm. r0, r0, 0, 24, 24
/* 000002D4 00000314  40 82 00 0C */	bne .L_000002E0
/* 000002D8 00000318  38 00 00 08 */	li r0, 0x8
/* 000002DC 0000031C  90 03 00 00 */	stw r0, 0x0(r3)
.L_000002E0:
/* 000002E0 00000320  28 1C 00 00 */	cmplwi r28, 0x0
/* 000002E4 00000324  40 82 00 30 */	bne .L_00000314
/* 000002E8 00000328  3B 80 00 04 */	li r28, 0x4
/* 000002EC 0000032C  48 00 00 28 */	b .L_00000314
.L_000002F0:
/* 000002F0 00000330  48 00 00 01 */	bl __OSGetSystemTime
/* 000002F4 00000334  80 DF 00 00 */	lwz r6, 0x0(r31)
/* 000002F8 00000338  3C A0 00 00 */	lis r5, TypeTime@ha
/* 000002FC 0000033C  38 05 00 00 */	addi r0, r5, TypeTime@l
/* 00000300 00000340  54 C5 18 38 */	slwi r5, r6, 3
/* 00000304 00000344  7C A0 2A 14 */	add r5, r0, r5
/* 00000308 00000348  90 85 00 04 */	stw r4, 0x4(r5)
/* 0000030C 0000034C  3B 80 00 00 */	li r28, 0x0
/* 00000310 00000350  90 65 00 00 */	stw r3, 0x0(r5)
.L_00000314:
/* 00000314 00000354  38 00 FF FF */	li r0, -0x1
/* 00000318 00000358  90 1F 00 00 */	stw r0, 0x0(r31)
.L_0000031C:
/* 0000031C 0000035C  7F 83 E3 78 */	mr r3, r28
/* 00000320 00000360  48 00 00 18 */	b .L_00000338
.L_00000324:
/* 00000324 00000364  3C 60 CC 00 */	lis r3, 0xcc00
/* 00000328 00000368  54 80 10 3A */	slwi r0, r4, 2
/* 0000032C 0000036C  38 63 64 00 */	addi r3, r3, 0x6400
/* 00000330 00000370  7C 63 02 14 */	add r3, r3, r0
/* 00000334 00000374  4B FF FE 28 */	b .L_0000015C
.L_00000338:
/* 00000338 00000378  80 01 00 24 */	lwz r0, 0x24(r1)
/* 0000033C 0000037C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 00000340 00000380  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 00000344 00000384  7C 08 03 A6 */	mtlr r0
/* 00000348 00000388  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 0000034C 0000038C  83 81 00 10 */	lwz r28, 0x10(r1)
/* 00000350 00000390  38 21 00 20 */	addi r1, r1, 0x20
/* 00000354 00000394  4E 80 00 20 */	blr
.endfn CompleteTransfer

.fn SIInterruptHandler, local
/* 00000358 00000398  7C 08 02 A6 */	mflr r0
/* 0000035C 0000039C  3C A0 CC 00 */	lis r5, 0xcc00
/* 00000360 000003A0  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000364 000003A4  3C E0 00 00 */	lis r7, Packet@ha
/* 00000368 000003A8  3C C0 00 00 */	lis r6, Si@ha
/* 0000036C 000003AC  94 21 FF B8 */	stwu r1, -0x48(r1)
/* 00000370 000003B0  BE A1 00 1C */	stmw r21, 0x1c(r1)
/* 00000374 000003B4  3B C3 00 00 */	addi r30, r3, 0x0
/* 00000378 000003B8  3B E4 00 00 */	addi r31, r4, 0x0
/* 0000037C 000003BC  3B 87 00 00 */	addi r28, r7, Packet@l
/* 00000380 000003C0  3B A6 00 00 */	addi r29, r6, Si@l
/* 00000384 000003C4  83 05 64 34 */	lwz r24, 0x6434(r5)
/* 00000388 000003C8  57 05 00 02 */	clrrwi r5, r24, 30
/* 0000038C 000003CC  3C 05 40 00 */	addis r0, r5, 0x4000
/* 00000390 000003D0  28 00 00 00 */	cmplwi r0, 0x0
/* 00000394 000003D4  40 82 01 84 */	bne .L_00000518
/* 00000398 000003D8  82 FD 00 00 */	lwz r23, 0x0(r29)
/* 0000039C 000003DC  48 00 00 01 */	bl CompleteTransfer
/* 000003A0 000003E0  82 BD 00 10 */	lwz r21, 0x10(r29)
/* 000003A4 000003E4  3B 60 00 00 */	li r27, 0x0
/* 000003A8 000003E8  3A C3 00 00 */	addi r22, r3, 0x0
/* 000003AC 000003EC  93 7D 00 10 */	stw r27, 0x10(r29)
/* 000003B0 000003F0  3B 57 00 00 */	addi r26, r23, 0x0
.L_000003B4:
/* 000003B4 000003F4  3B 5A 00 01 */	addi r26, r26, 0x1
/* 000003B8 000003F8  7F 40 16 70 */	srawi r0, r26, 2
/* 000003BC 000003FC  7C 00 01 94 */	addze r0, r0
/* 000003C0 00000400  54 00 10 3A */	slwi r0, r0, 2
/* 000003C4 00000404  7C 00 D0 10 */	subfc r0, r0, r26
/* 000003C8 00000408  7C 1A 03 78 */	mr r26, r0
/* 000003CC 0000040C  54 00 28 34 */	slwi r0, r0, 5
/* 000003D0 00000410  7F 3C 02 14 */	add r25, r28, r0
/* 000003D4 00000414  80 19 00 00 */	lwz r0, 0x0(r25)
/* 000003D8 00000418  2C 00 FF FF */	cmpwi r0, -0x1
/* 000003DC 0000041C  41 82 00 6C */	beq .L_00000448
/* 000003E0 00000420  48 00 00 01 */	bl __OSGetSystemTime
/* 000003E4 00000424  80 19 00 18 */	lwz r0, 0x18(r25)
/* 000003E8 00000428  6C 65 80 00 */	xoris r5, r3, 0x8000
/* 000003EC 0000042C  80 D9 00 1C */	lwz r6, 0x1c(r25)
/* 000003F0 00000430  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 000003F4 00000434  7C 06 20 10 */	subfc r0, r6, r4
/* 000003F8 00000438  7C 63 29 10 */	subfe r3, r3, r5
/* 000003FC 0000043C  7C 65 29 10 */	subfe r3, r5, r5
/* 00000400 00000440  7C 63 00 D1 */	neg. r3, r3
/* 00000404 00000444  40 82 00 44 */	bne .L_00000448
/* 00000408 00000448  80 79 00 00 */	lwz r3, 0x0(r25)
/* 0000040C 0000044C  80 99 00 04 */	lwz r4, 0x4(r25)
/* 00000410 00000450  80 B9 00 08 */	lwz r5, 0x8(r25)
/* 00000414 00000454  80 D9 00 0C */	lwz r6, 0xc(r25)
/* 00000418 00000458  80 F9 00 10 */	lwz r7, 0x10(r25)
/* 0000041C 0000045C  81 19 00 14 */	lwz r8, 0x14(r25)
/* 00000420 00000460  48 00 00 01 */	bl __SITransfer
/* 00000424 00000464  2C 03 00 00 */	cmpwi r3, 0x0
/* 00000428 00000468  41 82 00 2C */	beq .L_00000454
/* 0000042C 0000046C  1C 1A 00 28 */	mulli r0, r26, 0x28
/* 00000430 00000470  7C 7C 02 14 */	add r3, r28, r0
/* 00000434 00000474  38 63 00 80 */	addi r3, r3, 0x80
/* 00000438 00000478  48 00 00 01 */	bl OSCancelAlarm
/* 0000043C 0000047C  38 00 FF FF */	li r0, -0x1
/* 00000440 00000480  90 19 00 00 */	stw r0, 0x0(r25)
/* 00000444 00000484  48 00 00 10 */	b .L_00000454
.L_00000448:
/* 00000448 00000488  3B 7B 00 01 */	addi r27, r27, 0x1
/* 0000044C 0000048C  2C 1B 00 04 */	cmpwi r27, 0x4
/* 00000450 00000490  41 80 FF 64 */	blt .L_000003B4
.L_00000454:
/* 00000454 00000494  28 15 00 00 */	cmplwi r21, 0x0
/* 00000458 00000498  41 82 00 1C */	beq .L_00000474
/* 0000045C 0000049C  39 95 00 00 */	addi r12, r21, 0x0
/* 00000460 000004A0  7D 88 03 A6 */	mtlr r12
/* 00000464 000004A4  38 77 00 00 */	addi r3, r23, 0x0
/* 00000468 000004A8  38 96 00 00 */	addi r4, r22, 0x0
/* 0000046C 000004AC  38 BF 00 00 */	addi r5, r31, 0x0
/* 00000470 000004B0  4E 80 00 21 */	blrl
.L_00000474:
/* 00000474 000004B4  3C 60 CC 00 */	lis r3, 0xcc00
/* 00000478 000004B8  38 83 64 00 */	addi r4, r3, 0x6400
/* 0000047C 000004BC  80 A3 64 38 */	lwz r5, 0x6438(r3)
/* 00000480 000004C0  56 E0 18 38 */	slwi r0, r23, 3
/* 00000484 000004C4  3C 60 0F 00 */	lis r3, 0xf00
/* 00000488 000004C8  7C 60 06 30 */	sraw r0, r3, r0
/* 0000048C 000004CC  7C A5 00 38 */	and r5, r5, r0
/* 00000490 000004D0  56 E0 10 3A */	slwi r0, r23, 2
/* 00000494 000004D4  90 A4 00 38 */	stw r5, 0x38(r4)
/* 00000498 000004D8  7C DD 02 14 */	add r6, r29, r0
/* 0000049C 000004DC  84 06 00 14 */	lwzu r0, 0x14(r6)
/* 000004A0 000004E0  28 00 00 80 */	cmplwi r0, 0x80
/* 000004A4 000004E4  40 82 00 74 */	bne .L_00000518
/* 000004A8 000004E8  56 E0 28 34 */	slwi r0, r23, 5
/* 000004AC 000004EC  7C 1C 00 2E */	lwzx r0, r28, r0
/* 000004B0 000004F0  38 60 00 01 */	li r3, 0x1
/* 000004B4 000004F4  2C 00 FF FF */	cmpwi r0, -0x1
/* 000004B8 000004F8  40 82 00 14 */	bne .L_000004CC
/* 000004BC 000004FC  80 1D 00 00 */	lwz r0, 0x0(r29)
/* 000004C0 00000500  7C 00 B8 00 */	cmpw r0, r23
/* 000004C4 00000504  41 82 00 08 */	beq .L_000004CC
/* 000004C8 00000508  38 60 00 00 */	li r3, 0x0
.L_000004CC:
/* 000004CC 0000050C  2C 03 00 00 */	cmpwi r3, 0x0
/* 000004D0 00000510  40 82 00 48 */	bne .L_00000518
/* 000004D4 00000514  3C 60 80 00 */	lis r3, 0x8000
/* 000004D8 00000518  80 03 00 F8 */	lwz r0, 0xf8(r3)
/* 000004DC 0000051C  3C 60 43 1C */	lis r3, 0x431c
/* 000004E0 00000520  3C 80 00 00 */	lis r4, GetTypeCallback@ha
/* 000004E4 00000524  54 00 F0 BE */	srwi r0, r0, 2
/* 000004E8 00000528  38 63 DE 83 */	subi r3, r3, 0x217d
/* 000004EC 0000052C  7C 03 00 16 */	mulhwu r0, r3, r0
/* 000004F0 00000530  54 00 8B FE */	srwi r0, r0, 15
/* 000004F4 00000534  1C 00 00 41 */	mulli r0, r0, 0x41
/* 000004F8 00000538  39 04 00 00 */	addi r8, r4, GetTypeCallback@l
/* 000004FC 0000053C  54 0A E8 FE */	srwi r10, r0, 3
/* 00000500 00000540  38 77 00 00 */	addi r3, r23, 0x0
/* 00000504 00000544  38 80 00 00 */	li r4, OSSerial_804D73C8@sda21
/* 00000508 00000548  38 A0 00 01 */	li r5, 0x1
/* 0000050C 0000054C  38 E0 00 03 */	li r7, 0x3
/* 00000510 00000550  39 20 00 00 */	li r9, 0x0
/* 00000514 00000554  48 00 00 01 */	bl SITransfer
.L_00000518:
/* 00000518 00000558  57 03 00 C8 */	rlwinm r3, r24, 0, 3, 4
/* 0000051C 0000055C  3C 03 E8 00 */	subis r0, r3, 0x1800
/* 00000520 00000560  28 00 00 00 */	cmplwi r0, 0x0
/* 00000524 00000564  40 82 01 64 */	bne .L_00000688
/* 00000528 00000568  48 00 00 01 */	bl VIGetCurrentLine
/* 0000052C 0000056C  80 1D 00 04 */	lwz r0, 0x4(r29)
/* 00000530 00000570  3A FC 01 E0 */	addi r23, r28, 0x1e0
/* 00000534 00000574  3B 1D 00 04 */	addi r24, r29, 0x4
/* 00000538 00000578  3A D7 00 00 */	addi r22, r23, 0x0
/* 0000053C 0000057C  3A A3 00 01 */	addi r21, r3, 0x1
/* 00000540 00000580  54 1A 85 BE */	extrwi r26, r0, 10, 6
/* 00000544 00000584  3B 20 00 00 */	li r25, 0x0
.L_00000548:
/* 00000548 00000588  7F 23 CB 78 */	mr r3, r25
/* 0000054C 0000058C  48 00 00 01 */	bl SIGetResponseRaw
/* 00000550 00000590  2C 03 00 00 */	cmpwi r3, 0x0
/* 00000554 00000594  41 82 00 08 */	beq .L_0000055C
/* 00000558 00000598  92 B6 00 00 */	stw r21, 0x0(r22)
.L_0000055C:
/* 0000055C 0000059C  3B 39 00 01 */	addi r25, r25, 0x1
/* 00000560 000005A0  2C 19 00 04 */	cmpwi r25, 0x4
/* 00000564 000005A4  3A D6 00 04 */	addi r22, r22, 0x4
/* 00000568 000005A8  41 80 FF E0 */	blt .L_00000548
/* 0000056C 000005AC  80 B8 00 00 */	lwz r5, 0x0(r24)
/* 00000570 000005B0  3C 60 80 00 */	lis r3, 0x8000
/* 00000574 000005B4  38 00 00 18 */	li r0, 0x18
/* 00000578 000005B8  7C 60 04 30 */	srw r0, r3, r0
/* 0000057C 000005BC  7C A0 00 39 */	and. r0, r5, r0
/* 00000580 000005C0  57 46 F8 7E */	srwi r6, r26, 1
/* 00000584 000005C4  41 82 00 24 */	beq .L_000005A8
/* 00000588 000005C8  80 17 00 00 */	lwz r0, 0x0(r23)
/* 0000058C 000005CC  28 00 00 00 */	cmplwi r0, 0x0
/* 00000590 000005D0  41 82 00 F8 */	beq .L_00000688
/* 00000594 000005D4  80 17 00 00 */	lwz r0, 0x0(r23)
/* 00000598 000005D8  7C 06 02 14 */	add r0, r6, r0
/* 0000059C 000005DC  7C 00 A8 40 */	cmplw r0, r21
/* 000005A0 000005E0  40 80 00 08 */	bge .L_000005A8
/* 000005A4 000005E4  48 00 00 E4 */	b .L_00000688
.L_000005A8:
/* 000005A8 000005E8  38 00 00 19 */	li r0, 0x19
/* 000005AC 000005EC  7C 60 04 30 */	srw r0, r3, r0
/* 000005B0 000005F0  7C A0 00 39 */	and. r0, r5, r0
/* 000005B4 000005F4  38 97 00 04 */	addi r4, r23, 0x4
/* 000005B8 000005F8  41 82 00 24 */	beq .L_000005DC
/* 000005BC 000005FC  80 04 00 00 */	lwz r0, 0x0(r4)
/* 000005C0 00000600  28 00 00 00 */	cmplwi r0, 0x0
/* 000005C4 00000604  41 82 00 C4 */	beq .L_00000688
/* 000005C8 00000608  80 04 00 00 */	lwz r0, 0x0(r4)
/* 000005CC 0000060C  7C 06 02 14 */	add r0, r6, r0
/* 000005D0 00000610  7C 00 A8 40 */	cmplw r0, r21
/* 000005D4 00000614  40 80 00 08 */	bge .L_000005DC
/* 000005D8 00000618  48 00 00 B0 */	b .L_00000688
.L_000005DC:
/* 000005DC 0000061C  38 00 00 1A */	li r0, 0x1a
/* 000005E0 00000620  7C 60 04 30 */	srw r0, r3, r0
/* 000005E4 00000624  7C A0 00 39 */	and. r0, r5, r0
/* 000005E8 00000628  38 84 00 04 */	addi r4, r4, 0x4
/* 000005EC 0000062C  41 82 00 24 */	beq .L_00000610
/* 000005F0 00000630  80 04 00 00 */	lwz r0, 0x0(r4)
/* 000005F4 00000634  28 00 00 00 */	cmplwi r0, 0x0
/* 000005F8 00000638  41 82 00 90 */	beq .L_00000688
/* 000005FC 0000063C  80 04 00 00 */	lwz r0, 0x0(r4)
/* 00000600 00000640  7C 06 02 14 */	add r0, r6, r0
/* 00000604 00000644  7C 00 A8 40 */	cmplw r0, r21
/* 00000608 00000648  40 80 00 08 */	bge .L_00000610
/* 0000060C 0000064C  48 00 00 7C */	b .L_00000688
.L_00000610:
/* 00000610 00000650  38 00 00 1B */	li r0, 0x1b
/* 00000614 00000654  7C 60 04 30 */	srw r0, r3, r0
/* 00000618 00000658  7C A0 00 39 */	and. r0, r5, r0
/* 0000061C 0000065C  38 84 00 04 */	addi r4, r4, 0x4
/* 00000620 00000660  41 82 00 24 */	beq .L_00000644
/* 00000624 00000664  80 04 00 00 */	lwz r0, 0x0(r4)
/* 00000628 00000668  28 00 00 00 */	cmplwi r0, 0x0
/* 0000062C 0000066C  41 82 00 5C */	beq .L_00000688
/* 00000630 00000670  80 04 00 00 */	lwz r0, 0x0(r4)
/* 00000634 00000674  7C 06 02 14 */	add r0, r6, r0
/* 00000638 00000678  7C 00 A8 40 */	cmplw r0, r21
/* 0000063C 0000067C  40 80 00 08 */	bge .L_00000644
/* 00000640 00000680  48 00 00 48 */	b .L_00000688
.L_00000644:
/* 00000644 00000684  3A C0 00 00 */	li r22, 0x0
/* 00000648 00000688  92 D7 00 00 */	stw r22, 0x0(r23)
/* 0000064C 0000068C  3A BC 01 A0 */	addi r21, r28, 0x1a0
/* 00000650 00000690  92 DC 01 E4 */	stw r22, 0x1e4(r28)
/* 00000654 00000694  92 DC 01 E8 */	stw r22, 0x1e8(r28)
/* 00000658 00000698  92 DC 01 EC */	stw r22, 0x1ec(r28)
.L_0000065C:
/* 0000065C 0000069C  81 95 00 00 */	lwz r12, 0x0(r21)
/* 00000660 000006A0  28 0C 00 00 */	cmplwi r12, 0x0
/* 00000664 000006A4  41 82 00 14 */	beq .L_00000678
/* 00000668 000006A8  7D 88 03 A6 */	mtlr r12
/* 0000066C 000006AC  38 7E 00 00 */	addi r3, r30, 0x0
/* 00000670 000006B0  38 9F 00 00 */	addi r4, r31, 0x0
/* 00000674 000006B4  4E 80 00 21 */	blrl
.L_00000678:
/* 00000678 000006B8  3A D6 00 01 */	addi r22, r22, 0x1
/* 0000067C 000006BC  2C 16 00 04 */	cmpwi r22, 0x4
/* 00000680 000006C0  3A B5 00 04 */	addi r21, r21, 0x4
/* 00000684 000006C4  41 80 FF D8 */	blt .L_0000065C
.L_00000688:
/* 00000688 000006C8  BA A1 00 1C */	lmw r21, 0x1c(r1)
/* 0000068C 000006CC  80 01 00 4C */	lwz r0, 0x4c(r1)
/* 00000690 000006D0  38 21 00 48 */	addi r1, r1, 0x48
/* 00000694 000006D4  7C 08 03 A6 */	mtlr r0
/* 00000698 000006D8  4E 80 00 20 */	blr
.endfn SIInterruptHandler

.fn SIEnablePollingInterrupt, local
/* 0000069C 000006DC  7C 08 02 A6 */	mflr r0
/* 000006A0 000006E0  3C 80 00 00 */	lis r4, Packet@ha
/* 000006A4 000006E4  90 01 00 04 */	stw r0, 0x4(r1)
/* 000006A8 000006E8  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 000006AC 000006EC  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 000006B0 000006F0  3B E4 00 00 */	addi r31, r4, Packet@l
/* 000006B4 000006F4  93 C1 00 28 */	stw r30, 0x28(r1)
/* 000006B8 000006F8  93 A1 00 24 */	stw r29, 0x24(r1)
/* 000006BC 000006FC  3B A3 00 00 */	addi r29, r3, 0x0
/* 000006C0 00000700  48 00 00 01 */	bl OSDisableInterrupts
/* 000006C4 00000704  3C 80 CC 00 */	lis r4, 0xcc00
/* 000006C8 00000708  84 A4 64 34 */	lwzu r5, 0x6434(r4)
/* 000006CC 0000070C  54 A0 01 09 */	rlwinm. r0, r5, 0, 4, 4
/* 000006D0 00000710  41 82 00 0C */	beq .L_000006DC
/* 000006D4 00000714  3B C0 00 01 */	li r30, 0x1
/* 000006D8 00000718  48 00 00 08 */	b .L_000006E0
.L_000006DC:
/* 000006DC 0000071C  3B C0 00 00 */	li r30, 0x0
.L_000006E0:
/* 000006E0 00000720  2C 1D 00 00 */	cmpwi r29, 0x0
/* 000006E4 00000724  41 82 00 20 */	beq .L_00000704
/* 000006E8 00000728  38 00 00 00 */	li r0, 0x0
/* 000006EC 0000072C  90 1F 01 E0 */	stw r0, 0x1e0(r31)
/* 000006F0 00000730  64 A5 08 00 */	oris r5, r5, 0x800
/* 000006F4 00000734  90 1F 01 E4 */	stw r0, 0x1e4(r31)
/* 000006F8 00000738  90 1F 01 E8 */	stw r0, 0x1e8(r31)
/* 000006FC 0000073C  90 1F 01 EC */	stw r0, 0x1ec(r31)
/* 00000700 00000740  48 00 00 08 */	b .L_00000708
.L_00000704:
/* 00000704 00000744  54 A5 01 46 */	rlwinm r5, r5, 0, 5, 3
.L_00000708:
/* 00000708 00000748  54 A5 00 7C */	rlwinm r5, r5, 0, 1, 30
/* 0000070C 0000074C  90 A4 00 00 */	stw r5, 0x0(r4)
/* 00000710 00000750  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000714 00000754  80 01 00 34 */	lwz r0, 0x34(r1)
/* 00000718 00000758  7F C3 F3 78 */	mr r3, r30
/* 0000071C 0000075C  83 E1 00 2C */	lwz r31, 0x2c(r1)
/* 00000720 00000760  83 C1 00 28 */	lwz r30, 0x28(r1)
/* 00000724 00000764  7C 08 03 A6 */	mtlr r0
/* 00000728 00000768  83 A1 00 24 */	lwz r29, 0x24(r1)
/* 0000072C 0000076C  38 21 00 30 */	addi r1, r1, 0x30
/* 00000730 00000770  4E 80 00 20 */	blr
.endfn SIEnablePollingInterrupt

.fn SIRegisterPollingHandler, global
/* 00000734 00000774  7C 08 02 A6 */	mflr r0
/* 00000738 00000778  90 01 00 04 */	stw r0, 0x4(r1)
/* 0000073C 0000077C  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00000740 00000780  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000744 00000784  93 C1 00 10 */	stw r30, 0x10(r1)
/* 00000748 00000788  7C 7E 1B 78 */	mr r30, r3
/* 0000074C 0000078C  48 00 00 01 */	bl OSDisableInterrupts
/* 00000750 00000790  3C 80 00 00 */	lis r4, OSSerial_804A7F58@ha
/* 00000754 00000794  38 00 00 04 */	li r0, 0x4
/* 00000758 00000798  38 84 00 00 */	addi r4, r4, OSSerial_804A7F58@l
/* 0000075C 0000079C  7C 09 03 A6 */	mtctr r0
/* 00000760 000007A0  3B E3 00 00 */	addi r31, r3, 0x0
/* 00000764 000007A4  38 64 00 00 */	addi r3, r4, 0x0
.L_00000768:
/* 00000768 000007A8  80 03 00 00 */	lwz r0, 0x0(r3)
/* 0000076C 000007AC  7C 00 F0 40 */	cmplw r0, r30
/* 00000770 000007B0  40 82 00 14 */	bne .L_00000784
/* 00000774 000007B4  7F E3 FB 78 */	mr r3, r31
/* 00000778 000007B8  48 00 00 01 */	bl OSRestoreInterrupts
/* 0000077C 000007BC  38 60 00 01 */	li r3, 0x1
/* 00000780 000007C0  48 00 00 68 */	b .L_000007E8
.L_00000784:
/* 00000784 000007C4  38 63 00 04 */	addi r3, r3, 0x4
/* 00000788 000007C8  42 00 FF E0 */	bdnz .L_00000768
/* 0000078C 000007CC  38 00 00 04 */	li r0, 0x4
/* 00000790 000007D0  7C 09 03 A6 */	mtctr r0
/* 00000794 000007D4  38 A0 00 00 */	li r5, 0x0
.L_00000798:
/* 00000798 000007D8  80 04 00 00 */	lwz r0, 0x0(r4)
/* 0000079C 000007DC  28 00 00 00 */	cmplwi r0, 0x0
/* 000007A0 000007E0  40 82 00 30 */	bne .L_000007D0
/* 000007A4 000007E4  3C 60 00 00 */	lis r3, OSSerial_804A7F58@ha
/* 000007A8 000007E8  54 A4 10 3A */	slwi r4, r5, 2
/* 000007AC 000007EC  38 03 00 00 */	addi r0, r3, OSSerial_804A7F58@l
/* 000007B0 000007F0  7C 60 22 14 */	add r3, r0, r4
/* 000007B4 000007F4  93 C3 00 00 */	stw r30, 0x0(r3)
/* 000007B8 000007F8  38 60 00 01 */	li r3, 0x1
/* 000007BC 000007FC  48 00 00 01 */	bl SIEnablePollingInterrupt
/* 000007C0 00000800  7F E3 FB 78 */	mr r3, r31
/* 000007C4 00000804  48 00 00 01 */	bl OSRestoreInterrupts
/* 000007C8 00000808  38 60 00 01 */	li r3, 0x1
/* 000007CC 0000080C  48 00 00 1C */	b .L_000007E8
.L_000007D0:
/* 000007D0 00000810  38 84 00 04 */	addi r4, r4, 0x4
/* 000007D4 00000814  38 A5 00 01 */	addi r5, r5, 0x1
/* 000007D8 00000818  42 00 FF C0 */	bdnz .L_00000798
/* 000007DC 0000081C  7F E3 FB 78 */	mr r3, r31
/* 000007E0 00000820  48 00 00 01 */	bl OSRestoreInterrupts
/* 000007E4 00000824  38 60 00 00 */	li r3, 0x0
.L_000007E8:
/* 000007E8 00000828  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 000007EC 0000082C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 000007F0 00000830  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 000007F4 00000834  7C 08 03 A6 */	mtlr r0
/* 000007F8 00000838  38 21 00 18 */	addi r1, r1, 0x18
/* 000007FC 0000083C  4E 80 00 20 */	blr
.endfn SIRegisterPollingHandler

.fn SIUnregisterPollingHandler, global
/* 00000800 00000840  7C 08 02 A6 */	mflr r0
/* 00000804 00000844  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000808 00000848  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 0000080C 0000084C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000810 00000850  93 C1 00 10 */	stw r30, 0x10(r1)
/* 00000814 00000854  7C 7E 1B 78 */	mr r30, r3
/* 00000818 00000858  48 00 00 01 */	bl OSDisableInterrupts
/* 0000081C 0000085C  3C 80 00 00 */	lis r4, OSSerial_804A7F58@ha
/* 00000820 00000860  38 00 00 04 */	li r0, 0x4
/* 00000824 00000864  38 A4 00 00 */	addi r5, r4, OSSerial_804A7F58@l
/* 00000828 00000868  7C 09 03 A6 */	mtctr r0
/* 0000082C 0000086C  3B E3 00 00 */	addi r31, r3, 0x0
/* 00000830 00000870  38 65 00 00 */	addi r3, r5, 0x0
/* 00000834 00000874  38 80 00 00 */	li r4, 0x0
.L_00000838:
/* 00000838 00000878  80 03 00 00 */	lwz r0, 0x0(r3)
/* 0000083C 0000087C  7C 00 F0 40 */	cmplw r0, r30
/* 00000840 00000880  40 82 00 84 */	bne .L_000008C4
/* 00000844 00000884  3C 60 00 00 */	lis r3, OSSerial_804A7F58@ha
/* 00000848 00000888  54 84 10 3A */	slwi r4, r4, 2
/* 0000084C 0000088C  38 03 00 00 */	addi r0, r3, OSSerial_804A7F58@l
/* 00000850 00000890  7C 60 22 14 */	add r3, r0, r4
/* 00000854 00000894  38 00 00 00 */	li r0, 0x0
/* 00000858 00000898  90 03 00 00 */	stw r0, 0x0(r3)
/* 0000085C 0000089C  38 80 00 00 */	li r4, 0x0
/* 00000860 000008A0  80 05 00 00 */	lwz r0, 0x0(r5)
/* 00000864 000008A4  28 00 00 00 */	cmplwi r0, 0x0
/* 00000868 000008A8  40 82 00 3C */	bne .L_000008A4
/* 0000086C 000008AC  38 65 00 04 */	addi r3, r5, 0x4
/* 00000870 000008B0  80 05 00 04 */	lwz r0, 0x4(r5)
/* 00000874 000008B4  38 80 00 01 */	li r4, 0x1
/* 00000878 000008B8  28 00 00 00 */	cmplwi r0, 0x0
/* 0000087C 000008BC  40 82 00 28 */	bne .L_000008A4
/* 00000880 000008C0  84 03 00 04 */	lwzu r0, 0x4(r3)
/* 00000884 000008C4  38 80 00 02 */	li r4, 0x2
/* 00000888 000008C8  28 00 00 00 */	cmplwi r0, 0x0
/* 0000088C 000008CC  40 82 00 18 */	bne .L_000008A4
/* 00000890 000008D0  80 03 00 04 */	lwz r0, 0x4(r3)
/* 00000894 000008D4  38 80 00 03 */	li r4, 0x3
/* 00000898 000008D8  28 00 00 00 */	cmplwi r0, 0x0
/* 0000089C 000008DC  40 82 00 08 */	bne .L_000008A4
/* 000008A0 000008E0  38 80 00 04 */	li r4, 0x4
.L_000008A4:
/* 000008A4 000008E4  2C 04 00 04 */	cmpwi r4, 0x4
/* 000008A8 000008E8  40 82 00 0C */	bne .L_000008B4
/* 000008AC 000008EC  38 60 00 00 */	li r3, 0x0
/* 000008B0 000008F0  48 00 00 01 */	bl SIEnablePollingInterrupt
.L_000008B4:
/* 000008B4 000008F4  7F E3 FB 78 */	mr r3, r31
/* 000008B8 000008F8  48 00 00 01 */	bl OSRestoreInterrupts
/* 000008BC 000008FC  38 60 00 01 */	li r3, 0x1
/* 000008C0 00000900  48 00 00 1C */	b .L_000008DC
.L_000008C4:
/* 000008C4 00000904  38 63 00 04 */	addi r3, r3, 0x4
/* 000008C8 00000908  38 84 00 01 */	addi r4, r4, 0x1
/* 000008CC 0000090C  42 00 FF 6C */	bdnz .L_00000838
/* 000008D0 00000910  7F E3 FB 78 */	mr r3, r31
/* 000008D4 00000914  48 00 00 01 */	bl OSRestoreInterrupts
/* 000008D8 00000918  38 60 00 00 */	li r3, 0x0
.L_000008DC:
/* 000008DC 0000091C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 000008E0 00000920  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 000008E4 00000924  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 000008E8 00000928  7C 08 03 A6 */	mtlr r0
/* 000008EC 0000092C  38 21 00 18 */	addi r1, r1, 0x18
/* 000008F0 00000930  4E 80 00 20 */	blr
.endfn SIUnregisterPollingHandler

.fn SIInit, global
/* 000008F4 00000934  7C 08 02 A6 */	mflr r0
/* 000008F8 00000938  3C 60 00 00 */	lis r3, Packet@ha
/* 000008FC 0000093C  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000900 00000940  38 C3 00 00 */	addi r6, r3, Packet@l
/* 00000904 00000944  38 A0 FF FF */	li r5, -0x1
/* 00000908 00000948  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 0000090C 0000094C  3C 80 CC 00 */	lis r4, 0xcc00
/* 00000910 00000950  38 00 00 00 */	li r0, 0x0
/* 00000914 00000954  90 A6 00 60 */	stw r5, 0x60(r6)
/* 00000918 00000958  90 A6 00 40 */	stw r5, 0x40(r6)
/* 0000091C 0000095C  90 A6 00 20 */	stw r5, 0x20(r6)
/* 00000920 00000960  90 A6 00 00 */	stw r5, 0x0(r6)
/* 00000924 00000964  90 04 64 30 */	stw r0, 0x6430(r4)
.L_00000928:
/* 00000928 00000968  38 A4 64 00 */	addi r5, r4, 0x6400
/* 0000092C 0000096C  84 05 00 34 */	lwzu r0, 0x34(r5)
/* 00000930 00000970  54 00 07 FF */	clrlwi. r0, r0, 31
/* 00000934 00000974  40 82 FF F4 */	bne .L_00000928
/* 00000938 00000978  3C 00 80 00 */	lis r0, 0x8000
/* 0000093C 0000097C  3C 60 00 00 */	lis r3, SIInterruptHandler@ha
/* 00000940 00000980  90 05 00 00 */	stw r0, 0x0(r5)
/* 00000944 00000984  38 83 00 00 */	addi r4, r3, SIInterruptHandler@l
/* 00000948 00000988  38 60 00 14 */	li r3, 0x14
/* 0000094C 0000098C  48 00 00 01 */	bl __OSSetInterruptHandler
/* 00000950 00000990  38 60 08 00 */	li r3, 0x800
/* 00000954 00000994  48 00 00 01 */	bl __OSUnmaskInterrupts
/* 00000958 00000998  38 60 00 00 */	li r3, 0x0
/* 0000095C 0000099C  48 00 00 01 */	bl SIGetType
/* 00000960 000009A0  38 60 00 01 */	li r3, 0x1
/* 00000964 000009A4  48 00 00 01 */	bl SIGetType
/* 00000968 000009A8  38 60 00 02 */	li r3, 0x2
/* 0000096C 000009AC  48 00 00 01 */	bl SIGetType
/* 00000970 000009B0  38 60 00 03 */	li r3, 0x3
/* 00000974 000009B4  48 00 00 01 */	bl SIGetType
/* 00000978 000009B8  80 01 00 0C */	lwz r0, 0xc(r1)
/* 0000097C 000009BC  38 21 00 08 */	addi r1, r1, 0x8
/* 00000980 000009C0  7C 08 03 A6 */	mtlr r0
/* 00000984 000009C4  4E 80 00 20 */	blr
.endfn SIInit

.fn __SITransfer, local
/* 00000988 000009C8  7C 08 02 A6 */	mflr r0
/* 0000098C 000009CC  3D 20 00 00 */	lis r9, Si@ha
/* 00000990 000009D0  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000994 000009D4  94 21 FF B8 */	stwu r1, -0x48(r1)
/* 00000998 000009D8  BF 21 00 2C */	stmw r25, 0x2c(r1)
/* 0000099C 000009DC  3B 43 00 00 */	addi r26, r3, 0x0
/* 000009A0 000009E0  3B 64 00 00 */	addi r27, r4, 0x0
/* 000009A4 000009E4  3B 85 00 00 */	addi r28, r5, 0x0
/* 000009A8 000009E8  3B A6 00 00 */	addi r29, r6, 0x0
/* 000009AC 000009EC  3B C7 00 00 */	addi r30, r7, 0x0
/* 000009B0 000009F0  3B E8 00 00 */	addi r31, r8, 0x0
/* 000009B4 000009F4  3B 29 00 00 */	addi r25, r9, Si@l
/* 000009B8 000009F8  48 00 00 01 */	bl OSDisableInterrupts
/* 000009BC 000009FC  80 19 00 00 */	lwz r0, 0x0(r25)
/* 000009C0 00000A00  2C 00 FF FF */	cmpwi r0, -0x1
/* 000009C4 00000A04  41 82 00 10 */	beq .L_000009D4
/* 000009C8 00000A08  48 00 00 01 */	bl OSRestoreInterrupts
/* 000009CC 00000A0C  38 60 00 00 */	li r3, 0x0
/* 000009D0 00000A10  48 00 01 B0 */	b .L_00000B80
.L_000009D4:
/* 000009D4 00000A14  3C C0 CC 00 */	lis r6, 0xcc00
/* 000009D8 00000A18  57 40 18 38 */	slwi r0, r26, 3
/* 000009DC 00000A1C  80 E6 64 38 */	lwz r7, 0x6438(r6)
/* 000009E0 00000A20  3C 80 0F 00 */	lis r4, 0xf00
/* 000009E4 00000A24  7C 80 06 30 */	sraw r0, r4, r0
/* 000009E8 00000A28  7C E7 00 38 */	and r7, r7, r0
/* 000009EC 00000A2C  90 E6 64 38 */	stw r7, 0x6438(r6)
/* 000009F0 00000A30  38 1C 00 03 */	addi r0, r28, 0x3
/* 000009F4 00000A34  54 04 F0 BE */	srwi r4, r0, 2
/* 000009F8 00000A38  93 59 00 00 */	stw r26, 0x0(r25)
/* 000009FC 00000A3C  28 04 00 00 */	cmplwi r4, 0x0
/* 00000A00 00000A40  38 A0 00 00 */	li r5, 0x0
/* 00000A04 00000A44  93 F9 00 10 */	stw r31, 0x10(r25)
/* 00000A08 00000A48  93 D9 00 08 */	stw r30, 0x8(r25)
/* 00000A0C 00000A4C  93 B9 00 0C */	stw r29, 0xc(r25)
/* 00000A10 00000A50  40 81 00 A4 */	ble .L_00000AB4
/* 00000A14 00000A54  28 04 00 08 */	cmplwi r4, 0x8
/* 00000A18 00000A58  38 E4 FF F8 */	subi r7, r4, 0x8
/* 00000A1C 00000A5C  40 81 01 4C */	ble .L_00000B68
/* 00000A20 00000A60  38 07 00 07 */	addi r0, r7, 0x7
/* 00000A24 00000A64  54 00 E8 FE */	srwi r0, r0, 3
/* 00000A28 00000A68  28 07 00 00 */	cmplwi r7, 0x0
/* 00000A2C 00000A6C  7C 09 03 A6 */	mtctr r0
/* 00000A30 00000A70  38 FB 00 00 */	addi r7, r27, 0x0
/* 00000A34 00000A74  38 C6 64 00 */	addi r6, r6, 0x6400
/* 00000A38 00000A78  40 81 01 30 */	ble .L_00000B68
.L_00000A3C:
/* 00000A3C 00000A7C  80 07 00 00 */	lwz r0, 0x0(r7)
/* 00000A40 00000A80  38 A5 00 08 */	addi r5, r5, 0x8
/* 00000A44 00000A84  90 06 00 80 */	stw r0, 0x80(r6)
/* 00000A48 00000A88  80 07 00 04 */	lwz r0, 0x4(r7)
/* 00000A4C 00000A8C  90 06 00 84 */	stw r0, 0x84(r6)
/* 00000A50 00000A90  80 07 00 08 */	lwz r0, 0x8(r7)
/* 00000A54 00000A94  90 06 00 88 */	stw r0, 0x88(r6)
/* 00000A58 00000A98  80 07 00 0C */	lwz r0, 0xc(r7)
/* 00000A5C 00000A9C  90 06 00 8C */	stw r0, 0x8c(r6)
/* 00000A60 00000AA0  80 07 00 10 */	lwz r0, 0x10(r7)
/* 00000A64 00000AA4  90 06 00 90 */	stw r0, 0x90(r6)
/* 00000A68 00000AA8  80 07 00 14 */	lwz r0, 0x14(r7)
/* 00000A6C 00000AAC  90 06 00 94 */	stw r0, 0x94(r6)
/* 00000A70 00000AB0  80 07 00 18 */	lwz r0, 0x18(r7)
/* 00000A74 00000AB4  90 06 00 98 */	stw r0, 0x98(r6)
/* 00000A78 00000AB8  80 07 00 1C */	lwz r0, 0x1c(r7)
/* 00000A7C 00000ABC  38 E7 00 20 */	addi r7, r7, 0x20
/* 00000A80 00000AC0  90 06 00 9C */	stw r0, 0x9c(r6)
/* 00000A84 00000AC4  38 C6 00 20 */	addi r6, r6, 0x20
/* 00000A88 00000AC8  42 00 FF B4 */	bdnz .L_00000A3C
/* 00000A8C 00000ACC  48 00 00 DC */	b .L_00000B68
.L_00000A90:
/* 00000A90 00000AD0  7C 05 20 50 */	subf r0, r5, r4
/* 00000A94 00000AD4  7C 05 20 40 */	cmplw r5, r4
/* 00000A98 00000AD8  7C 09 03 A6 */	mtctr r0
/* 00000A9C 00000ADC  40 80 00 18 */	bge .L_00000AB4
.L_00000AA0:
/* 00000AA0 00000AE0  80 06 00 00 */	lwz r0, 0x0(r6)
/* 00000AA4 00000AE4  38 C6 00 04 */	addi r6, r6, 0x4
/* 00000AA8 00000AE8  90 07 00 80 */	stw r0, 0x80(r7)
/* 00000AAC 00000AEC  38 E7 00 04 */	addi r7, r7, 0x4
/* 00000AB0 00000AF0  42 00 FF F0 */	bdnz .L_00000AA0
.L_00000AB4:
/* 00000AB4 00000AF4  3C 80 CC 00 */	lis r4, 0xcc00
/* 00000AB8 00000AF8  38 C4 64 00 */	addi r6, r4, 0x6400
/* 00000ABC 00000AFC  84 06 00 34 */	lwzu r0, 0x34(r6)
/* 00000AC0 00000B00  38 80 00 01 */	li r4, 0x1
/* 00000AC4 00000B04  90 01 00 24 */	stw r0, 0x24(r1)
/* 00000AC8 00000B08  28 1F 00 00 */	cmplwi r31, 0x0
/* 00000ACC 00000B0C  88 01 00 24 */	lbz r0, 0x24(r1)
/* 00000AD0 00000B10  50 80 3E 30 */	rlwimi r0, r4, 7, 24, 24
/* 00000AD4 00000B14  98 01 00 24 */	stb r0, 0x24(r1)
/* 00000AD8 00000B18  41 82 00 08 */	beq .L_00000AE0
/* 00000ADC 00000B1C  48 00 00 08 */	b .L_00000AE4
.L_00000AE0:
/* 00000AE0 00000B20  38 80 00 00 */	li r4, 0x0
.L_00000AE4:
/* 00000AE4 00000B24  88 01 00 24 */	lbz r0, 0x24(r1)
/* 00000AE8 00000B28  50 80 36 72 */	rlwimi r0, r4, 6, 25, 25
/* 00000AEC 00000B2C  28 1C 00 80 */	cmplwi r28, 0x80
/* 00000AF0 00000B30  98 01 00 24 */	stb r0, 0x24(r1)
/* 00000AF4 00000B34  40 82 00 0C */	bne .L_00000B00
/* 00000AF8 00000B38  38 00 00 00 */	li r0, 0x0
/* 00000AFC 00000B3C  48 00 00 08 */	b .L_00000B04
.L_00000B00:
/* 00000B00 00000B40  7F 80 E3 78 */	mr r0, r28
.L_00000B04:
/* 00000B04 00000B44  54 04 06 3E */	clrlwi r4, r0, 24
/* 00000B08 00000B48  88 01 00 25 */	lbz r0, 0x25(r1)
/* 00000B0C 00000B4C  50 80 06 7E */	rlwimi r0, r4, 0, 25, 31
/* 00000B10 00000B50  28 1E 00 80 */	cmplwi r30, 0x80
/* 00000B14 00000B54  98 01 00 25 */	stb r0, 0x25(r1)
/* 00000B18 00000B58  40 82 00 0C */	bne .L_00000B24
/* 00000B1C 00000B5C  38 00 00 00 */	li r0, 0x0
/* 00000B20 00000B60  48 00 00 08 */	b .L_00000B28
.L_00000B24:
/* 00000B24 00000B64  7F C0 F3 78 */	mr r0, r30
.L_00000B28:
/* 00000B28 00000B68  54 04 06 3E */	clrlwi r4, r0, 24
/* 00000B2C 00000B6C  88 01 00 26 */	lbz r0, 0x26(r1)
/* 00000B30 00000B70  50 80 06 7E */	rlwimi r0, r4, 0, 25, 31
/* 00000B34 00000B74  98 01 00 26 */	stb r0, 0x26(r1)
/* 00000B38 00000B78  38 80 00 01 */	li r4, 0x1
/* 00000B3C 00000B7C  88 01 00 27 */	lbz r0, 0x27(r1)
/* 00000B40 00000B80  53 40 0F 7C */	rlwimi r0, r26, 1, 29, 30
/* 00000B44 00000B84  98 01 00 27 */	stb r0, 0x27(r1)
/* 00000B48 00000B88  88 01 00 27 */	lbz r0, 0x27(r1)
/* 00000B4C 00000B8C  50 80 07 FE */	rlwimi r0, r4, 0, 31, 31
/* 00000B50 00000B90  98 01 00 27 */	stb r0, 0x27(r1)
/* 00000B54 00000B94  80 01 00 24 */	lwz r0, 0x24(r1)
/* 00000B58 00000B98  90 06 00 00 */	stw r0, 0x0(r6)
/* 00000B5C 00000B9C  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000B60 00000BA0  38 60 00 01 */	li r3, 0x1
/* 00000B64 00000BA4  48 00 00 1C */	b .L_00000B80
.L_00000B68:
/* 00000B68 00000BA8  3C C0 CC 00 */	lis r6, 0xcc00
/* 00000B6C 00000BAC  54 A0 10 3A */	slwi r0, r5, 2
/* 00000B70 00000BB0  38 E6 64 00 */	addi r7, r6, 0x6400
/* 00000B74 00000BB4  7C DB 02 14 */	add r6, r27, r0
/* 00000B78 00000BB8  7C E7 02 14 */	add r7, r7, r0
/* 00000B7C 00000BBC  4B FF FF 14 */	b .L_00000A90
.L_00000B80:
/* 00000B80 00000BC0  BB 21 00 2C */	lmw r25, 0x2c(r1)
/* 00000B84 00000BC4  80 01 00 4C */	lwz r0, 0x4c(r1)
/* 00000B88 00000BC8  38 21 00 48 */	addi r1, r1, 0x48
/* 00000B8C 00000BCC  7C 08 03 A6 */	mtlr r0
/* 00000B90 00000BD0  4E 80 00 20 */	blr
.endfn __SITransfer

.fn SIGetStatus, global
/* 00000B94 00000BD4  7C 08 02 A6 */	mflr r0
/* 00000B98 00000BD8  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000B9C 00000BDC  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00000BA0 00000BE0  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000BA4 00000BE4  93 C1 00 10 */	stw r30, 0x10(r1)
/* 00000BA8 00000BE8  7C 7E 1B 78 */	mr r30, r3
/* 00000BAC 00000BEC  48 00 00 01 */	bl OSDisableInterrupts
/* 00000BB0 00000BF0  3C 80 CC 00 */	lis r4, 0xcc00
/* 00000BB4 00000BF4  20 1E 00 03 */	subfic r0, r30, 0x3
/* 00000BB8 00000BF8  83 E4 64 38 */	lwz r31, 0x6438(r4)
/* 00000BBC 00000BFC  54 00 18 38 */	slwi r0, r0, 3
/* 00000BC0 00000C00  7F FF 04 30 */	srw r31, r31, r0
/* 00000BC4 00000C04  57 E0 07 39 */	rlwinm. r0, r31, 0, 28, 28
/* 00000BC8 00000C08  41 82 00 28 */	beq .L_00000BF0
/* 00000BCC 00000C0C  3C 80 00 00 */	lis r4, Type@ha
/* 00000BD0 00000C10  57 C5 10 3A */	slwi r5, r30, 2
/* 00000BD4 00000C14  38 04 00 00 */	addi r0, r4, Type@l
/* 00000BD8 00000C18  7C 80 2A 14 */	add r4, r0, r5
/* 00000BDC 00000C1C  80 04 00 00 */	lwz r0, 0x0(r4)
/* 00000BE0 00000C20  54 00 06 31 */	rlwinm. r0, r0, 0, 24, 24
/* 00000BE4 00000C24  40 82 00 0C */	bne .L_00000BF0
/* 00000BE8 00000C28  38 00 00 08 */	li r0, 0x8
/* 00000BEC 00000C2C  90 04 00 00 */	stw r0, 0x0(r4)
.L_00000BF0:
/* 00000BF0 00000C30  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000BF4 00000C34  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00000BF8 00000C38  7F E3 FB 78 */	mr r3, r31
/* 00000BFC 00000C3C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000C00 00000C40  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 00000C04 00000C44  7C 08 03 A6 */	mtlr r0
/* 00000C08 00000C48  38 21 00 18 */	addi r1, r1, 0x18
/* 00000C0C 00000C4C  4E 80 00 20 */	blr
.endfn SIGetStatus

.fn SISetCommand, global
/* 00000C10 00000C50  1C 03 00 0C */	mulli r0, r3, 0xc
/* 00000C14 00000C54  3C 60 CC 00 */	lis r3, 0xcc00
/* 00000C18 00000C58  38 63 64 00 */	addi r3, r3, 0x6400
/* 00000C1C 00000C5C  7C 83 01 2E */	stwx r4, r3, r0
/* 00000C20 00000C60  4E 80 00 20 */	blr
.endfn SISetCommand

.fn SITransferCommands, global
/* 00000C24 00000C64  3C 60 CC 00 */	lis r3, 0xcc00
/* 00000C28 00000C68  3C 00 80 00 */	lis r0, 0x8000
/* 00000C2C 00000C6C  90 03 64 38 */	stw r0, 0x6438(r3)
/* 00000C30 00000C70  4E 80 00 20 */	blr
.endfn SITransferCommands

.fn SISetXY, global
/* 00000C34 00000C74  7C 08 02 A6 */	mflr r0
/* 00000C38 00000C78  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000C3C 00000C7C  54 80 40 2E */	slwi r0, r4, 8
/* 00000C40 00000C80  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00000C44 00000C84  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000C48 00000C88  54 7F 80 1E */	slwi r31, r3, 16
/* 00000C4C 00000C8C  7F FF 03 78 */	or r31, r31, r0
/* 00000C50 00000C90  48 00 00 01 */	bl OSDisableInterrupts
/* 00000C54 00000C94  3C 80 00 00 */	lis r4, Si@ha
/* 00000C58 00000C98  38 84 00 00 */	addi r4, r4, Si@l
/* 00000C5C 00000C9C  84 04 00 04 */	lwzu r0, 0x4(r4)
/* 00000C60 00000CA0  54 00 06 0A */	rlwinm r0, r0, 0, 24, 5
/* 00000C64 00000CA4  90 04 00 00 */	stw r0, 0x0(r4)
/* 00000C68 00000CA8  80 04 00 00 */	lwz r0, 0x0(r4)
/* 00000C6C 00000CAC  7C 00 FB 78 */	or r0, r0, r31
/* 00000C70 00000CB0  90 04 00 00 */	stw r0, 0x0(r4)
/* 00000C74 00000CB4  83 E4 00 00 */	lwz r31, 0x0(r4)
/* 00000C78 00000CB8  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000C7C 00000CBC  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00000C80 00000CC0  7F E3 FB 78 */	mr r3, r31
/* 00000C84 00000CC4  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000C88 00000CC8  38 21 00 18 */	addi r1, r1, 0x18
/* 00000C8C 00000CCC  7C 08 03 A6 */	mtlr r0
/* 00000C90 00000CD0  4E 80 00 20 */	blr
.endfn SISetXY

.fn SIEnablePolling, global
/* 00000C94 00000CD4  7C 08 02 A6 */	mflr r0
/* 00000C98 00000CD8  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000C9C 00000CDC  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00000CA0 00000CE0  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000CA4 00000CE4  7C 7F 1B 79 */	mr. r31, r3
/* 00000CA8 00000CE8  40 82 00 14 */	bne .L_00000CBC
/* 00000CAC 00000CEC  3C 60 00 00 */	lis r3, Si@ha
/* 00000CB0 00000CF0  38 63 00 00 */	addi r3, r3, Si@l
/* 00000CB4 00000CF4  80 63 00 04 */	lwz r3, 0x4(r3)
/* 00000CB8 00000CF8  48 00 00 64 */	b .L_00000D1C
.L_00000CBC:
/* 00000CBC 00000CFC  48 00 00 01 */	bl OSDisableInterrupts
/* 00000CC0 00000D00  3C 80 00 00 */	lis r4, Si@ha
/* 00000CC4 00000D04  38 84 00 00 */	addi r4, r4, Si@l
/* 00000CC8 00000D08  57 FF 46 3E */	srwi r31, r31, 24
/* 00000CCC 00000D0C  80 04 00 04 */	lwz r0, 0x4(r4)
/* 00000CD0 00000D10  38 A4 00 04 */	addi r5, r4, 0x4
/* 00000CD4 00000D14  57 E4 E7 3E */	extrwi r4, r31, 4, 24
/* 00000CD8 00000D18  7C 00 20 78 */	andc r0, r0, r4
/* 00000CDC 00000D1C  90 05 00 00 */	stw r0, 0x0(r5)
/* 00000CE0 00000D20  64 80 03 FF */	oris r0, r4, 0x3ff
/* 00000CE4 00000D24  60 00 FF F0 */	ori r0, r0, 0xfff0
/* 00000CE8 00000D28  7F FF 00 38 */	and r31, r31, r0
/* 00000CEC 00000D2C  80 05 00 00 */	lwz r0, 0x0(r5)
/* 00000CF0 00000D30  57 FF 06 0A */	rlwinm r31, r31, 0, 24, 5
/* 00000CF4 00000D34  7C 00 FB 78 */	or r0, r0, r31
/* 00000CF8 00000D38  90 05 00 00 */	stw r0, 0x0(r5)
/* 00000CFC 00000D3C  3C 80 CC 00 */	lis r4, 0xcc00
/* 00000D00 00000D40  38 84 64 00 */	addi r4, r4, 0x6400
/* 00000D04 00000D44  83 E5 00 00 */	lwz r31, 0x0(r5)
/* 00000D08 00000D48  3C 00 80 00 */	lis r0, 0x8000
/* 00000D0C 00000D4C  90 04 00 38 */	stw r0, 0x38(r4)
/* 00000D10 00000D50  93 E4 00 30 */	stw r31, 0x30(r4)
/* 00000D14 00000D54  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000D18 00000D58  7F E3 FB 78 */	mr r3, r31
.L_00000D1C:
/* 00000D1C 00000D5C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00000D20 00000D60  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000D24 00000D64  38 21 00 18 */	addi r1, r1, 0x18
/* 00000D28 00000D68  7C 08 03 A6 */	mtlr r0
/* 00000D2C 00000D6C  4E 80 00 20 */	blr
.endfn SIEnablePolling

.fn SIDisablePolling, global
/* 00000D30 00000D70  7C 08 02 A6 */	mflr r0
/* 00000D34 00000D74  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000D38 00000D78  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00000D3C 00000D7C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000D40 00000D80  7C 7F 1B 79 */	mr. r31, r3
/* 00000D44 00000D84  40 82 00 14 */	bne .L_00000D58
/* 00000D48 00000D88  3C 60 00 00 */	lis r3, Si@ha
/* 00000D4C 00000D8C  38 63 00 00 */	addi r3, r3, Si@l
/* 00000D50 00000D90  80 63 00 04 */	lwz r3, 0x4(r3)
/* 00000D54 00000D94  48 00 00 34 */	b .L_00000D88
.L_00000D58:
/* 00000D58 00000D98  48 00 00 01 */	bl OSDisableInterrupts
/* 00000D5C 00000D9C  3C 80 00 00 */	lis r4, Si@ha
/* 00000D60 00000DA0  38 84 00 00 */	addi r4, r4, Si@l
/* 00000D64 00000DA4  80 04 00 04 */	lwz r0, 0x4(r4)
/* 00000D68 00000DA8  57 FF 46 36 */	rlwinm r31, r31, 8, 24, 27
/* 00000D6C 00000DAC  38 A4 00 04 */	addi r5, r4, 0x4
/* 00000D70 00000DB0  3C 80 CC 00 */	lis r4, 0xcc00
/* 00000D74 00000DB4  7C 1F F8 78 */	andc r31, r0, r31
/* 00000D78 00000DB8  93 E4 64 30 */	stw r31, 0x6430(r4)
/* 00000D7C 00000DBC  93 E5 00 00 */	stw r31, 0x0(r5)
/* 00000D80 00000DC0  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000D84 00000DC4  7F E3 FB 78 */	mr r3, r31
.L_00000D88:
/* 00000D88 00000DC8  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00000D8C 00000DCC  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000D90 00000DD0  38 21 00 18 */	addi r1, r1, 0x18
/* 00000D94 00000DD4  7C 08 03 A6 */	mtlr r0
/* 00000D98 00000DD8  4E 80 00 20 */	blr
.endfn SIDisablePolling

.fn SIGetResponseRaw, local
/* 00000D9C 00000DDC  7C 08 02 A6 */	mflr r0
/* 00000DA0 00000DE0  3C 80 00 00 */	lis r4, Packet@ha
/* 00000DA4 00000DE4  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000DA8 00000DE8  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 00000DAC 00000DEC  93 E1 00 24 */	stw r31, 0x24(r1)
/* 00000DB0 00000DF0  3B E4 00 00 */	addi r31, r4, Packet@l
/* 00000DB4 00000DF4  93 C1 00 20 */	stw r30, 0x20(r1)
/* 00000DB8 00000DF8  3B C3 00 00 */	addi r30, r3, 0x0
/* 00000DBC 00000DFC  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 00000DC0 00000E00  48 00 00 01 */	bl OSDisableInterrupts
/* 00000DC4 00000E04  3C 80 CC 00 */	lis r4, 0xcc00
/* 00000DC8 00000E08  20 1E 00 03 */	subfic r0, r30, 0x3
/* 00000DCC 00000E0C  83 A4 64 38 */	lwz r29, 0x6438(r4)
/* 00000DD0 00000E10  54 00 18 38 */	slwi r0, r0, 3
/* 00000DD4 00000E14  7F BD 04 30 */	srw r29, r29, r0
/* 00000DD8 00000E18  57 A0 07 39 */	rlwinm. r0, r29, 0, 28, 28
/* 00000DDC 00000E1C  41 82 00 28 */	beq .L_00000E04
/* 00000DE0 00000E20  3C 80 00 00 */	lis r4, Type@ha
/* 00000DE4 00000E24  57 C5 10 3A */	slwi r5, r30, 2
/* 00000DE8 00000E28  38 04 00 00 */	addi r0, r4, Type@l
/* 00000DEC 00000E2C  7C 80 2A 14 */	add r4, r0, r5
/* 00000DF0 00000E30  80 04 00 00 */	lwz r0, 0x0(r4)
/* 00000DF4 00000E34  54 00 06 31 */	rlwinm. r0, r0, 0, 24, 24
/* 00000DF8 00000E38  40 82 00 0C */	bne .L_00000E04
/* 00000DFC 00000E3C  38 00 00 08 */	li r0, 0x8
/* 00000E00 00000E40  90 04 00 00 */	stw r0, 0x0(r4)
.L_00000E04:
/* 00000E04 00000E44  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000E08 00000E48  57 A0 06 B5 */	rlwinm. r0, r29, 0, 26, 26
/* 00000E0C 00000E4C  41 82 00 44 */	beq .L_00000E50
/* 00000E10 00000E50  1C 9E 00 0C */	mulli r4, r30, 0xc
/* 00000E14 00000E54  3C 60 CC 00 */	lis r3, 0xcc00
/* 00000E18 00000E58  38 03 64 00 */	addi r0, r3, 0x6400
/* 00000E1C 00000E5C  7C 60 22 14 */	add r3, r0, r4
/* 00000E20 00000E60  57 C4 18 38 */	slwi r4, r30, 3
/* 00000E24 00000E64  80 03 00 04 */	lwz r0, 0x4(r3)
/* 00000E28 00000E68  7C DF 22 14 */	add r6, r31, r4
/* 00000E2C 00000E6C  90 06 01 C0 */	stw r0, 0x1c0(r6)
/* 00000E30 00000E70  57 C0 10 3A */	slwi r0, r30, 2
/* 00000E34 00000E74  7C 9F 02 14 */	add r4, r31, r0
/* 00000E38 00000E78  80 A3 00 08 */	lwz r5, 0x8(r3)
/* 00000E3C 00000E7C  38 00 00 01 */	li r0, 0x1
/* 00000E40 00000E80  38 60 00 01 */	li r3, 0x1
/* 00000E44 00000E84  90 A6 01 C4 */	stw r5, 0x1c4(r6)
/* 00000E48 00000E88  90 04 01 B0 */	stw r0, 0x1b0(r4)
/* 00000E4C 00000E8C  48 00 00 08 */	b .L_00000E54
.L_00000E50:
/* 00000E50 00000E90  38 60 00 00 */	li r3, 0x0
.L_00000E54:
/* 00000E54 00000E94  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 00000E58 00000E98  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 00000E5C 00000E9C  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 00000E60 00000EA0  7C 08 03 A6 */	mtlr r0
/* 00000E64 00000EA4  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 00000E68 00000EA8  38 21 00 28 */	addi r1, r1, 0x28
/* 00000E6C 00000EAC  4E 80 00 20 */	blr
.endfn SIGetResponseRaw

.fn SIGetResponse, global
/* 00000E70 00000EB0  7C 08 02 A6 */	mflr r0
/* 00000E74 00000EB4  3C A0 00 00 */	lis r5, Packet@ha
/* 00000E78 00000EB8  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000E7C 00000EBC  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 00000E80 00000EC0  BF 61 00 14 */	stmw r27, 0x14(r1)
/* 00000E84 00000EC4  3B A3 00 00 */	addi r29, r3, 0x0
/* 00000E88 00000EC8  3B C4 00 00 */	addi r30, r4, 0x0
/* 00000E8C 00000ECC  3B 85 00 00 */	addi r28, r5, Packet@l
/* 00000E90 00000ED0  48 00 00 01 */	bl OSDisableInterrupts
/* 00000E94 00000ED4  3B E3 00 00 */	addi r31, r3, 0x0
/* 00000E98 00000ED8  38 7D 00 00 */	addi r3, r29, 0x0
/* 00000E9C 00000EDC  48 00 00 01 */	bl SIGetStatus
/* 00000EA0 00000EE0  54 60 06 B5 */	rlwinm. r0, r3, 0, 26, 26
/* 00000EA4 00000EE4  41 82 00 3C */	beq .L_00000EE0
/* 00000EA8 00000EE8  1C 9D 00 0C */	mulli r4, r29, 0xc
/* 00000EAC 00000EEC  3C 60 CC 00 */	lis r3, 0xcc00
/* 00000EB0 00000EF0  38 03 64 00 */	addi r0, r3, 0x6400
/* 00000EB4 00000EF4  7C 80 22 14 */	add r4, r0, r4
/* 00000EB8 00000EF8  57 A3 18 38 */	slwi r3, r29, 3
/* 00000EBC 00000EFC  80 04 00 04 */	lwz r0, 0x4(r4)
/* 00000EC0 00000F00  7C BC 1A 14 */	add r5, r28, r3
/* 00000EC4 00000F04  90 05 01 C0 */	stw r0, 0x1c0(r5)
/* 00000EC8 00000F08  57 A0 10 3A */	slwi r0, r29, 2
/* 00000ECC 00000F0C  7C 7C 02 14 */	add r3, r28, r0
/* 00000ED0 00000F10  80 84 00 08 */	lwz r4, 0x8(r4)
/* 00000ED4 00000F14  38 00 00 01 */	li r0, 0x1
/* 00000ED8 00000F18  90 85 01 C4 */	stw r4, 0x1c4(r5)
/* 00000EDC 00000F1C  90 03 01 B0 */	stw r0, 0x1b0(r3)
.L_00000EE0:
/* 00000EE0 00000F20  57 A0 10 3A */	slwi r0, r29, 2
/* 00000EE4 00000F24  7C 7C 02 14 */	add r3, r28, r0
/* 00000EE8 00000F28  83 63 01 B0 */	lwz r27, 0x1b0(r3)
/* 00000EEC 00000F2C  38 00 00 00 */	li r0, 0x0
/* 00000EF0 00000F30  2C 1B 00 00 */	cmpwi r27, 0x0
/* 00000EF4 00000F34  90 03 01 B0 */	stw r0, 0x1b0(r3)
/* 00000EF8 00000F38  41 82 00 1C */	beq .L_00000F14
/* 00000EFC 00000F3C  57 A0 18 38 */	slwi r0, r29, 3
/* 00000F00 00000F40  7C 7C 02 14 */	add r3, r28, r0
/* 00000F04 00000F44  80 03 01 C0 */	lwz r0, 0x1c0(r3)
/* 00000F08 00000F48  90 1E 00 00 */	stw r0, 0x0(r30)
/* 00000F0C 00000F4C  80 03 01 C4 */	lwz r0, 0x1c4(r3)
/* 00000F10 00000F50  90 1E 00 04 */	stw r0, 0x4(r30)
.L_00000F14:
/* 00000F14 00000F54  7F E3 FB 78 */	mr r3, r31
/* 00000F18 00000F58  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000F1C 00000F5C  7F 63 DB 78 */	mr r3, r27
/* 00000F20 00000F60  BB 61 00 14 */	lmw r27, 0x14(r1)
/* 00000F24 00000F64  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 00000F28 00000F68  38 21 00 28 */	addi r1, r1, 0x28
/* 00000F2C 00000F6C  7C 08 03 A6 */	mtlr r0
/* 00000F30 00000F70  4E 80 00 20 */	blr
.endfn SIGetResponse

.fn AlarmHandler, local
/* 00000F34 00000F74  7C 08 02 A6 */	mflr r0
/* 00000F38 00000F78  3C 80 00 00 */	lis r4, Alarm@ha
/* 00000F3C 00000F7C  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000F40 00000F80  38 04 00 00 */	addi r0, r4, Alarm@l
/* 00000F44 00000F84  3C 80 66 66 */	lis r4, 0x6666
/* 00000F48 00000F88  7C 00 18 50 */	subf r0, r0, r3
/* 00000F4C 00000F8C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 00000F50 00000F90  38 64 66 67 */	addi r3, r4, 0x6667
/* 00000F54 00000F94  7C 03 00 96 */	mulhw r0, r3, r0
/* 00000F58 00000F98  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 00000F5C 00000F9C  7C 00 26 70 */	srawi r0, r0, 4
/* 00000F60 00000FA0  54 03 0F FE */	srwi r3, r0, 31
/* 00000F64 00000FA4  7C 00 1A 14 */	add r0, r0, r3
/* 00000F68 00000FA8  3C 60 00 00 */	lis r3, Packet@ha
/* 00000F6C 00000FAC  54 04 28 34 */	slwi r4, r0, 5
/* 00000F70 00000FB0  38 03 00 00 */	addi r0, r3, Packet@l
/* 00000F74 00000FB4  7F E0 22 14 */	add r31, r0, r4
/* 00000F78 00000FB8  80 7F 00 00 */	lwz r3, 0x0(r31)
/* 00000F7C 00000FBC  2C 03 FF FF */	cmpwi r3, -0x1
/* 00000F80 00000FC0  41 82 00 2C */	beq .L_00000FAC
/* 00000F84 00000FC4  80 9F 00 04 */	lwz r4, 0x4(r31)
/* 00000F88 00000FC8  80 BF 00 08 */	lwz r5, 0x8(r31)
/* 00000F8C 00000FCC  80 DF 00 0C */	lwz r6, 0xc(r31)
/* 00000F90 00000FD0  80 FF 00 10 */	lwz r7, 0x10(r31)
/* 00000F94 00000FD4  81 1F 00 14 */	lwz r8, 0x14(r31)
/* 00000F98 00000FD8  48 00 00 01 */	bl __SITransfer
/* 00000F9C 00000FDC  2C 03 00 00 */	cmpwi r3, 0x0
/* 00000FA0 00000FE0  41 82 00 0C */	beq .L_00000FAC
/* 00000FA4 00000FE4  38 00 FF FF */	li r0, -0x1
/* 00000FA8 00000FE8  90 1F 00 00 */	stw r0, 0x0(r31)
.L_00000FAC:
/* 00000FAC 00000FEC  80 01 00 24 */	lwz r0, 0x24(r1)
/* 00000FB0 00000FF0  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 00000FB4 00000FF4  38 21 00 20 */	addi r1, r1, 0x20
/* 00000FB8 00000FF8  7C 08 03 A6 */	mtlr r0
/* 00000FBC 00000FFC  4E 80 00 20 */	blr
.endfn AlarmHandler

.fn SITransfer, global
/* 00000FC0 00001000  7C 08 02 A6 */	mflr r0
/* 00000FC4 00001004  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000FC8 00001008  94 21 FF A0 */	stwu r1, -0x60(r1)
/* 00000FCC 0000100C  BE 61 00 2C */	stmw r19, 0x2c(r1)
/* 00000FD0 00001010  3B 03 00 00 */	addi r24, r3, 0x0
/* 00000FD4 00001014  3C 60 00 00 */	lis r3, Packet@ha
/* 00000FD8 00001018  3A E3 00 00 */	addi r23, r3, Packet@l
/* 00000FDC 0000101C  57 00 28 34 */	slwi r0, r24, 5
/* 00000FE0 00001020  3B 24 00 00 */	addi r25, r4, 0x0
/* 00000FE4 00001024  3B 45 00 00 */	addi r26, r5, 0x0
/* 00000FE8 00001028  3B 66 00 00 */	addi r27, r6, 0x0
/* 00000FEC 0000102C  3B 87 00 00 */	addi r28, r7, 0x0
/* 00000FF0 00001030  3B A8 00 00 */	addi r29, r8, 0x0
/* 00000FF4 00001034  3B E9 00 00 */	addi r31, r9, 0x0
/* 00000FF8 00001038  3B CA 00 00 */	addi r30, r10, 0x0
/* 00000FFC 0000103C  7E D7 02 14 */	add r22, r23, r0
/* 00001000 00001040  48 00 00 01 */	bl OSDisableInterrupts
/* 00001004 00001044  80 16 00 00 */	lwz r0, 0x0(r22)
/* 00001008 00001048  3A A3 00 00 */	addi r21, r3, 0x0
/* 0000100C 0000104C  2C 00 FF FF */	cmpwi r0, -0x1
/* 00001010 00001050  40 82 00 14 */	bne .L_00001024
/* 00001014 00001054  3C 60 00 00 */	lis r3, Si@ha
/* 00001018 00001058  80 03 00 00 */	lwz r0, Si@l(r3)
/* 0000101C 0000105C  7C 00 C0 00 */	cmpw r0, r24
/* 00001020 00001060  40 82 00 14 */	bne .L_00001034
.L_00001024:
/* 00001024 00001064  7E A3 AB 78 */	mr r3, r21
/* 00001028 00001068  48 00 00 01 */	bl OSRestoreInterrupts
/* 0000102C 0000106C  38 60 00 00 */	li r3, 0x0
/* 00001030 00001070  48 00 00 E8 */	b .L_00001118
.L_00001034:
/* 00001034 00001074  48 00 00 01 */	bl __OSGetSystemTime
/* 00001038 00001078  38 00 00 00 */	li r0, 0x0
/* 0000103C 0000107C  7F C5 02 78 */	xor r5, r30, r0
/* 00001040 00001080  7F E0 02 78 */	xor r0, r31, r0
/* 00001044 00001084  7C A0 03 79 */	or. r0, r5, r0
/* 00001048 00001088  40 82 00 10 */	bne .L_00001058
/* 0000104C 0000108C  3A 64 00 00 */	addi r19, r4, 0x0
/* 00001050 00001090  3A 83 00 00 */	addi r20, r3, 0x0
/* 00001054 00001094  48 00 00 1C */	b .L_00001070
.L_00001058:
/* 00001058 00001098  57 00 18 38 */	slwi r0, r24, 3
/* 0000105C 0000109C  7C D7 02 14 */	add r6, r23, r0
/* 00001060 000010A0  80 A6 01 44 */	lwz r5, 0x144(r6)
/* 00001064 000010A4  80 06 01 40 */	lwz r0, 0x140(r6)
/* 00001068 000010A8  7E 7E 28 14 */	addc r19, r30, r5
/* 0000106C 000010AC  7E 9F 01 14 */	adde r20, r31, r0
.L_00001070:
/* 00001070 000010B0  6C 66 80 00 */	xoris r6, r3, 0x8000
/* 00001074 000010B4  6E 85 80 00 */	xoris r5, r20, 0x8000
/* 00001078 000010B8  7C 13 20 10 */	subfc r0, r19, r4
/* 0000107C 000010BC  7C A5 31 10 */	subfe r5, r5, r6
/* 00001080 000010C0  7C A6 31 10 */	subfe r5, r6, r6
/* 00001084 000010C4  7C A5 00 D1 */	neg. r5, r5
/* 00001088 000010C8  41 82 00 30 */	beq .L_000010B8
/* 0000108C 000010CC  1C 18 00 28 */	mulli r0, r24, 0x28
/* 00001090 000010D0  7F C4 98 10 */	subfc r30, r4, r19
/* 00001094 000010D4  7F E3 A1 10 */	subfe r31, r3, r20
/* 00001098 000010D8  3C 80 00 00 */	lis r4, AlarmHandler@ha
/* 0000109C 000010DC  7C 77 02 14 */	add r3, r23, r0
/* 000010A0 000010E0  38 E4 00 00 */	addi r7, r4, AlarmHandler@l
/* 000010A4 000010E4  38 DE 00 00 */	addi r6, r30, 0x0
/* 000010A8 000010E8  38 BF 00 00 */	addi r5, r31, 0x0
/* 000010AC 000010EC  38 63 00 80 */	addi r3, r3, 0x80
/* 000010B0 000010F0  48 00 00 01 */	bl OSSetAlarm
/* 000010B4 000010F4  48 00 00 38 */	b .L_000010EC
.L_000010B8:
/* 000010B8 000010F8  38 78 00 00 */	addi r3, r24, 0x0
/* 000010BC 000010FC  38 99 00 00 */	addi r4, r25, 0x0
/* 000010C0 00001100  38 BA 00 00 */	addi r5, r26, 0x0
/* 000010C4 00001104  38 DB 00 00 */	addi r6, r27, 0x0
/* 000010C8 00001108  38 FC 00 00 */	addi r7, r28, 0x0
/* 000010CC 0000110C  39 1D 00 00 */	addi r8, r29, 0x0
/* 000010D0 00001110  48 00 00 01 */	bl __SITransfer
/* 000010D4 00001114  2C 03 00 00 */	cmpwi r3, 0x0
/* 000010D8 00001118  41 82 00 14 */	beq .L_000010EC
/* 000010DC 0000111C  7E A3 AB 78 */	mr r3, r21
/* 000010E0 00001120  48 00 00 01 */	bl OSRestoreInterrupts
/* 000010E4 00001124  38 60 00 01 */	li r3, 0x1
/* 000010E8 00001128  48 00 00 30 */	b .L_00001118
.L_000010EC:
/* 000010EC 0000112C  93 16 00 00 */	stw r24, 0x0(r22)
/* 000010F0 00001130  7E A3 AB 78 */	mr r3, r21
/* 000010F4 00001134  93 36 00 04 */	stw r25, 0x4(r22)
/* 000010F8 00001138  93 56 00 08 */	stw r26, 0x8(r22)
/* 000010FC 0000113C  93 76 00 0C */	stw r27, 0xc(r22)
/* 00001100 00001140  93 96 00 10 */	stw r28, 0x10(r22)
/* 00001104 00001144  93 B6 00 14 */	stw r29, 0x14(r22)
/* 00001108 00001148  92 76 00 1C */	stw r19, 0x1c(r22)
/* 0000110C 0000114C  92 96 00 18 */	stw r20, 0x18(r22)
/* 00001110 00001150  48 00 00 01 */	bl OSRestoreInterrupts
/* 00001114 00001154  38 60 00 01 */	li r3, 0x1
.L_00001118:
/* 00001118 00001158  BA 61 00 2C */	lmw r19, 0x2c(r1)
/* 0000111C 0000115C  80 01 00 64 */	lwz r0, 0x64(r1)
/* 00001120 00001160  38 21 00 60 */	addi r1, r1, 0x60
/* 00001124 00001164  7C 08 03 A6 */	mtlr r0
/* 00001128 00001168  4E 80 00 20 */	blr
.endfn SITransfer

.fn GetTypeCallback, local
/* 0000112C 0000116C  7C 08 02 A6 */	mflr r0
/* 00001130 00001170  90 01 00 04 */	stw r0, 0x4(r1)
/* 00001134 00001174  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 00001138 00001178  BF 41 00 18 */	stmw r26, 0x18(r1)
/* 0000113C 0000117C  3B 63 00 00 */	addi r27, r3, 0x0
/* 00001140 00001180  3C 60 00 00 */	lis r3, Type@ha
/* 00001144 00001184  38 03 00 00 */	addi r0, r3, Type@l
/* 00001148 00001188  57 7D 10 3A */	slwi r29, r27, 2
/* 0000114C 0000118C  7F C0 EA 14 */	add r30, r0, r29
/* 00001150 00001190  3C 60 00 00 */	lis r3, Packet@ha
/* 00001154 00001194  3B 44 00 00 */	addi r26, r4, 0x0
/* 00001158 00001198  3B E3 00 00 */	addi r31, r3, Packet@l
/* 0000115C 0000119C  80 1E 00 00 */	lwz r0, 0x0(r30)
/* 00001160 000011A0  54 00 06 6E */	rlwinm r0, r0, 0, 25, 23
/* 00001164 000011A4  90 1E 00 00 */	stw r0, 0x0(r30)
/* 00001168 000011A8  80 1E 00 00 */	lwz r0, 0x0(r30)
/* 0000116C 000011AC  7C 00 D3 78 */	or r0, r0, r26
/* 00001170 000011B0  90 1E 00 00 */	stw r0, 0x0(r30)
/* 00001174 000011B4  48 00 00 01 */	bl __OSGetSystemTime
/* 00001178 000011B8  57 60 18 38 */	slwi r0, r27, 3
/* 0000117C 000011BC  7C BF 02 14 */	add r5, r31, r0
/* 00001180 000011C0  90 85 01 24 */	stw r4, 0x124(r5)
/* 00001184 000011C4  3C 80 80 00 */	lis r4, 0x8000
/* 00001188 000011C8  57 40 07 3F */	clrlwi. r0, r26, 28
/* 0000118C 000011CC  90 65 01 20 */	stw r3, 0x120(r5)
/* 00001190 000011D0  7C 84 DC 30 */	srw r4, r4, r27
/* 00001194 000011D4  80 60 00 00 */	lwz r3, __PADFixBits@sda21(r0)
/* 00001198 000011D8  83 9E 00 00 */	lwz r28, 0x0(r30)
/* 0000119C 000011DC  7C 60 20 78 */	andc r0, r3, r4
/* 000011A0 000011E0  90 00 00 00 */	stw r0, __PADFixBits@sda21(r0)
/* 000011A4 000011E4  7C 7A 20 38 */	and r26, r3, r4
/* 000011A8 000011E8  40 82 00 24 */	bne .L_000011CC
/* 000011AC 000011EC  57 83 00 C8 */	rlwinm r3, r28, 0, 3, 4
/* 000011B0 000011F0  3C 03 F8 00 */	subis r0, r3, 0x800
/* 000011B4 000011F4  28 00 00 00 */	cmplwi r0, 0x0
/* 000011B8 000011F8  40 82 00 14 */	bne .L_000011CC
/* 000011BC 000011FC  57 80 00 01 */	clrrwi. r0, r28, 31
/* 000011C0 00001200  41 82 00 0C */	beq .L_000011CC
/* 000011C4 00001204  57 80 01 4B */	rlwinm. r0, r28, 0, 5, 5
/* 000011C8 00001208  41 82 00 5C */	beq .L_00001224
.L_000011CC:
/* 000011CC 0000120C  38 7B 00 00 */	addi r3, r27, 0x0
/* 000011D0 00001210  38 80 00 00 */	li r4, 0x0
/* 000011D4 00001214  48 00 00 01 */	bl OSSetWirelessID
/* 000011D8 00001218  57 60 20 36 */	slwi r0, r27, 4
/* 000011DC 0000121C  83 DE 00 00 */	lwz r30, 0x0(r30)
/* 000011E0 00001220  7F FF 02 14 */	add r31, r31, r0
/* 000011E4 00001224  3B A0 00 00 */	li r29, 0x0
/* 000011E8 00001228  3B 9D 00 00 */	addi r28, r29, 0x0
/* 000011EC 0000122C  3B FF 01 60 */	addi r31, r31, 0x160
.L_000011F0:
/* 000011F0 00001230  81 9F 00 00 */	lwz r12, 0x0(r31)
/* 000011F4 00001234  28 0C 00 00 */	cmplwi r12, 0x0
/* 000011F8 00001238  41 82 00 18 */	beq .L_00001210
/* 000011FC 0000123C  93 9F 00 00 */	stw r28, 0x0(r31)
/* 00001200 00001240  7D 88 03 A6 */	mtlr r12
/* 00001204 00001244  38 7B 00 00 */	addi r3, r27, 0x0
/* 00001208 00001248  38 9E 00 00 */	addi r4, r30, 0x0
/* 0000120C 0000124C  4E 80 00 21 */	blrl
.L_00001210:
/* 00001210 00001250  3B BD 00 01 */	addi r29, r29, 0x1
/* 00001214 00001254  2C 1D 00 04 */	cmpwi r29, 0x4
/* 00001218 00001258  3B FF 00 04 */	addi r31, r31, 0x4
/* 0000121C 0000125C  41 80 FF D4 */	blt .L_000011F0
/* 00001220 00001260  48 00 01 90 */	b .L_000013B0
.L_00001224:
/* 00001224 00001264  7F 63 DB 78 */	mr r3, r27
/* 00001228 00001268  48 00 00 01 */	bl OSGetWirelessID
/* 0000122C 0000126C  2C 1A 00 00 */	cmpwi r26, 0x0
/* 00001230 00001270  54 7A 42 2E */	clrlslwi r26, r3, 16, 8
/* 00001234 00001274  41 82 00 54 */	beq .L_00001288
/* 00001238 00001278  57 40 02 D7 */	rlwinm. r0, r26, 0, 11, 11
/* 0000123C 0000127C  41 82 00 4C */	beq .L_00001288
/* 00001240 00001280  3C 60 00 D0 */	lis r3, 0xd0
/* 00001244 00001284  38 03 FF 00 */	subi r0, r3, 0x100
/* 00001248 00001288  7F 40 00 38 */	and r0, r26, r0
/* 0000124C 0000128C  64 00 4E 10 */	oris r0, r0, 0x4e10
/* 00001250 00001290  7C 9F EA 14 */	add r4, r31, r29
/* 00001254 00001294  94 04 01 F0 */	stwu r0, 0x1f0(r4)
/* 00001258 00001298  38 00 00 80 */	li r0, 0x80
/* 0000125C 0000129C  3C 60 00 00 */	lis r3, GetTypeCallback@ha
/* 00001260 000012A0  90 1E 00 00 */	stw r0, 0x0(r30)
/* 00001264 000012A4  39 03 00 00 */	addi r8, r3, GetTypeCallback@l
/* 00001268 000012A8  38 7B 00 00 */	addi r3, r27, 0x0
/* 0000126C 000012AC  38 DE 00 00 */	addi r6, r30, 0x0
/* 00001270 000012B0  38 A0 00 03 */	li r5, 0x3
/* 00001274 000012B4  38 E0 00 03 */	li r7, 0x3
/* 00001278 000012B8  39 40 00 00 */	li r10, 0x0
/* 0000127C 000012BC  39 20 00 00 */	li r9, 0x0
/* 00001280 000012C0  48 00 00 01 */	bl SITransfer
/* 00001284 000012C4  48 00 01 2C */	b .L_000013B0
.L_00001288:
/* 00001288 000012C8  57 80 02 D7 */	rlwinm. r0, r28, 0, 11, 11
/* 0000128C 000012CC  41 82 00 70 */	beq .L_000012FC
/* 00001290 000012D0  3C 60 00 D0 */	lis r3, 0xd0
/* 00001294 000012D4  38 63 FF 00 */	subi r3, r3, 0x100
/* 00001298 000012D8  7F 40 18 38 */	and r0, r26, r3
/* 0000129C 000012DC  7F 83 18 38 */	and r3, r28, r3
/* 000012A0 000012E0  7C 00 18 40 */	cmplw r0, r3
/* 000012A4 000012E4  41 82 00 C4 */	beq .L_00001368
/* 000012A8 000012E8  57 40 02 D7 */	rlwinm. r0, r26, 0, 11, 11
/* 000012AC 000012EC  40 82 00 14 */	bne .L_000012C0
/* 000012B0 000012F0  64 7A 00 10 */	oris r26, r3, 0x10
/* 000012B4 000012F4  38 7B 00 00 */	addi r3, r27, 0x0
/* 000012B8 000012F8  57 44 C4 3E */	extrwi r4, r26, 16, 8
/* 000012BC 000012FC  48 00 00 01 */	bl OSSetWirelessID
.L_000012C0:
/* 000012C0 00001300  67 40 4E 00 */	oris r0, r26, 0x4e00
/* 000012C4 00001304  7C 9F EA 14 */	add r4, r31, r29
/* 000012C8 00001308  94 04 01 F0 */	stwu r0, 0x1f0(r4)
/* 000012CC 0000130C  38 00 00 80 */	li r0, 0x80
/* 000012D0 00001310  3C 60 00 00 */	lis r3, GetTypeCallback@ha
/* 000012D4 00001314  90 1E 00 00 */	stw r0, 0x0(r30)
/* 000012D8 00001318  39 03 00 00 */	addi r8, r3, GetTypeCallback@l
/* 000012DC 0000131C  38 7B 00 00 */	addi r3, r27, 0x0
/* 000012E0 00001320  38 DE 00 00 */	addi r6, r30, 0x0
/* 000012E4 00001324  38 A0 00 03 */	li r5, 0x3
/* 000012E8 00001328  38 E0 00 03 */	li r7, 0x3
/* 000012EC 0000132C  39 40 00 00 */	li r10, 0x0
/* 000012F0 00001330  39 20 00 00 */	li r9, 0x0
/* 000012F4 00001334  48 00 00 01 */	bl SITransfer
/* 000012F8 00001338  48 00 00 B8 */	b .L_000013B0
.L_000012FC:
/* 000012FC 0000133C  57 80 00 43 */	rlwinm. r0, r28, 0, 1, 1
/* 00001300 00001340  41 82 00 5C */	beq .L_0000135C
/* 00001304 00001344  3C 60 00 D0 */	lis r3, 0xd0
/* 00001308 00001348  38 03 FF 00 */	subi r0, r3, 0x100
/* 0000130C 0000134C  7F 9C 00 38 */	and r28, r28, r0
/* 00001310 00001350  67 9C 00 10 */	oris r28, r28, 0x10
/* 00001314 00001354  38 7B 00 00 */	addi r3, r27, 0x0
/* 00001318 00001358  57 84 C4 3E */	extrwi r4, r28, 16, 8
/* 0000131C 0000135C  48 00 00 01 */	bl OSSetWirelessID
/* 00001320 00001360  67 80 4E 00 */	oris r0, r28, 0x4e00
/* 00001324 00001364  7C 9F EA 14 */	add r4, r31, r29
/* 00001328 00001368  94 04 01 F0 */	stwu r0, 0x1f0(r4)
/* 0000132C 0000136C  38 00 00 80 */	li r0, 0x80
/* 00001330 00001370  3C 60 00 00 */	lis r3, GetTypeCallback@ha
/* 00001334 00001374  90 1E 00 00 */	stw r0, 0x0(r30)
/* 00001338 00001378  39 03 00 00 */	addi r8, r3, GetTypeCallback@l
/* 0000133C 0000137C  38 7B 00 00 */	addi r3, r27, 0x0
/* 00001340 00001380  38 DE 00 00 */	addi r6, r30, 0x0
/* 00001344 00001384  38 A0 00 03 */	li r5, 0x3
/* 00001348 00001388  38 E0 00 03 */	li r7, 0x3
/* 0000134C 0000138C  39 40 00 00 */	li r10, 0x0
/* 00001350 00001390  39 20 00 00 */	li r9, 0x0
/* 00001354 00001394  48 00 00 01 */	bl SITransfer
/* 00001358 00001398  48 00 00 58 */	b .L_000013B0
.L_0000135C:
/* 0000135C 0000139C  38 7B 00 00 */	addi r3, r27, 0x0
/* 00001360 000013A0  38 80 00 00 */	li r4, 0x0
/* 00001364 000013A4  48 00 00 01 */	bl OSSetWirelessID
.L_00001368:
/* 00001368 000013A8  57 60 20 36 */	slwi r0, r27, 4
/* 0000136C 000013AC  83 DE 00 00 */	lwz r30, 0x0(r30)
/* 00001370 000013B0  7F FF 02 14 */	add r31, r31, r0
/* 00001374 000013B4  3B A0 00 00 */	li r29, 0x0
/* 00001378 000013B8  3B 9D 00 00 */	addi r28, r29, 0x0
/* 0000137C 000013BC  3B FF 01 60 */	addi r31, r31, 0x160
.L_00001380:
/* 00001380 000013C0  81 9F 00 00 */	lwz r12, 0x0(r31)
/* 00001384 000013C4  28 0C 00 00 */	cmplwi r12, 0x0
/* 00001388 000013C8  41 82 00 18 */	beq .L_000013A0
/* 0000138C 000013CC  93 9F 00 00 */	stw r28, 0x0(r31)
/* 00001390 000013D0  7D 88 03 A6 */	mtlr r12
/* 00001394 000013D4  38 7B 00 00 */	addi r3, r27, 0x0
/* 00001398 000013D8  38 9E 00 00 */	addi r4, r30, 0x0
/* 0000139C 000013DC  4E 80 00 21 */	blrl
.L_000013A0:
/* 000013A0 000013E0  3B BD 00 01 */	addi r29, r29, 0x1
/* 000013A4 000013E4  2C 1D 00 04 */	cmpwi r29, 0x4
/* 000013A8 000013E8  3B FF 00 04 */	addi r31, r31, 0x4
/* 000013AC 000013EC  41 80 FF D4 */	blt .L_00001380
.L_000013B0:
/* 000013B0 000013F0  BB 41 00 18 */	lmw r26, 0x18(r1)
/* 000013B4 000013F4  80 01 00 34 */	lwz r0, 0x34(r1)
/* 000013B8 000013F8  38 21 00 30 */	addi r1, r1, 0x30
/* 000013BC 000013FC  7C 08 03 A6 */	mtlr r0
/* 000013C0 00001400  4E 80 00 20 */	blr
.endfn GetTypeCallback

.fn SIGetType, global
/* 000013C4 00001404  7C 08 02 A6 */	mflr r0
/* 000013C8 00001408  90 01 00 04 */	stw r0, 0x4(r1)
/* 000013CC 0000140C  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 000013D0 00001410  BF 61 00 14 */	stmw r27, 0x14(r1)
/* 000013D4 00001414  7C 7B 1B 78 */	mr r27, r3
/* 000013D8 00001418  48 00 00 01 */	bl OSDisableInterrupts
/* 000013DC 0000141C  3C 80 00 00 */	lis r4, Type@ha
/* 000013E0 00001420  57 65 10 3A */	slwi r5, r27, 2
/* 000013E4 00001424  38 04 00 00 */	addi r0, r4, Type@l
/* 000013E8 00001428  7F C0 2A 14 */	add r30, r0, r5
/* 000013EC 0000142C  83 9E 00 00 */	lwz r28, 0x0(r30)
/* 000013F0 00001430  7C 7D 1B 78 */	mr r29, r3
/* 000013F4 00001434  48 00 00 01 */	bl __OSGetSystemTime
/* 000013F8 00001438  3C A0 00 00 */	lis r5, TypeTime@ha
/* 000013FC 0000143C  57 66 18 38 */	slwi r6, r27, 3
/* 00001400 00001440  38 05 00 00 */	addi r0, r5, TypeTime@l
/* 00001404 00001444  7F E0 32 14 */	add r31, r0, r6
/* 00001408 00001448  80 DF 00 04 */	lwz r6, 0x4(r31)
/* 0000140C 0000144C  3C A0 00 00 */	lis r5, Si@ha
/* 00001410 00001450  38 A5 00 00 */	addi r5, r5, Si@l
/* 00001414 00001454  80 1F 00 00 */	lwz r0, 0x0(r31)
/* 00001418 00001458  7C 86 20 10 */	subfc r4, r6, r4
/* 0000141C 0000145C  7C 00 19 10 */	subfe r0, r0, r3
/* 00001420 00001460  80 C5 00 04 */	lwz r6, 0x4(r5)
/* 00001424 00001464  38 A0 00 80 */	li r5, 0x80
/* 00001428 00001468  7C A3 DE 30 */	sraw r3, r5, r27
/* 0000142C 0000146C  7C C3 18 39 */	and. r3, r6, r3
/* 00001430 00001470  41 82 00 34 */	beq .L_00001464
/* 00001434 00001474  28 1C 00 08 */	cmplwi r28, 0x8
/* 00001438 00001478  41 82 00 20 */	beq .L_00001458
/* 0000143C 0000147C  48 00 00 01 */	bl __OSGetSystemTime
/* 00001440 00001480  90 9F 00 04 */	stw r4, 0x4(r31)
/* 00001444 00001484  90 7F 00 00 */	stw r3, 0x0(r31)
/* 00001448 00001488  7F A3 EB 78 */	mr r3, r29
/* 0000144C 0000148C  48 00 00 01 */	bl OSRestoreInterrupts
/* 00001450 00001490  7F 83 E3 78 */	mr r3, r28
/* 00001454 00001494  48 00 01 20 */	b .L_00001574
.L_00001458:
/* 00001458 00001498  90 BE 00 00 */	stw r5, 0x0(r30)
/* 0000145C 0000149C  3B 80 00 80 */	li r28, 0x80
/* 00001460 000014A0  48 00 00 B4 */	b .L_00001514
.L_00001464:
/* 00001464 000014A4  3C 60 80 00 */	lis r3, 0x8000
/* 00001468 000014A8  80 C3 00 F8 */	lwz r6, 0xf8(r3)
/* 0000146C 000014AC  3C A0 10 62 */	lis r5, 0x1062
/* 00001470 000014B0  38 A5 4D D3 */	addi r5, r5, 0x4dd3
/* 00001474 000014B4  54 C6 F0 BE */	srwi r6, r6, 2
/* 00001478 000014B8  7C A5 30 16 */	mulhwu r5, r5, r6
/* 0000147C 000014BC  54 A5 D1 BE */	srwi r5, r5, 6
/* 00001480 000014C0  1C E5 00 32 */	mulli r7, r5, 0x32
/* 00001484 000014C4  38 60 00 00 */	li r3, 0x0
/* 00001488 000014C8  6C 66 80 00 */	xoris r6, r3, 0x8000
/* 0000148C 000014CC  6C 05 80 00 */	xoris r5, r0, 0x8000
/* 00001490 000014D0  7C 64 38 10 */	subfc r3, r4, r7
/* 00001494 000014D4  7C A5 31 10 */	subfe r5, r5, r6
/* 00001498 000014D8  7C A6 31 10 */	subfe r5, r6, r6
/* 0000149C 000014DC  7C A5 00 D1 */	neg. r5, r5
/* 000014A0 000014E0  40 82 00 1C */	bne .L_000014BC
/* 000014A4 000014E4  28 1C 00 08 */	cmplwi r28, 0x8
/* 000014A8 000014E8  41 82 00 14 */	beq .L_000014BC
/* 000014AC 000014EC  7F A3 EB 78 */	mr r3, r29
/* 000014B0 000014F0  48 00 00 01 */	bl OSRestoreInterrupts
/* 000014B4 000014F4  7F 83 E3 78 */	mr r3, r28
/* 000014B8 000014F8  48 00 00 BC */	b .L_00001574
.L_000014BC:
/* 000014BC 000014FC  3C 60 80 00 */	lis r3, 0x8000
/* 000014C0 00001500  80 C3 00 F8 */	lwz r6, 0xf8(r3)
/* 000014C4 00001504  3C A0 10 62 */	lis r5, 0x1062
/* 000014C8 00001508  38 A5 4D D3 */	addi r5, r5, 0x4dd3
/* 000014CC 0000150C  54 C6 F0 BE */	srwi r6, r6, 2
/* 000014D0 00001510  7C A5 30 16 */	mulhwu r5, r5, r6
/* 000014D4 00001514  54 A5 D1 BE */	srwi r5, r5, 6
/* 000014D8 00001518  1C C5 00 4B */	mulli r6, r5, 0x4b
/* 000014DC 0000151C  38 60 00 00 */	li r3, 0x0
/* 000014E0 00001520  6C 65 80 00 */	xoris r5, r3, 0x8000
/* 000014E4 00001524  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 000014E8 00001528  7C 04 30 10 */	subfc r0, r4, r6
/* 000014EC 0000152C  7C 63 29 10 */	subfe r3, r3, r5
/* 000014F0 00001530  7C 65 29 10 */	subfe r3, r5, r5
/* 000014F4 00001534  7C 63 00 D1 */	neg. r3, r3
/* 000014F8 00001538  40 82 00 10 */	bne .L_00001508
/* 000014FC 0000153C  38 00 00 80 */	li r0, 0x80
/* 00001500 00001540  90 1E 00 00 */	stw r0, 0x0(r30)
/* 00001504 00001544  48 00 00 10 */	b .L_00001514
.L_00001508:
/* 00001508 00001548  38 00 00 80 */	li r0, 0x80
/* 0000150C 0000154C  90 1E 00 00 */	stw r0, 0x0(r30)
/* 00001510 00001550  3B 80 00 80 */	li r28, 0x80
.L_00001514:
/* 00001514 00001554  48 00 00 01 */	bl __OSGetSystemTime
/* 00001518 00001558  90 9F 00 04 */	stw r4, 0x4(r31)
/* 0000151C 0000155C  3C 80 43 1C */	lis r4, 0x431c
/* 00001520 00001560  3C A0 00 00 */	lis r5, GetTypeCallback@ha
/* 00001524 00001564  90 7F 00 00 */	stw r3, 0x0(r31)
/* 00001528 00001568  3C 60 80 00 */	lis r3, 0x8000
/* 0000152C 0000156C  39 05 00 00 */	addi r8, r5, GetTypeCallback@l
/* 00001530 00001570  80 03 00 F8 */	lwz r0, 0xf8(r3)
/* 00001534 00001574  38 84 DE 83 */	subi r4, r4, 0x217d
/* 00001538 00001578  38 7B 00 00 */	addi r3, r27, 0x0
/* 0000153C 0000157C  54 00 F0 BE */	srwi r0, r0, 2
/* 00001540 00001580  7C 04 00 16 */	mulhwu r0, r4, r0
/* 00001544 00001584  54 00 8B FE */	srwi r0, r0, 15
/* 00001548 00001588  1C 00 00 41 */	mulli r0, r0, 0x41
/* 0000154C 0000158C  54 0A E8 FE */	srwi r10, r0, 3
/* 00001550 00001590  38 DE 00 00 */	addi r6, r30, 0x0
/* 00001554 00001594  38 80 00 00 */	li r4, cmdTypeAndStatus$371@sda21
/* 00001558 00001598  38 A0 00 01 */	li r5, 0x1
/* 0000155C 0000159C  38 E0 00 03 */	li r7, 0x3
/* 00001560 000015A0  39 20 00 00 */	li r9, 0x0
/* 00001564 000015A4  48 00 00 01 */	bl SITransfer
/* 00001568 000015A8  7F A3 EB 78 */	mr r3, r29
/* 0000156C 000015AC  48 00 00 01 */	bl OSRestoreInterrupts
/* 00001570 000015B0  7F 83 E3 78 */	mr r3, r28
.L_00001574:
/* 00001574 000015B4  BB 61 00 14 */	lmw r27, 0x14(r1)
/* 00001578 000015B8  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 0000157C 000015BC  38 21 00 28 */	addi r1, r1, 0x28
/* 00001580 000015C0  7C 08 03 A6 */	mtlr r0
/* 00001584 000015C4  4E 80 00 20 */	blr
.endfn SIGetType

.fn SIGetTypeAsync, global
/* 00001588 000015C8  7C 08 02 A6 */	mflr r0
/* 0000158C 000015CC  90 01 00 04 */	stw r0, 0x4(r1)
/* 00001590 000015D0  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 00001594 000015D4  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 00001598 000015D8  3B E4 00 00 */	addi r31, r4, 0x0
/* 0000159C 000015DC  93 C1 00 18 */	stw r30, 0x18(r1)
/* 000015A0 000015E0  93 A1 00 14 */	stw r29, 0x14(r1)
/* 000015A4 000015E4  93 81 00 10 */	stw r28, 0x10(r1)
/* 000015A8 000015E8  3B 83 00 00 */	addi r28, r3, 0x0
/* 000015AC 000015EC  48 00 00 01 */	bl OSDisableInterrupts
/* 000015B0 000015F0  3B C3 00 00 */	addi r30, r3, 0x0
/* 000015B4 000015F4  38 7C 00 00 */	addi r3, r28, 0x0
/* 000015B8 000015F8  48 00 00 01 */	bl SIGetType
/* 000015BC 000015FC  3C 80 00 00 */	lis r4, Type@ha
/* 000015C0 00001600  57 85 10 3A */	slwi r5, r28, 2
/* 000015C4 00001604  38 04 00 00 */	addi r0, r4, Type@l
/* 000015C8 00001608  7C 80 2A 14 */	add r4, r0, r5
/* 000015CC 0000160C  80 04 00 00 */	lwz r0, 0x0(r4)
/* 000015D0 00001610  3B A3 00 00 */	addi r29, r3, 0x0
/* 000015D4 00001614  54 00 06 31 */	rlwinm. r0, r0, 0, 24, 24
/* 000015D8 00001618  41 82 00 AC */	beq .L_00001684
/* 000015DC 0000161C  3C 60 00 00 */	lis r3, OSSerial_804A7F18@ha
/* 000015E0 00001620  57 84 20 36 */	slwi r4, r28, 4
/* 000015E4 00001624  38 03 00 00 */	addi r0, r3, OSSerial_804A7F18@l
/* 000015E8 00001628  7C 80 22 14 */	add r4, r0, r4
/* 000015EC 0000162C  80 04 00 00 */	lwz r0, 0x0(r4)
/* 000015F0 00001630  38 A0 00 00 */	li r5, 0x0
/* 000015F4 00001634  7C 00 F8 40 */	cmplw r0, r31
/* 000015F8 00001638  41 82 00 A0 */	beq .L_00001698
/* 000015FC 0000163C  28 00 00 00 */	cmplwi r0, 0x0
/* 00001600 00001640  40 82 00 10 */	bne .L_00001610
/* 00001604 00001644  54 A0 10 3A */	slwi r0, r5, 2
/* 00001608 00001648  7F E4 01 2E */	stwx r31, r4, r0
/* 0000160C 0000164C  48 00 00 8C */	b .L_00001698
.L_00001610:
/* 00001610 00001650  38 64 00 04 */	addi r3, r4, 0x4
/* 00001614 00001654  80 04 00 04 */	lwz r0, 0x4(r4)
/* 00001618 00001658  38 A0 00 01 */	li r5, 0x1
/* 0000161C 0000165C  7C 00 F8 40 */	cmplw r0, r31
/* 00001620 00001660  41 82 00 78 */	beq .L_00001698
/* 00001624 00001664  28 00 00 00 */	cmplwi r0, 0x0
/* 00001628 00001668  40 82 00 10 */	bne .L_00001638
/* 0000162C 0000166C  54 A0 10 3A */	slwi r0, r5, 2
/* 00001630 00001670  7F E4 01 2E */	stwx r31, r4, r0
/* 00001634 00001674  48 00 00 64 */	b .L_00001698
.L_00001638:
/* 00001638 00001678  84 03 00 04 */	lwzu r0, 0x4(r3)
/* 0000163C 0000167C  38 A0 00 02 */	li r5, 0x2
/* 00001640 00001680  7C 00 F8 40 */	cmplw r0, r31
/* 00001644 00001684  41 82 00 54 */	beq .L_00001698
/* 00001648 00001688  28 00 00 00 */	cmplwi r0, 0x0
/* 0000164C 0000168C  40 82 00 10 */	bne .L_0000165C
/* 00001650 00001690  54 A0 10 3A */	slwi r0, r5, 2
/* 00001654 00001694  7F E4 01 2E */	stwx r31, r4, r0
/* 00001658 00001698  48 00 00 40 */	b .L_00001698
.L_0000165C:
/* 0000165C 0000169C  80 03 00 04 */	lwz r0, 0x4(r3)
/* 00001660 000016A0  38 A0 00 03 */	li r5, 0x3
/* 00001664 000016A4  7C 00 F8 40 */	cmplw r0, r31
/* 00001668 000016A8  41 82 00 30 */	beq .L_00001698
/* 0000166C 000016AC  28 00 00 00 */	cmplwi r0, 0x0
/* 00001670 000016B0  40 82 00 28 */	bne .L_00001698
/* 00001674 000016B4  54 A0 10 3A */	slwi r0, r5, 2
/* 00001678 000016B8  7F E4 01 2E */	stwx r31, r4, r0
/* 0000167C 000016BC  48 00 00 1C */	b .L_00001698
/* 00001680 000016C0  48 00 00 18 */	b .L_00001698
.L_00001684:
/* 00001684 000016C4  39 9F 00 00 */	addi r12, r31, 0x0
/* 00001688 000016C8  7D 88 03 A6 */	mtlr r12
/* 0000168C 000016CC  38 7C 00 00 */	addi r3, r28, 0x0
/* 00001690 000016D0  38 9D 00 00 */	addi r4, r29, 0x0
/* 00001694 000016D4  4E 80 00 21 */	blrl
.L_00001698:
/* 00001698 000016D8  7F C3 F3 78 */	mr r3, r30
/* 0000169C 000016DC  48 00 00 01 */	bl OSRestoreInterrupts
/* 000016A0 000016E0  80 01 00 24 */	lwz r0, 0x24(r1)
/* 000016A4 000016E4  7F A3 EB 78 */	mr r3, r29
/* 000016A8 000016E8  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 000016AC 000016EC  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 000016B0 000016F0  7C 08 03 A6 */	mtlr r0
/* 000016B4 000016F4  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 000016B8 000016F8  83 81 00 10 */	lwz r28, 0x10(r1)
/* 000016BC 000016FC  38 21 00 20 */	addi r1, r1, 0x20
/* 000016C0 00001700  4E 80 00 20 */	blr
.endfn SIGetTypeAsync

# 0x00000000 - 0x000000C8
.data
.balign 8

.obj Si, local
	.4byte 0xFFFFFFFF
	.4byte 0x00000000
	.4byte 0x00000000
	.4byte 0x00000000
	.4byte 0x00000000
.endobj Si

.obj Type, local
	.4byte 0x00000008
	.4byte 0x00000008
	.4byte 0x00000008
	.4byte 0x00000008
.endobj Type

.obj gap_07_8040237C_data, global
.hidden gap_07_8040237C_data
	.4byte 0x4E6F2072
	.4byte 0x6573706F
	.4byte 0x6E736500
	.4byte 0x4E363420
	.4byte 0x636F6E74
	.4byte 0x726F6C6C
	.4byte 0x65720000
	.4byte 0x4E363420
	.4byte 0x6D696372
	.4byte 0x6F70686F
	.4byte 0x6E650000
	.4byte 0x4E363420
	.4byte 0x6B657962
	.4byte 0x6F617264
	.4byte 0x00000000
	.4byte 0x4E363420
	.4byte 0x6D6F7573
	.4byte 0x65000000
	.4byte 0x47616D65
	.4byte 0x426F7920
	.4byte 0x41647661
	.4byte 0x6E636500
	.4byte 0x5374616E
	.4byte 0x64617264
	.4byte 0x20636F6E
	.4byte 0x74726F6C
	.4byte 0x6C657200
	.4byte 0x57697265
	.4byte 0x6C657373
	.4byte 0x20726563
	.4byte 0x65697665
	.4byte 0x72000000
	.4byte 0x57617665
	.4byte 0x42697264
	.4byte 0x20636F6E
	.4byte 0x74726F6C
	.4byte 0x6C657200
	.4byte 0x4B657962
	.4byte 0x6F617264
	.4byte 0x00000000
	.4byte 0x00000000
.endobj gap_07_8040237C_data

# 0x00000000 - 0x00000200
.section .bss, "wa", @nobits
.balign 8

.obj Packet, global
	.skip 0x80
.endobj Packet

.obj Alarm, global
	.skip 0xA0
.endobj Alarm

.obj TypeTime, local
	.skip 0x20
.endobj TypeTime

.obj OSSerial_804A7EF8, global
	.skip 0x20
.endobj OSSerial_804A7EF8

.obj OSSerial_804A7F18, global
	.skip 0x40
.endobj OSSerial_804A7F18

.obj OSSerial_804A7F58, global
	.skip 0x60
.endobj OSSerial_804A7F58

# 0x00000000 - 0x00000010
.section .sbss, "wa", @nobits
.balign 8

.obj OSSerial_804D73C8, global
	.skip 0x4
.endobj OSSerial_804D73C8

.obj cmdTypeAndStatus$371, local
	.skip 0x4
.endobj cmdTypeAndStatus$371

.obj __PADFixBits, global
	.skip 0x8
.endobj __PADFixBits
