.include "macros.inc"
.file "OSThread.c"

# 0x00000000 - 0x000017EC
.text
.balign 4

.fn __OSThreadInit, global
/* 00000000 00000040  7C 08 02 A6 */	mflr r0
/* 00000004 00000044  3C 60 00 00 */	lis r3, RunQueue@ha
/* 00000008 00000048  90 01 00 04 */	stw r0, 0x4(r1)
/* 0000000C 0000004C  38 00 00 02 */	li r0, 0x2
/* 00000010 00000050  38 80 00 10 */	li r4, 0x10
/* 00000014 00000054  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 00000018 00000058  BF 41 00 08 */	stmw r26, 0x8(r1)
/* 0000001C 0000005C  3B 83 00 00 */	addi r28, r3, RunQueue@l
/* 00000020 00000060  3B FC 04 10 */	addi r31, r28, 0x410
/* 00000024 00000064  3B A0 00 00 */	li r29, 0x0
/* 00000028 00000068  38 7F 02 E8 */	addi r3, r31, 0x2e8
/* 0000002C 0000006C  B0 1C 06 D8 */	sth r0, 0x6d8(r28)
/* 00000030 00000070  38 00 00 01 */	li r0, 0x1
/* 00000034 00000074  B0 1C 06 DA */	sth r0, 0x6da(r28)
/* 00000038 00000078  38 00 FF FF */	li r0, -0x1
/* 0000003C 0000007C  90 9C 06 E4 */	stw r4, 0x6e4(r28)
/* 00000040 00000080  90 9C 06 E0 */	stw r4, 0x6e0(r28)
/* 00000044 00000084  93 BC 06 DC */	stw r29, 0x6dc(r28)
/* 00000048 00000088  90 1C 06 E8 */	stw r0, 0x6e8(r28)
/* 0000004C 0000008C  93 BC 07 00 */	stw r29, 0x700(r28)
/* 00000050 00000090  48 00 00 01 */	bl OSInitThreadQueue
/* 00000054 00000094  93 BC 07 08 */	stw r29, 0x708(r28)
/* 00000058 00000098  3F C0 80 00 */	lis r30, 0x8000
/* 0000005C 0000009C  38 7F 00 00 */	addi r3, r31, 0x0
/* 00000060 000000A0  93 BC 07 04 */	stw r29, 0x704(r28)
/* 00000064 000000A4  93 FE 00 D8 */	stw r31, 0xd8(r30)
/* 00000068 000000A8  48 00 00 01 */	bl OSClearContext
/* 0000006C 000000AC  7F E3 FB 78 */	mr r3, r31
/* 00000070 000000B0  48 00 00 01 */	bl OSSetCurrentContext
/* 00000074 000000B4  3C 60 00 00 */	lis r3, _stack_addr@ha
/* 00000078 000000B8  38 03 00 00 */	addi r0, r3, _stack_addr@l
/* 0000007C 000000BC  3C 60 00 00 */	lis r3, _stack_end@ha
/* 00000080 000000C0  90 1C 07 14 */	stw r0, 0x714(r28)
/* 00000084 000000C4  38 03 00 00 */	addi r0, r3, _stack_end@l
/* 00000088 000000C8  38 7C 07 18 */	addi r3, r28, 0x718
/* 0000008C 000000CC  90 1C 07 18 */	stw r0, 0x718(r28)
/* 00000090 000000D0  3C 80 DE AE */	lis r4, 0xdeae
/* 00000094 000000D4  3B 40 00 00 */	li r26, 0x0
/* 00000098 000000D8  80 63 00 00 */	lwz r3, 0x0(r3)
/* 0000009C 000000DC  38 84 BA BE */	subi r4, r4, 0x4542
/* 000000A0 000000E0  57 40 18 38 */	slwi r0, r26, 3
/* 000000A4 000000E4  90 83 00 00 */	stw r4, 0x0(r3)
/* 000000A8 000000E8  7F 7C 02 14 */	add r27, r28, r0
/* 000000AC 000000EC  93 A0 00 00 */	stw r29, RunQueueBits@sda21(r0)
/* 000000B0 000000F0  93 FE 00 E4 */	stw r31, 0xe4(r30)
/* 000000B4 000000F4  93 A0 00 00 */	stw r29, RunQueueHint@sda21(r0)
.L_000000B8:
/* 000000B8 000000F8  7F 63 DB 78 */	mr r3, r27
/* 000000BC 000000FC  48 00 00 01 */	bl OSInitThreadQueue
/* 000000C0 00000100  3B 5A 00 01 */	addi r26, r26, 0x1
/* 000000C4 00000104  2C 1A 00 1F */	cmpwi r26, 0x1f
/* 000000C8 00000108  3B 7B 00 08 */	addi r27, r27, 0x8
/* 000000CC 0000010C  40 81 FF EC */	ble .L_000000B8
/* 000000D0 00000110  3F C0 80 00 */	lis r30, 0x8000
/* 000000D4 00000114  38 7E 00 DC */	addi r3, r30, 0xdc
/* 000000D8 00000118  48 00 00 01 */	bl OSInitThreadQueue
/* 000000DC 0000011C  38 9E 00 DC */	addi r4, r30, 0xdc
/* 000000E0 00000120  84 64 00 04 */	lwzu r3, 0x4(r4)
/* 000000E4 00000124  28 03 00 00 */	cmplwi r3, 0x0
/* 000000E8 00000128  40 82 00 0C */	bne .L_000000F4
/* 000000EC 0000012C  93 FE 00 DC */	stw r31, 0xdc(r30)
/* 000000F0 00000130  48 00 00 08 */	b .L_000000F8
.L_000000F4:
/* 000000F4 00000134  93 E3 02 FC */	stw r31, 0x2fc(r3)
.L_000000F8:
/* 000000F8 00000138  90 7F 03 00 */	stw r3, 0x300(r31)
/* 000000FC 0000013C  3B C0 00 00 */	li r30, 0x0
/* 00000100 00000140  38 7C 07 20 */	addi r3, r28, 0x720
/* 00000104 00000144  93 DF 02 FC */	stw r30, 0x2fc(r31)
/* 00000108 00000148  93 E4 00 00 */	stw r31, 0x0(r4)
/* 0000010C 0000014C  48 00 00 01 */	bl OSClearContext
/* 00000110 00000150  93 C0 00 00 */	stw r30, Reschedule@sda21(r0)
/* 00000114 00000154  BB 41 00 08 */	lmw r26, 0x8(r1)
/* 00000118 00000158  80 01 00 24 */	lwz r0, 0x24(r1)
/* 0000011C 0000015C  38 21 00 20 */	addi r1, r1, 0x20
/* 00000120 00000160  7C 08 03 A6 */	mtlr r0
/* 00000124 00000164  4E 80 00 20 */	blr
.endfn __OSThreadInit

.fn OSInitThreadQueue, global
/* 00000128 00000168  38 00 00 00 */	li r0, 0x0
/* 0000012C 0000016C  90 03 00 04 */	stw r0, 0x4(r3)
/* 00000130 00000170  90 03 00 00 */	stw r0, 0x0(r3)
/* 00000134 00000174  4E 80 00 20 */	blr
.endfn OSInitThreadQueue

.fn OSGetCurrentThread, global
/* 00000138 00000178  3C 60 80 00 */	lis r3, 0x8000
/* 0000013C 0000017C  80 63 00 E4 */	lwz r3, 0xe4(r3)
/* 00000140 00000180  4E 80 00 20 */	blr
.endfn OSGetCurrentThread

.fn OSDisableScheduler, global
/* 00000144 00000184  7C 08 02 A6 */	mflr r0
/* 00000148 00000188  90 01 00 04 */	stw r0, 0x4(r1)
/* 0000014C 0000018C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 00000150 00000190  93 E1 00 0C */	stw r31, 0xc(r1)
/* 00000154 00000194  48 00 00 01 */	bl OSDisableInterrupts
/* 00000158 00000198  80 80 00 00 */	lwz r4, Reschedule@sda21(r0)
/* 0000015C 0000019C  38 04 00 01 */	addi r0, r4, 0x1
/* 00000160 000001A0  90 00 00 00 */	stw r0, Reschedule@sda21(r0)
/* 00000164 000001A4  7C 9F 23 78 */	mr r31, r4
/* 00000168 000001A8  48 00 00 01 */	bl OSRestoreInterrupts
/* 0000016C 000001AC  80 01 00 14 */	lwz r0, 0x14(r1)
/* 00000170 000001B0  7F E3 FB 78 */	mr r3, r31
/* 00000174 000001B4  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 00000178 000001B8  38 21 00 10 */	addi r1, r1, 0x10
/* 0000017C 000001BC  7C 08 03 A6 */	mtlr r0
/* 00000180 000001C0  4E 80 00 20 */	blr
.endfn OSDisableScheduler

.fn OSEnableScheduler, global
/* 00000184 000001C4  7C 08 02 A6 */	mflr r0
/* 00000188 000001C8  90 01 00 04 */	stw r0, 0x4(r1)
/* 0000018C 000001CC  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 00000190 000001D0  93 E1 00 0C */	stw r31, 0xc(r1)
/* 00000194 000001D4  48 00 00 01 */	bl OSDisableInterrupts
/* 00000198 000001D8  80 80 00 00 */	lwz r4, Reschedule@sda21(r0)
/* 0000019C 000001DC  38 04 FF FF */	subi r0, r4, 0x1
/* 000001A0 000001E0  90 00 00 00 */	stw r0, Reschedule@sda21(r0)
/* 000001A4 000001E4  7C 9F 23 78 */	mr r31, r4
/* 000001A8 000001E8  48 00 00 01 */	bl OSRestoreInterrupts
/* 000001AC 000001EC  80 01 00 14 */	lwz r0, 0x14(r1)
/* 000001B0 000001F0  7F E3 FB 78 */	mr r3, r31
/* 000001B4 000001F4  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 000001B8 000001F8  38 21 00 10 */	addi r1, r1, 0x10
/* 000001BC 000001FC  7C 08 03 A6 */	mtlr r0
/* 000001C0 00000200  4E 80 00 20 */	blr
.endfn OSEnableScheduler

.fn UnsetRun, global
/* 000001C4 00000204  80 83 02 E0 */	lwz r4, 0x2e0(r3)
/* 000001C8 00000208  80 A3 02 DC */	lwz r5, 0x2dc(r3)
/* 000001CC 0000020C  28 04 00 00 */	cmplwi r4, 0x0
/* 000001D0 00000210  80 C3 02 E4 */	lwz r6, 0x2e4(r3)
/* 000001D4 00000214  40 82 00 0C */	bne .L_000001E0
/* 000001D8 00000218  90 C5 00 04 */	stw r6, 0x4(r5)
/* 000001DC 0000021C  48 00 00 08 */	b .L_000001E4
.L_000001E0:
/* 000001E0 00000220  90 C4 02 E4 */	stw r6, 0x2e4(r4)
.L_000001E4:
/* 000001E4 00000224  28 06 00 00 */	cmplwi r6, 0x0
/* 000001E8 00000228  40 82 00 0C */	bne .L_000001F4
/* 000001EC 0000022C  90 85 00 00 */	stw r4, 0x0(r5)
/* 000001F0 00000230  48 00 00 08 */	b .L_000001F8
.L_000001F4:
/* 000001F4 00000234  90 86 02 E0 */	stw r4, 0x2e0(r6)
.L_000001F8:
/* 000001F8 00000238  80 05 00 00 */	lwz r0, 0x0(r5)
/* 000001FC 0000023C  28 00 00 00 */	cmplwi r0, 0x0
/* 00000200 00000240  40 82 00 20 */	bne .L_00000220
/* 00000204 00000244  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 00000208 00000248  38 80 00 01 */	li r4, 0x1
/* 0000020C 0000024C  80 A0 00 00 */	lwz r5, RunQueueBits@sda21(r0)
/* 00000210 00000250  20 00 00 1F */	subfic r0, r0, 0x1f
/* 00000214 00000254  7C 80 00 30 */	slw r0, r4, r0
/* 00000218 00000258  7C A0 00 78 */	andc r0, r5, r0
/* 0000021C 0000025C  90 00 00 00 */	stw r0, RunQueueBits@sda21(r0)
.L_00000220:
/* 00000220 00000260  38 00 00 00 */	li r0, 0x0
/* 00000224 00000264  90 03 02 DC */	stw r0, 0x2dc(r3)
/* 00000228 00000268  4E 80 00 20 */	blr
.endfn UnsetRun

.fn __OSGetEffectivePriority, global
/* 0000022C 0000026C  80 83 02 D4 */	lwz r4, 0x2d4(r3)
/* 00000230 00000270  80 A3 02 F4 */	lwz r5, 0x2f4(r3)
/* 00000234 00000274  48 00 00 24 */	b .L_00000258
.L_00000238:
/* 00000238 00000278  80 65 00 00 */	lwz r3, 0x0(r5)
/* 0000023C 0000027C  28 03 00 00 */	cmplwi r3, 0x0
/* 00000240 00000280  41 82 00 14 */	beq .L_00000254
/* 00000244 00000284  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 00000248 00000288  7C 00 20 00 */	cmpw r0, r4
/* 0000024C 0000028C  40 80 00 08 */	bge .L_00000254
/* 00000250 00000290  7C 04 03 78 */	mr r4, r0
.L_00000254:
/* 00000254 00000294  80 A5 00 10 */	lwz r5, 0x10(r5)
.L_00000258:
/* 00000258 00000298  28 05 00 00 */	cmplwi r5, 0x0
/* 0000025C 0000029C  40 82 FF DC */	bne .L_00000238
/* 00000260 000002A0  7C 83 23 78 */	mr r3, r4
/* 00000264 000002A4  4E 80 00 20 */	blr
.endfn __OSGetEffectivePriority

.fn SetEffectivePriority, global
/* 00000268 000002A8  7C 08 02 A6 */	mflr r0
/* 0000026C 000002AC  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000270 000002B0  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00000274 000002B4  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000278 000002B8  7C 7F 1B 78 */	mr r31, r3
/* 0000027C 000002BC  93 C1 00 10 */	stw r30, 0x10(r1)
/* 00000280 000002C0  3B C4 00 00 */	addi r30, r4, 0x0
/* 00000284 000002C4  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 00000288 000002C8  2C 00 00 03 */	cmpwi r0, 0x3
/* 0000028C 000002CC  41 82 01 80 */	beq .L_0000040C
/* 00000290 000002D0  40 80 00 14 */	bge .L_000002A4
/* 00000294 000002D4  2C 00 00 01 */	cmpwi r0, 0x1
/* 00000298 000002D8  41 82 00 18 */	beq .L_000002B0
/* 0000029C 000002DC  40 80 01 64 */	bge .L_00000400
/* 000002A0 000002E0  48 00 01 6C */	b .L_0000040C
.L_000002A4:
/* 000002A4 000002E4  2C 00 00 05 */	cmpwi r0, 0x5
/* 000002A8 000002E8  40 80 01 64 */	bge .L_0000040C
/* 000002AC 000002EC  48 00 00 7C */	b .L_00000328
.L_000002B0:
/* 000002B0 000002F0  7F E3 FB 78 */	mr r3, r31
/* 000002B4 000002F4  48 00 00 01 */	bl UnsetRun
/* 000002B8 000002F8  93 DF 02 D0 */	stw r30, 0x2d0(r31)
/* 000002BC 000002FC  3C 60 00 00 */	lis r3, RunQueue@ha
/* 000002C0 00000300  38 03 00 00 */	addi r0, r3, RunQueue@l
/* 000002C4 00000304  80 7F 02 D0 */	lwz r3, 0x2d0(r31)
/* 000002C8 00000308  54 63 18 38 */	slwi r3, r3, 3
/* 000002CC 0000030C  7C 00 1A 14 */	add r0, r0, r3
/* 000002D0 00000310  90 1F 02 DC */	stw r0, 0x2dc(r31)
/* 000002D4 00000314  80 9F 02 DC */	lwz r4, 0x2dc(r31)
/* 000002D8 00000318  80 64 00 04 */	lwz r3, 0x4(r4)
/* 000002DC 0000031C  28 03 00 00 */	cmplwi r3, 0x0
/* 000002E0 00000320  40 82 00 0C */	bne .L_000002EC
/* 000002E4 00000324  93 E4 00 00 */	stw r31, 0x0(r4)
/* 000002E8 00000328  48 00 00 08 */	b .L_000002F0
.L_000002EC:
/* 000002EC 0000032C  93 E3 02 E0 */	stw r31, 0x2e0(r3)
.L_000002F0:
/* 000002F0 00000330  90 7F 02 E4 */	stw r3, 0x2e4(r31)
/* 000002F4 00000334  38 00 00 00 */	li r0, 0x0
/* 000002F8 00000338  38 60 00 01 */	li r3, 0x1
/* 000002FC 0000033C  90 1F 02 E0 */	stw r0, 0x2e0(r31)
/* 00000300 00000340  80 9F 02 DC */	lwz r4, 0x2dc(r31)
/* 00000304 00000344  93 E4 00 04 */	stw r31, 0x4(r4)
/* 00000308 00000348  80 1F 02 D0 */	lwz r0, 0x2d0(r31)
/* 0000030C 0000034C  80 80 00 00 */	lwz r4, RunQueueBits@sda21(r0)
/* 00000310 00000350  20 00 00 1F */	subfic r0, r0, 0x1f
/* 00000314 00000354  7C 60 00 30 */	slw r0, r3, r0
/* 00000318 00000358  7C 80 03 78 */	or r0, r4, r0
/* 0000031C 0000035C  90 00 00 00 */	stw r0, RunQueueBits@sda21(r0)
/* 00000320 00000360  90 60 00 00 */	stw r3, RunQueueHint@sda21(r0)
/* 00000324 00000364  48 00 00 E8 */	b .L_0000040C
.L_00000328:
/* 00000328 00000368  80 9F 02 E0 */	lwz r4, 0x2e0(r31)
/* 0000032C 0000036C  80 BF 02 E4 */	lwz r5, 0x2e4(r31)
/* 00000330 00000370  28 04 00 00 */	cmplwi r4, 0x0
/* 00000334 00000374  40 82 00 10 */	bne .L_00000344
/* 00000338 00000378  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 0000033C 0000037C  90 A3 00 04 */	stw r5, 0x4(r3)
/* 00000340 00000380  48 00 00 08 */	b .L_00000348
.L_00000344:
/* 00000344 00000384  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_00000348:
/* 00000348 00000388  28 05 00 00 */	cmplwi r5, 0x0
/* 0000034C 0000038C  40 82 00 10 */	bne .L_0000035C
/* 00000350 00000390  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 00000354 00000394  90 83 00 00 */	stw r4, 0x0(r3)
/* 00000358 00000398  48 00 00 08 */	b .L_00000360
.L_0000035C:
/* 0000035C 0000039C  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_00000360:
/* 00000360 000003A0  93 DF 02 D0 */	stw r30, 0x2d0(r31)
/* 00000364 000003A4  80 9F 02 DC */	lwz r4, 0x2dc(r31)
/* 00000368 000003A8  80 A4 00 00 */	lwz r5, 0x0(r4)
/* 0000036C 000003AC  48 00 00 08 */	b .L_00000374
.L_00000370:
/* 00000370 000003B0  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
.L_00000374:
/* 00000374 000003B4  28 05 00 00 */	cmplwi r5, 0x0
/* 00000378 000003B8  41 82 00 14 */	beq .L_0000038C
/* 0000037C 000003BC  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 00000380 000003C0  80 1F 02 D0 */	lwz r0, 0x2d0(r31)
/* 00000384 000003C4  7C 03 00 00 */	cmpw r3, r0
/* 00000388 000003C8  40 81 FF E8 */	ble .L_00000370
.L_0000038C:
/* 0000038C 000003CC  28 05 00 00 */	cmplwi r5, 0x0
/* 00000390 000003D0  40 82 00 34 */	bne .L_000003C4
/* 00000394 000003D4  80 64 00 04 */	lwz r3, 0x4(r4)
/* 00000398 000003D8  28 03 00 00 */	cmplwi r3, 0x0
/* 0000039C 000003DC  40 82 00 0C */	bne .L_000003A8
/* 000003A0 000003E0  93 E4 00 00 */	stw r31, 0x0(r4)
/* 000003A4 000003E4  48 00 00 08 */	b .L_000003AC
.L_000003A8:
/* 000003A8 000003E8  93 E3 02 E0 */	stw r31, 0x2e0(r3)
.L_000003AC:
/* 000003AC 000003EC  90 7F 02 E4 */	stw r3, 0x2e4(r31)
/* 000003B0 000003F0  38 00 00 00 */	li r0, 0x0
/* 000003B4 000003F4  90 1F 02 E0 */	stw r0, 0x2e0(r31)
/* 000003B8 000003F8  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 000003BC 000003FC  93 E3 00 04 */	stw r31, 0x4(r3)
/* 000003C0 00000400  48 00 00 2C */	b .L_000003EC
.L_000003C4:
/* 000003C4 00000404  90 BF 02 E0 */	stw r5, 0x2e0(r31)
/* 000003C8 00000408  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 000003CC 0000040C  93 E5 02 E4 */	stw r31, 0x2e4(r5)
/* 000003D0 00000410  28 03 00 00 */	cmplwi r3, 0x0
/* 000003D4 00000414  90 7F 02 E4 */	stw r3, 0x2e4(r31)
/* 000003D8 00000418  40 82 00 10 */	bne .L_000003E8
/* 000003DC 0000041C  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 000003E0 00000420  93 E3 00 00 */	stw r31, 0x0(r3)
/* 000003E4 00000424  48 00 00 08 */	b .L_000003EC
.L_000003E8:
/* 000003E8 00000428  93 E3 02 E0 */	stw r31, 0x2e0(r3)
.L_000003EC:
/* 000003EC 0000042C  80 7F 02 F0 */	lwz r3, 0x2f0(r31)
/* 000003F0 00000430  28 03 00 00 */	cmplwi r3, 0x0
/* 000003F4 00000434  41 82 00 18 */	beq .L_0000040C
/* 000003F8 00000438  80 63 00 08 */	lwz r3, 0x8(r3)
/* 000003FC 0000043C  48 00 00 14 */	b .L_00000410
.L_00000400:
/* 00000400 00000440  38 00 00 01 */	li r0, 0x1
/* 00000404 00000444  90 00 00 00 */	stw r0, RunQueueHint@sda21(r0)
/* 00000408 00000448  93 DF 02 D0 */	stw r30, 0x2d0(r31)
.L_0000040C:
/* 0000040C 0000044C  38 60 00 00 */	li r3, 0x0
.L_00000410:
/* 00000410 00000450  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00000414 00000454  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000418 00000458  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 0000041C 0000045C  7C 08 03 A6 */	mtlr r0
/* 00000420 00000460  38 21 00 18 */	addi r1, r1, 0x18
/* 00000424 00000464  4E 80 00 20 */	blr
.endfn SetEffectivePriority

.fn SelectThread, local
/* 00000428 00000468  7C 08 02 A6 */	mflr r0
/* 0000042C 0000046C  3C 80 00 00 */	lis r4, RunQueue@ha
/* 00000430 00000470  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000434 00000474  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00000438 00000478  93 E1 00 14 */	stw r31, 0x14(r1)
/* 0000043C 0000047C  3B E4 00 00 */	addi r31, r4, RunQueue@l
/* 00000440 00000480  93 C1 00 10 */	stw r30, 0x10(r1)
/* 00000444 00000484  3B C3 00 00 */	addi r30, r3, 0x0
/* 00000448 00000488  80 00 00 00 */	lwz r0, Reschedule@sda21(r0)
/* 0000044C 0000048C  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000450 00000490  40 81 00 0C */	ble .L_0000045C
/* 00000454 00000494  38 60 00 00 */	li r3, 0x0
/* 00000458 00000498  48 00 01 B8 */	b .L_00000610
.L_0000045C:
/* 0000045C 0000049C  48 00 00 01 */	bl OSGetCurrentContext
/* 00000460 000004A0  3C 80 80 00 */	lis r4, 0x8000
/* 00000464 000004A4  80 C4 00 E4 */	lwz r6, 0xe4(r4)
/* 00000468 000004A8  7C 03 30 40 */	cmplw r3, r6
/* 0000046C 000004AC  38 66 00 00 */	addi r3, r6, 0x0
/* 00000470 000004B0  41 82 00 0C */	beq .L_0000047C
/* 00000474 000004B4  38 60 00 00 */	li r3, 0x0
/* 00000478 000004B8  48 00 01 98 */	b .L_00000610
.L_0000047C:
/* 0000047C 000004BC  28 06 00 00 */	cmplwi r6, 0x0
/* 00000480 000004C0  41 82 00 BC */	beq .L_0000053C
/* 00000484 000004C4  A0 06 02 C8 */	lhz r0, 0x2c8(r6)
/* 00000488 000004C8  28 00 00 02 */	cmplwi r0, 0x2
/* 0000048C 000004CC  40 82 00 90 */	bne .L_0000051C
/* 00000490 000004D0  2C 1E 00 00 */	cmpwi r30, 0x0
/* 00000494 000004D4  40 82 00 20 */	bne .L_000004B4
/* 00000498 000004D8  80 80 00 00 */	lwz r4, RunQueueBits@sda21(r0)
/* 0000049C 000004DC  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 000004A0 000004E0  7C 84 00 34 */	cntlzw r4, r4
/* 000004A4 000004E4  7C 00 20 00 */	cmpw r0, r4
/* 000004A8 000004E8  41 81 00 0C */	bgt .L_000004B4
/* 000004AC 000004EC  38 60 00 00 */	li r3, 0x0
/* 000004B0 000004F0  48 00 01 60 */	b .L_00000610
.L_000004B4:
/* 000004B4 000004F4  38 00 00 01 */	li r0, 0x1
/* 000004B8 000004F8  B0 06 02 C8 */	sth r0, 0x2c8(r6)
/* 000004BC 000004FC  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 000004C0 00000500  54 00 18 38 */	slwi r0, r0, 3
/* 000004C4 00000504  7C 1F 02 14 */	add r0, r31, r0
/* 000004C8 00000508  90 06 02 DC */	stw r0, 0x2dc(r6)
/* 000004CC 0000050C  80 A6 02 DC */	lwz r5, 0x2dc(r6)
/* 000004D0 00000510  80 85 00 04 */	lwz r4, 0x4(r5)
/* 000004D4 00000514  28 04 00 00 */	cmplwi r4, 0x0
/* 000004D8 00000518  40 82 00 0C */	bne .L_000004E4
/* 000004DC 0000051C  90 C5 00 00 */	stw r6, 0x0(r5)
/* 000004E0 00000520  48 00 00 08 */	b .L_000004E8
.L_000004E4:
/* 000004E4 00000524  90 C4 02 E0 */	stw r6, 0x2e0(r4)
.L_000004E8:
/* 000004E8 00000528  90 86 02 E4 */	stw r4, 0x2e4(r6)
/* 000004EC 0000052C  38 00 00 00 */	li r0, 0x0
/* 000004F0 00000530  38 80 00 01 */	li r4, 0x1
/* 000004F4 00000534  90 06 02 E0 */	stw r0, 0x2e0(r6)
/* 000004F8 00000538  80 A6 02 DC */	lwz r5, 0x2dc(r6)
/* 000004FC 0000053C  90 C5 00 04 */	stw r6, 0x4(r5)
/* 00000500 00000540  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 00000504 00000544  80 A0 00 00 */	lwz r5, RunQueueBits@sda21(r0)
/* 00000508 00000548  20 00 00 1F */	subfic r0, r0, 0x1f
/* 0000050C 0000054C  7C 80 00 30 */	slw r0, r4, r0
/* 00000510 00000550  7C A0 03 78 */	or r0, r5, r0
/* 00000514 00000554  90 00 00 00 */	stw r0, RunQueueBits@sda21(r0)
/* 00000518 00000558  90 80 00 00 */	stw r4, RunQueueHint@sda21(r0)
.L_0000051C:
/* 0000051C 0000055C  A0 06 01 A2 */	lhz r0, 0x1a2(r6)
/* 00000520 00000560  54 00 07 BD */	rlwinm. r0, r0, 0, 30, 30
/* 00000524 00000564  40 82 00 18 */	bne .L_0000053C
/* 00000528 00000568  48 00 00 01 */	bl OSSaveContext
/* 0000052C 0000056C  28 03 00 00 */	cmplwi r3, 0x0
/* 00000530 00000570  41 82 00 0C */	beq .L_0000053C
/* 00000534 00000574  38 60 00 00 */	li r3, 0x0
/* 00000538 00000578  48 00 00 D8 */	b .L_00000610
.L_0000053C:
/* 0000053C 0000057C  80 00 00 00 */	lwz r0, RunQueueBits@sda21(r0)
/* 00000540 00000580  38 80 00 00 */	li r4, 0x0
/* 00000544 00000584  3C 60 80 00 */	lis r3, 0x8000
/* 00000548 00000588  28 00 00 00 */	cmplwi r0, 0x0
/* 0000054C 0000058C  90 83 00 E4 */	stw r4, 0xe4(r3)
/* 00000550 00000590  40 82 00 34 */	bne .L_00000584
/* 00000554 00000594  38 7F 07 20 */	addi r3, r31, 0x720
/* 00000558 00000598  48 00 00 01 */	bl OSSetCurrentContext
.L_0000055C:
/* 0000055C 0000059C  48 00 00 01 */	bl OSEnableInterrupts
.L_00000560:
/* 00000560 000005A0  80 00 00 00 */	lwz r0, RunQueueBits@sda21(r0)
/* 00000564 000005A4  28 00 00 00 */	cmplwi r0, 0x0
/* 00000568 000005A8  41 82 FF F8 */	beq .L_00000560
/* 0000056C 000005AC  48 00 00 01 */	bl OSDisableInterrupts
/* 00000570 000005B0  80 00 00 00 */	lwz r0, RunQueueBits@sda21(r0)
/* 00000574 000005B4  28 00 00 00 */	cmplwi r0, 0x0
/* 00000578 000005B8  41 82 FF E4 */	beq .L_0000055C
/* 0000057C 000005BC  38 7F 07 20 */	addi r3, r31, 0x720
/* 00000580 000005C0  48 00 00 01 */	bl OSClearContext
.L_00000584:
/* 00000584 000005C4  38 60 00 00 */	li r3, 0x0
/* 00000588 000005C8  90 60 00 00 */	stw r3, RunQueueHint@sda21(r0)
/* 0000058C 000005CC  80 00 00 00 */	lwz r0, RunQueueBits@sda21(r0)
/* 00000590 000005D0  7C 07 00 34 */	cntlzw r7, r0
/* 00000594 000005D4  54 E0 18 38 */	slwi r0, r7, 3
/* 00000598 000005D8  7C 9F 02 14 */	add r4, r31, r0
/* 0000059C 000005DC  80 A4 00 00 */	lwz r5, 0x0(r4)
/* 000005A0 000005E0  80 C5 02 E0 */	lwz r6, 0x2e0(r5)
/* 000005A4 000005E4  3B E5 00 00 */	addi r31, r5, 0x0
/* 000005A8 000005E8  28 06 00 00 */	cmplwi r6, 0x0
/* 000005AC 000005EC  40 82 00 0C */	bne .L_000005B8
/* 000005B0 000005F0  90 64 00 04 */	stw r3, 0x4(r4)
/* 000005B4 000005F4  48 00 00 08 */	b .L_000005BC
.L_000005B8:
/* 000005B8 000005F8  90 66 02 E4 */	stw r3, 0x2e4(r6)
.L_000005BC:
/* 000005BC 000005FC  90 C4 00 00 */	stw r6, 0x0(r4)
/* 000005C0 00000600  80 04 00 00 */	lwz r0, 0x0(r4)
/* 000005C4 00000604  28 00 00 00 */	cmplwi r0, 0x0
/* 000005C8 00000608  40 82 00 1C */	bne .L_000005E4
/* 000005CC 0000060C  20 07 00 1F */	subfic r0, r7, 0x1f
/* 000005D0 00000610  80 80 00 00 */	lwz r4, RunQueueBits@sda21(r0)
/* 000005D4 00000614  38 60 00 01 */	li r3, 0x1
/* 000005D8 00000618  7C 60 00 30 */	slw r0, r3, r0
/* 000005DC 0000061C  7C 80 00 78 */	andc r0, r4, r0
/* 000005E0 00000620  90 00 00 00 */	stw r0, RunQueueBits@sda21(r0)
.L_000005E4:
/* 000005E4 00000624  38 00 00 00 */	li r0, 0x0
/* 000005E8 00000628  90 1F 02 DC */	stw r0, 0x2dc(r31)
/* 000005EC 0000062C  38 00 00 02 */	li r0, 0x2
/* 000005F0 00000630  3C 80 80 00 */	lis r4, 0x8000
/* 000005F4 00000634  B0 1F 02 C8 */	sth r0, 0x2c8(r31)
/* 000005F8 00000638  7F E3 FB 78 */	mr r3, r31
/* 000005FC 0000063C  93 E4 00 E4 */	stw r31, 0xe4(r4)
/* 00000600 00000640  48 00 00 01 */	bl OSSetCurrentContext
/* 00000604 00000644  7F E3 FB 78 */	mr r3, r31
/* 00000608 00000648  48 00 00 01 */	bl OSLoadContext
/* 0000060C 0000064C  7F E3 FB 78 */	mr r3, r31
.L_00000610:
/* 00000610 00000650  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00000614 00000654  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000618 00000658  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 0000061C 0000065C  7C 08 03 A6 */	mtlr r0
/* 00000620 00000660  38 21 00 18 */	addi r1, r1, 0x18
/* 00000624 00000664  4E 80 00 20 */	blr
.endfn SelectThread

.fn __OSReschedule, global
/* 00000628 00000668  7C 08 02 A6 */	mflr r0
/* 0000062C 0000066C  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000630 00000670  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 00000634 00000674  80 00 00 00 */	lwz r0, RunQueueHint@sda21(r0)
/* 00000638 00000678  2C 00 00 00 */	cmpwi r0, 0x0
/* 0000063C 0000067C  41 82 00 0C */	beq .L_00000648
/* 00000640 00000680  38 60 00 00 */	li r3, 0x0
/* 00000644 00000684  48 00 00 01 */	bl SelectThread
.L_00000648:
/* 00000648 00000688  80 01 00 0C */	lwz r0, 0xc(r1)
/* 0000064C 0000068C  38 21 00 08 */	addi r1, r1, 0x8
/* 00000650 00000690  7C 08 03 A6 */	mtlr r0
/* 00000654 00000694  4E 80 00 20 */	blr
.endfn __OSReschedule

.fn OSCreateThread, global
/* 00000658 00000698  7C 08 02 A6 */	mflr r0
/* 0000065C 0000069C  2C 08 00 00 */	cmpwi r8, 0x0
/* 00000660 000006A0  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000664 000006A4  94 21 FF C8 */	stwu r1, -0x38(r1)
/* 00000668 000006A8  93 E1 00 34 */	stw r31, 0x34(r1)
/* 0000066C 000006AC  3B E3 00 00 */	addi r31, r3, 0x0
/* 00000670 000006B0  93 C1 00 30 */	stw r30, 0x30(r1)
/* 00000674 000006B4  3B C7 00 00 */	addi r30, r7, 0x0
/* 00000678 000006B8  93 A1 00 2C */	stw r29, 0x2c(r1)
/* 0000067C 000006BC  3B A6 00 00 */	addi r29, r6, 0x0
/* 00000680 000006C0  93 81 00 28 */	stw r28, 0x28(r1)
/* 00000684 000006C4  3B 85 00 00 */	addi r28, r5, 0x0
/* 00000688 000006C8  41 80 00 0C */	blt .L_00000694
/* 0000068C 000006CC  2C 08 00 1F */	cmpwi r8, 0x1f
/* 00000690 000006D0  40 81 00 0C */	ble .L_0000069C
.L_00000694:
/* 00000694 000006D4  38 60 00 00 */	li r3, 0x0
/* 00000698 000006D8  48 00 00 C0 */	b .L_00000758
.L_0000069C:
/* 0000069C 000006DC  38 E0 00 01 */	li r7, 0x1
/* 000006A0 000006E0  B0 FF 02 C8 */	sth r7, 0x2c8(r31)
/* 000006A4 000006E4  55 20 07 FE */	clrlwi r0, r9, 31
/* 000006A8 000006E8  57 A9 00 38 */	clrrwi r9, r29, 3
/* 000006AC 000006EC  B0 1F 02 CA */	sth r0, 0x2ca(r31)
/* 000006B0 000006F0  38 C0 FF FF */	li r6, -0x1
/* 000006B4 000006F4  38 00 00 00 */	li r0, 0x0
/* 000006B8 000006F8  91 1F 02 D4 */	stw r8, 0x2d4(r31)
/* 000006BC 000006FC  38 7F 00 00 */	addi r3, r31, 0x0
/* 000006C0 00000700  38 A9 FF F8 */	subi r5, r9, 0x8
/* 000006C4 00000704  91 1F 02 D0 */	stw r8, 0x2d0(r31)
/* 000006C8 00000708  90 FF 02 CC */	stw r7, 0x2cc(r31)
/* 000006CC 0000070C  90 DF 02 D8 */	stw r6, 0x2d8(r31)
/* 000006D0 00000710  90 1F 02 F0 */	stw r0, 0x2f0(r31)
/* 000006D4 00000714  90 1F 02 EC */	stw r0, 0x2ec(r31)
/* 000006D8 00000718  90 1F 02 E8 */	stw r0, 0x2e8(r31)
/* 000006DC 0000071C  90 1F 02 F8 */	stw r0, 0x2f8(r31)
/* 000006E0 00000720  90 1F 02 F4 */	stw r0, 0x2f4(r31)
/* 000006E4 00000724  90 09 FF F8 */	stw r0, -0x8(r9)
/* 000006E8 00000728  90 09 FF FC */	stw r0, -0x4(r9)
/* 000006EC 0000072C  48 00 00 01 */	bl OSInitContext
/* 000006F0 00000730  3C 60 00 00 */	lis r3, OSExitThread@ha
/* 000006F4 00000734  38 03 00 00 */	addi r0, r3, OSExitThread@l
/* 000006F8 00000738  90 1F 00 84 */	stw r0, 0x84(r31)
/* 000006FC 0000073C  3C 60 DE AE */	lis r3, 0xdeae
/* 00000700 00000740  7C 9E E8 50 */	subf r4, r30, r29
/* 00000704 00000744  93 9F 00 0C */	stw r28, 0xc(r31)
/* 00000708 00000748  38 03 BA BE */	subi r0, r3, 0x4542
/* 0000070C 0000074C  93 BF 03 04 */	stw r29, 0x304(r31)
/* 00000710 00000750  90 9F 03 08 */	stw r4, 0x308(r31)
/* 00000714 00000754  80 7F 03 08 */	lwz r3, 0x308(r31)
/* 00000718 00000758  90 03 00 00 */	stw r0, 0x0(r3)
/* 0000071C 0000075C  48 00 00 01 */	bl OSDisableInterrupts
/* 00000720 00000760  3C 80 80 00 */	lis r4, 0x8000
/* 00000724 00000764  38 A4 00 DC */	addi r5, r4, 0xdc
/* 00000728 00000768  84 C5 00 04 */	lwzu r6, 0x4(r5)
/* 0000072C 0000076C  28 06 00 00 */	cmplwi r6, 0x0
/* 00000730 00000770  40 82 00 0C */	bne .L_0000073C
/* 00000734 00000774  93 E4 00 DC */	stw r31, 0xdc(r4)
/* 00000738 00000778  48 00 00 08 */	b .L_00000740
.L_0000073C:
/* 0000073C 0000077C  93 E6 02 FC */	stw r31, 0x2fc(r6)
.L_00000740:
/* 00000740 00000780  90 DF 03 00 */	stw r6, 0x300(r31)
/* 00000744 00000784  38 00 00 00 */	li r0, 0x0
/* 00000748 00000788  90 1F 02 FC */	stw r0, 0x2fc(r31)
/* 0000074C 0000078C  93 E5 00 00 */	stw r31, 0x0(r5)
/* 00000750 00000790  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000754 00000794  38 60 00 01 */	li r3, 0x1
.L_00000758:
/* 00000758 00000798  80 01 00 3C */	lwz r0, 0x3c(r1)
/* 0000075C 0000079C  83 E1 00 34 */	lwz r31, 0x34(r1)
/* 00000760 000007A0  83 C1 00 30 */	lwz r30, 0x30(r1)
/* 00000764 000007A4  7C 08 03 A6 */	mtlr r0
/* 00000768 000007A8  83 A1 00 2C */	lwz r29, 0x2c(r1)
/* 0000076C 000007AC  83 81 00 28 */	lwz r28, 0x28(r1)
/* 00000770 000007B0  38 21 00 38 */	addi r1, r1, 0x38
/* 00000774 000007B4  4E 80 00 20 */	blr
.endfn OSCreateThread

.fn OSExitThread, global
/* 00000778 000007B8  7C 08 02 A6 */	mflr r0
/* 0000077C 000007BC  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000780 000007C0  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 00000784 000007C4  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 00000788 000007C8  93 C1 00 18 */	stw r30, 0x18(r1)
/* 0000078C 000007CC  93 A1 00 14 */	stw r29, 0x14(r1)
/* 00000790 000007D0  93 81 00 10 */	stw r28, 0x10(r1)
/* 00000794 000007D4  7C 7C 1B 78 */	mr r28, r3
/* 00000798 000007D8  48 00 00 01 */	bl OSDisableInterrupts
/* 0000079C 000007DC  3F E0 80 00 */	lis r31, 0x8000
/* 000007A0 000007E0  83 DF 00 E4 */	lwz r30, 0xe4(r31)
/* 000007A4 000007E4  3B A3 00 00 */	addi r29, r3, 0x0
/* 000007A8 000007E8  38 7E 00 00 */	addi r3, r30, 0x0
/* 000007AC 000007EC  48 00 00 01 */	bl OSClearContext
/* 000007B0 000007F0  A0 1E 02 CA */	lhz r0, 0x2ca(r30)
/* 000007B4 000007F4  54 00 07 FF */	clrlwi. r0, r0, 31
/* 000007B8 000007F8  41 82 00 44 */	beq .L_000007FC
/* 000007BC 000007FC  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 000007C0 00000800  80 BE 03 00 */	lwz r5, 0x300(r30)
/* 000007C4 00000804  28 04 00 00 */	cmplwi r4, 0x0
/* 000007C8 00000808  40 82 00 0C */	bne .L_000007D4
/* 000007CC 0000080C  90 BF 00 E0 */	stw r5, 0xe0(r31)
/* 000007D0 00000810  48 00 00 08 */	b .L_000007D8
.L_000007D4:
/* 000007D4 00000814  90 A4 03 00 */	stw r5, 0x300(r4)
.L_000007D8:
/* 000007D8 00000818  28 05 00 00 */	cmplwi r5, 0x0
/* 000007DC 0000081C  40 82 00 10 */	bne .L_000007EC
/* 000007E0 00000820  3C 60 80 00 */	lis r3, 0x8000
/* 000007E4 00000824  90 83 00 DC */	stw r4, 0xdc(r3)
/* 000007E8 00000828  48 00 00 08 */	b .L_000007F0
.L_000007EC:
/* 000007EC 0000082C  90 85 02 FC */	stw r4, 0x2fc(r5)
.L_000007F0:
/* 000007F0 00000830  38 00 00 00 */	li r0, 0x0
/* 000007F4 00000834  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 000007F8 00000838  48 00 00 10 */	b .L_00000808
.L_000007FC:
/* 000007FC 0000083C  38 00 00 08 */	li r0, 0x8
/* 00000800 00000840  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 00000804 00000844  93 9E 02 D8 */	stw r28, 0x2d8(r30)
.L_00000808:
/* 00000808 00000848  7F C3 F3 78 */	mr r3, r30
/* 0000080C 0000084C  48 00 00 01 */	bl __OSUnlockAllMutex
/* 00000810 00000850  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 00000814 00000854  48 00 00 01 */	bl OSWakeupThread
/* 00000818 00000858  38 00 00 01 */	li r0, 0x1
/* 0000081C 0000085C  90 00 00 00 */	stw r0, RunQueueHint@sda21(r0)
/* 00000820 00000860  80 00 00 00 */	lwz r0, RunQueueHint@sda21(r0)
/* 00000824 00000864  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000828 00000868  41 82 00 0C */	beq .L_00000834
/* 0000082C 0000086C  38 60 00 00 */	li r3, 0x0
/* 00000830 00000870  48 00 00 01 */	bl SelectThread
.L_00000834:
/* 00000834 00000874  7F A3 EB 78 */	mr r3, r29
/* 00000838 00000878  48 00 00 01 */	bl OSRestoreInterrupts
/* 0000083C 0000087C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 00000840 00000880  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 00000844 00000884  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 00000848 00000888  7C 08 03 A6 */	mtlr r0
/* 0000084C 0000088C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 00000850 00000890  83 81 00 10 */	lwz r28, 0x10(r1)
/* 00000854 00000894  38 21 00 20 */	addi r1, r1, 0x20
/* 00000858 00000898  4E 80 00 20 */	blr
.endfn OSExitThread

.fn OSCancelThread, global
/* 0000085C 0000089C  7C 08 02 A6 */	mflr r0
/* 00000860 000008A0  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000864 000008A4  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 00000868 000008A8  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 0000086C 000008AC  93 C1 00 18 */	stw r30, 0x18(r1)
/* 00000870 000008B0  7C 7E 1B 78 */	mr r30, r3
/* 00000874 000008B4  93 A1 00 14 */	stw r29, 0x14(r1)
/* 00000878 000008B8  48 00 00 01 */	bl OSDisableInterrupts
/* 0000087C 000008BC  A0 1E 02 C8 */	lhz r0, 0x2c8(r30)
/* 00000880 000008C0  3B E3 00 00 */	addi r31, r3, 0x0
/* 00000884 000008C4  2C 00 00 03 */	cmpwi r0, 0x3
/* 00000888 000008C8  41 82 00 DC */	beq .L_00000964
/* 0000088C 000008CC  40 80 00 14 */	bge .L_000008A0
/* 00000890 000008D0  2C 00 00 01 */	cmpwi r0, 0x1
/* 00000894 000008D4  41 82 00 18 */	beq .L_000008AC
/* 00000898 000008D8  40 80 00 2C */	bge .L_000008C4
/* 0000089C 000008DC  48 00 00 C8 */	b .L_00000964
.L_000008A0:
/* 000008A0 000008E0  2C 00 00 05 */	cmpwi r0, 0x5
/* 000008A4 000008E4  40 80 00 C0 */	bge .L_00000964
/* 000008A8 000008E8  48 00 00 28 */	b .L_000008D0
.L_000008AC:
/* 000008AC 000008EC  80 1E 02 CC */	lwz r0, 0x2cc(r30)
/* 000008B0 000008F0  2C 00 00 00 */	cmpwi r0, 0x0
/* 000008B4 000008F4  41 81 00 BC */	bgt .L_00000970
/* 000008B8 000008F8  7F C3 F3 78 */	mr r3, r30
/* 000008BC 000008FC  48 00 00 01 */	bl UnsetRun
/* 000008C0 00000900  48 00 00 B0 */	b .L_00000970
.L_000008C4:
/* 000008C4 00000904  38 00 00 01 */	li r0, 0x1
/* 000008C8 00000908  90 00 00 00 */	stw r0, RunQueueHint@sda21(r0)
/* 000008CC 0000090C  48 00 00 A4 */	b .L_00000970
.L_000008D0:
/* 000008D0 00000910  80 9E 02 E0 */	lwz r4, 0x2e0(r30)
/* 000008D4 00000914  80 BE 02 E4 */	lwz r5, 0x2e4(r30)
/* 000008D8 00000918  28 04 00 00 */	cmplwi r4, 0x0
/* 000008DC 0000091C  40 82 00 10 */	bne .L_000008EC
/* 000008E0 00000920  80 7E 02 DC */	lwz r3, 0x2dc(r30)
/* 000008E4 00000924  90 A3 00 04 */	stw r5, 0x4(r3)
/* 000008E8 00000928  48 00 00 08 */	b .L_000008F0
.L_000008EC:
/* 000008EC 0000092C  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_000008F0:
/* 000008F0 00000930  28 05 00 00 */	cmplwi r5, 0x0
/* 000008F4 00000934  40 82 00 10 */	bne .L_00000904
/* 000008F8 00000938  80 7E 02 DC */	lwz r3, 0x2dc(r30)
/* 000008FC 0000093C  90 83 00 00 */	stw r4, 0x0(r3)
/* 00000900 00000940  48 00 00 08 */	b .L_00000908
.L_00000904:
/* 00000904 00000944  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_00000908:
/* 00000908 00000948  38 00 00 00 */	li r0, 0x0
/* 0000090C 0000094C  90 1E 02 DC */	stw r0, 0x2dc(r30)
/* 00000910 00000950  80 1E 02 CC */	lwz r0, 0x2cc(r30)
/* 00000914 00000954  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000918 00000958  41 81 00 58 */	bgt .L_00000970
/* 0000091C 0000095C  80 7E 02 F0 */	lwz r3, 0x2f0(r30)
/* 00000920 00000960  28 03 00 00 */	cmplwi r3, 0x0
/* 00000924 00000964  41 82 00 4C */	beq .L_00000970
/* 00000928 00000968  83 A3 00 08 */	lwz r29, 0x8(r3)
.L_0000092C:
/* 0000092C 0000096C  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 00000930 00000970  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000934 00000974  41 81 00 3C */	bgt .L_00000970
/* 00000938 00000978  7F A3 EB 78 */	mr r3, r29
/* 0000093C 0000097C  48 00 00 01 */	bl __OSGetEffectivePriority
/* 00000940 00000980  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 00000944 00000984  38 83 00 00 */	addi r4, r3, 0x0
/* 00000948 00000988  7C 00 20 00 */	cmpw r0, r4
/* 0000094C 0000098C  41 82 00 24 */	beq .L_00000970
/* 00000950 00000990  7F A3 EB 78 */	mr r3, r29
/* 00000954 00000994  48 00 00 01 */	bl SetEffectivePriority
/* 00000958 00000998  7C 7D 1B 79 */	mr. r29, r3
/* 0000095C 0000099C  40 82 FF D0 */	bne .L_0000092C
/* 00000960 000009A0  48 00 00 10 */	b .L_00000970
.L_00000964:
/* 00000964 000009A4  7F E3 FB 78 */	mr r3, r31
/* 00000968 000009A8  48 00 00 01 */	bl OSRestoreInterrupts
/* 0000096C 000009AC  48 00 00 90 */	b .L_000009FC
.L_00000970:
/* 00000970 000009B0  7F C3 F3 78 */	mr r3, r30
/* 00000974 000009B4  48 00 00 01 */	bl OSClearContext
/* 00000978 000009B8  A0 1E 02 CA */	lhz r0, 0x2ca(r30)
/* 0000097C 000009BC  54 00 07 FF */	clrlwi. r0, r0, 31
/* 00000980 000009C0  41 82 00 48 */	beq .L_000009C8
/* 00000984 000009C4  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 00000988 000009C8  80 BE 03 00 */	lwz r5, 0x300(r30)
/* 0000098C 000009CC  28 04 00 00 */	cmplwi r4, 0x0
/* 00000990 000009D0  40 82 00 10 */	bne .L_000009A0
/* 00000994 000009D4  3C 60 80 00 */	lis r3, 0x8000
/* 00000998 000009D8  90 A3 00 E0 */	stw r5, 0xe0(r3)
/* 0000099C 000009DC  48 00 00 08 */	b .L_000009A4
.L_000009A0:
/* 000009A0 000009E0  90 A4 03 00 */	stw r5, 0x300(r4)
.L_000009A4:
/* 000009A4 000009E4  28 05 00 00 */	cmplwi r5, 0x0
/* 000009A8 000009E8  40 82 00 10 */	bne .L_000009B8
/* 000009AC 000009EC  3C 60 80 00 */	lis r3, 0x8000
/* 000009B0 000009F0  90 83 00 DC */	stw r4, 0xdc(r3)
/* 000009B4 000009F4  48 00 00 08 */	b .L_000009BC
.L_000009B8:
/* 000009B8 000009F8  90 85 02 FC */	stw r4, 0x2fc(r5)
.L_000009BC:
/* 000009BC 000009FC  38 00 00 00 */	li r0, 0x0
/* 000009C0 00000A00  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 000009C4 00000A04  48 00 00 0C */	b .L_000009D0
.L_000009C8:
/* 000009C8 00000A08  38 00 00 08 */	li r0, 0x8
/* 000009CC 00000A0C  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
.L_000009D0:
/* 000009D0 00000A10  7F C3 F3 78 */	mr r3, r30
/* 000009D4 00000A14  48 00 00 01 */	bl __OSUnlockAllMutex
/* 000009D8 00000A18  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 000009DC 00000A1C  48 00 00 01 */	bl OSWakeupThread
/* 000009E0 00000A20  80 00 00 00 */	lwz r0, RunQueueHint@sda21(r0)
/* 000009E4 00000A24  2C 00 00 00 */	cmpwi r0, 0x0
/* 000009E8 00000A28  41 82 00 0C */	beq .L_000009F4
/* 000009EC 00000A2C  38 60 00 00 */	li r3, 0x0
/* 000009F0 00000A30  48 00 00 01 */	bl SelectThread
.L_000009F4:
/* 000009F4 00000A34  7F E3 FB 78 */	mr r3, r31
/* 000009F8 00000A38  48 00 00 01 */	bl OSRestoreInterrupts
.L_000009FC:
/* 000009FC 00000A3C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 00000A00 00000A40  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 00000A04 00000A44  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 00000A08 00000A48  7C 08 03 A6 */	mtlr r0
/* 00000A0C 00000A4C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 00000A10 00000A50  38 21 00 20 */	addi r1, r1, 0x20
/* 00000A14 00000A54  4E 80 00 20 */	blr
.endfn OSCancelThread

.fn OSResumeThread, global
/* 00000A18 00000A58  7C 08 02 A6 */	mflr r0
/* 00000A1C 00000A5C  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000A20 00000A60  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 00000A24 00000A64  93 E1 00 24 */	stw r31, 0x24(r1)
/* 00000A28 00000A68  93 C1 00 20 */	stw r30, 0x20(r1)
/* 00000A2C 00000A6C  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 00000A30 00000A70  7C 7D 1B 78 */	mr r29, r3
/* 00000A34 00000A74  48 00 00 01 */	bl OSDisableInterrupts
/* 00000A38 00000A78  80 9D 02 CC */	lwz r4, 0x2cc(r29)
/* 00000A3C 00000A7C  3B E3 00 00 */	addi r31, r3, 0x0
/* 00000A40 00000A80  38 04 FF FF */	subi r0, r4, 0x1
/* 00000A44 00000A84  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 00000A48 00000A88  7C 9E 23 78 */	mr r30, r4
/* 00000A4C 00000A8C  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 00000A50 00000A90  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000A54 00000A94  40 80 00 10 */	bge .L_00000A64
/* 00000A58 00000A98  38 00 00 00 */	li r0, 0x0
/* 00000A5C 00000A9C  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 00000A60 00000AA0  48 00 02 18 */	b .L_00000C78
.L_00000A64:
/* 00000A64 00000AA4  40 82 02 14 */	bne .L_00000C78
/* 00000A68 00000AA8  A0 1D 02 C8 */	lhz r0, 0x2c8(r29)
/* 00000A6C 00000AAC  2C 00 00 04 */	cmpwi r0, 0x4
/* 00000A70 00000AB0  41 82 00 B8 */	beq .L_00000B28
/* 00000A74 00000AB4  40 80 01 F0 */	bge .L_00000C64
/* 00000A78 00000AB8  2C 00 00 01 */	cmpwi r0, 0x1
/* 00000A7C 00000ABC  41 82 00 08 */	beq .L_00000A84
/* 00000A80 00000AC0  48 00 01 E4 */	b .L_00000C64
.L_00000A84:
/* 00000A84 00000AC4  80 1D 02 D4 */	lwz r0, 0x2d4(r29)
/* 00000A88 00000AC8  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 00000A8C 00000ACC  48 00 00 24 */	b .L_00000AB0
.L_00000A90:
/* 00000A90 00000AD0  80 83 00 00 */	lwz r4, 0x0(r3)
/* 00000A94 00000AD4  28 04 00 00 */	cmplwi r4, 0x0
/* 00000A98 00000AD8  41 82 00 14 */	beq .L_00000AAC
/* 00000A9C 00000ADC  80 84 02 D0 */	lwz r4, 0x2d0(r4)
/* 00000AA0 00000AE0  7C 04 00 00 */	cmpw r4, r0
/* 00000AA4 00000AE4  40 80 00 08 */	bge .L_00000AAC
/* 00000AA8 00000AE8  7C 80 23 78 */	mr r0, r4
.L_00000AAC:
/* 00000AAC 00000AEC  80 63 00 10 */	lwz r3, 0x10(r3)
.L_00000AB0:
/* 00000AB0 00000AF0  28 03 00 00 */	cmplwi r3, 0x0
/* 00000AB4 00000AF4  40 82 FF DC */	bne .L_00000A90
/* 00000AB8 00000AF8  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 00000ABC 00000AFC  3C 60 00 00 */	lis r3, RunQueue@ha
/* 00000AC0 00000B00  38 03 00 00 */	addi r0, r3, RunQueue@l
/* 00000AC4 00000B04  80 7D 02 D0 */	lwz r3, 0x2d0(r29)
/* 00000AC8 00000B08  54 63 18 38 */	slwi r3, r3, 3
/* 00000ACC 00000B0C  7C 00 1A 14 */	add r0, r0, r3
/* 00000AD0 00000B10  90 1D 02 DC */	stw r0, 0x2dc(r29)
/* 00000AD4 00000B14  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 00000AD8 00000B18  80 64 00 04 */	lwz r3, 0x4(r4)
/* 00000ADC 00000B1C  28 03 00 00 */	cmplwi r3, 0x0
/* 00000AE0 00000B20  40 82 00 0C */	bne .L_00000AEC
/* 00000AE4 00000B24  93 A4 00 00 */	stw r29, 0x0(r4)
/* 00000AE8 00000B28  48 00 00 08 */	b .L_00000AF0
.L_00000AEC:
/* 00000AEC 00000B2C  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_00000AF0:
/* 00000AF0 00000B30  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 00000AF4 00000B34  38 00 00 00 */	li r0, 0x0
/* 00000AF8 00000B38  38 60 00 01 */	li r3, 0x1
/* 00000AFC 00000B3C  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 00000B00 00000B40  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 00000B04 00000B44  93 A4 00 04 */	stw r29, 0x4(r4)
/* 00000B08 00000B48  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 00000B0C 00000B4C  80 80 00 00 */	lwz r4, RunQueueBits@sda21(r0)
/* 00000B10 00000B50  20 00 00 1F */	subfic r0, r0, 0x1f
/* 00000B14 00000B54  7C 60 00 30 */	slw r0, r3, r0
/* 00000B18 00000B58  7C 80 03 78 */	or r0, r4, r0
/* 00000B1C 00000B5C  90 00 00 00 */	stw r0, RunQueueBits@sda21(r0)
/* 00000B20 00000B60  90 60 00 00 */	stw r3, RunQueueHint@sda21(r0)
/* 00000B24 00000B64  48 00 01 40 */	b .L_00000C64
.L_00000B28:
/* 00000B28 00000B68  80 9D 02 E0 */	lwz r4, 0x2e0(r29)
/* 00000B2C 00000B6C  80 BD 02 E4 */	lwz r5, 0x2e4(r29)
/* 00000B30 00000B70  28 04 00 00 */	cmplwi r4, 0x0
/* 00000B34 00000B74  40 82 00 10 */	bne .L_00000B44
/* 00000B38 00000B78  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 00000B3C 00000B7C  90 A3 00 04 */	stw r5, 0x4(r3)
/* 00000B40 00000B80  48 00 00 08 */	b .L_00000B48
.L_00000B44:
/* 00000B44 00000B84  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_00000B48:
/* 00000B48 00000B88  28 05 00 00 */	cmplwi r5, 0x0
/* 00000B4C 00000B8C  40 82 00 10 */	bne .L_00000B5C
/* 00000B50 00000B90  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 00000B54 00000B94  90 83 00 00 */	stw r4, 0x0(r3)
/* 00000B58 00000B98  48 00 00 08 */	b .L_00000B60
.L_00000B5C:
/* 00000B5C 00000B9C  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_00000B60:
/* 00000B60 00000BA0  80 1D 02 D4 */	lwz r0, 0x2d4(r29)
/* 00000B64 00000BA4  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 00000B68 00000BA8  48 00 00 24 */	b .L_00000B8C
.L_00000B6C:
/* 00000B6C 00000BAC  80 83 00 00 */	lwz r4, 0x0(r3)
/* 00000B70 00000BB0  28 04 00 00 */	cmplwi r4, 0x0
/* 00000B74 00000BB4  41 82 00 14 */	beq .L_00000B88
/* 00000B78 00000BB8  80 84 02 D0 */	lwz r4, 0x2d0(r4)
/* 00000B7C 00000BBC  7C 04 00 00 */	cmpw r4, r0
/* 00000B80 00000BC0  40 80 00 08 */	bge .L_00000B88
/* 00000B84 00000BC4  7C 80 23 78 */	mr r0, r4
.L_00000B88:
/* 00000B88 00000BC8  80 63 00 10 */	lwz r3, 0x10(r3)
.L_00000B8C:
/* 00000B8C 00000BCC  28 03 00 00 */	cmplwi r3, 0x0
/* 00000B90 00000BD0  40 82 FF DC */	bne .L_00000B6C
/* 00000B94 00000BD4  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 00000B98 00000BD8  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 00000B9C 00000BDC  80 A4 00 00 */	lwz r5, 0x0(r4)
/* 00000BA0 00000BE0  48 00 00 08 */	b .L_00000BA8
.L_00000BA4:
/* 00000BA4 00000BE4  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
.L_00000BA8:
/* 00000BA8 00000BE8  28 05 00 00 */	cmplwi r5, 0x0
/* 00000BAC 00000BEC  41 82 00 14 */	beq .L_00000BC0
/* 00000BB0 00000BF0  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 00000BB4 00000BF4  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 00000BB8 00000BF8  7C 03 00 00 */	cmpw r3, r0
/* 00000BBC 00000BFC  40 81 FF E8 */	ble .L_00000BA4
.L_00000BC0:
/* 00000BC0 00000C00  28 05 00 00 */	cmplwi r5, 0x0
/* 00000BC4 00000C04  40 82 00 34 */	bne .L_00000BF8
/* 00000BC8 00000C08  80 64 00 04 */	lwz r3, 0x4(r4)
/* 00000BCC 00000C0C  28 03 00 00 */	cmplwi r3, 0x0
/* 00000BD0 00000C10  40 82 00 0C */	bne .L_00000BDC
/* 00000BD4 00000C14  93 A4 00 00 */	stw r29, 0x0(r4)
/* 00000BD8 00000C18  48 00 00 08 */	b .L_00000BE0
.L_00000BDC:
/* 00000BDC 00000C1C  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_00000BE0:
/* 00000BE0 00000C20  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 00000BE4 00000C24  38 00 00 00 */	li r0, 0x0
/* 00000BE8 00000C28  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 00000BEC 00000C2C  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 00000BF0 00000C30  93 A3 00 04 */	stw r29, 0x4(r3)
/* 00000BF4 00000C34  48 00 00 2C */	b .L_00000C20
.L_00000BF8:
/* 00000BF8 00000C38  90 BD 02 E0 */	stw r5, 0x2e0(r29)
/* 00000BFC 00000C3C  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 00000C00 00000C40  93 A5 02 E4 */	stw r29, 0x2e4(r5)
/* 00000C04 00000C44  28 03 00 00 */	cmplwi r3, 0x0
/* 00000C08 00000C48  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 00000C0C 00000C4C  40 82 00 10 */	bne .L_00000C1C
/* 00000C10 00000C50  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 00000C14 00000C54  93 A3 00 00 */	stw r29, 0x0(r3)
/* 00000C18 00000C58  48 00 00 08 */	b .L_00000C20
.L_00000C1C:
/* 00000C1C 00000C5C  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_00000C20:
/* 00000C20 00000C60  80 7D 02 F0 */	lwz r3, 0x2f0(r29)
/* 00000C24 00000C64  28 03 00 00 */	cmplwi r3, 0x0
/* 00000C28 00000C68  41 82 00 3C */	beq .L_00000C64
/* 00000C2C 00000C6C  83 A3 00 08 */	lwz r29, 0x8(r3)
.L_00000C30:
/* 00000C30 00000C70  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 00000C34 00000C74  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000C38 00000C78  41 81 00 2C */	bgt .L_00000C64
/* 00000C3C 00000C7C  7F A3 EB 78 */	mr r3, r29
/* 00000C40 00000C80  48 00 00 01 */	bl __OSGetEffectivePriority
/* 00000C44 00000C84  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 00000C48 00000C88  38 83 00 00 */	addi r4, r3, 0x0
/* 00000C4C 00000C8C  7C 00 20 00 */	cmpw r0, r4
/* 00000C50 00000C90  41 82 00 14 */	beq .L_00000C64
/* 00000C54 00000C94  7F A3 EB 78 */	mr r3, r29
/* 00000C58 00000C98  48 00 00 01 */	bl SetEffectivePriority
/* 00000C5C 00000C9C  7C 7D 1B 79 */	mr. r29, r3
/* 00000C60 00000CA0  40 82 FF D0 */	bne .L_00000C30
.L_00000C64:
/* 00000C64 00000CA4  80 00 00 00 */	lwz r0, RunQueueHint@sda21(r0)
/* 00000C68 00000CA8  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000C6C 00000CAC  41 82 00 0C */	beq .L_00000C78
/* 00000C70 00000CB0  38 60 00 00 */	li r3, 0x0
/* 00000C74 00000CB4  48 00 00 01 */	bl SelectThread
.L_00000C78:
/* 00000C78 00000CB8  7F E3 FB 78 */	mr r3, r31
/* 00000C7C 00000CBC  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000C80 00000CC0  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 00000C84 00000CC4  7F C3 F3 78 */	mr r3, r30
/* 00000C88 00000CC8  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 00000C8C 00000CCC  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 00000C90 00000CD0  7C 08 03 A6 */	mtlr r0
/* 00000C94 00000CD4  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 00000C98 00000CD8  38 21 00 28 */	addi r1, r1, 0x28
/* 00000C9C 00000CDC  4E 80 00 20 */	blr
.endfn OSResumeThread

.fn OSSuspendThread, global
/* 00000CA0 00000CE0  7C 08 02 A6 */	mflr r0
/* 00000CA4 00000CE4  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000CA8 00000CE8  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 00000CAC 00000CEC  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 00000CB0 00000CF0  93 C1 00 18 */	stw r30, 0x18(r1)
/* 00000CB4 00000CF4  93 A1 00 14 */	stw r29, 0x14(r1)
/* 00000CB8 00000CF8  7C 7D 1B 78 */	mr r29, r3
/* 00000CBC 00000CFC  48 00 00 01 */	bl OSDisableInterrupts
/* 00000CC0 00000D00  80 9D 02 CC */	lwz r4, 0x2cc(r29)
/* 00000CC4 00000D04  3B E3 00 00 */	addi r31, r3, 0x0
/* 00000CC8 00000D08  38 04 00 01 */	addi r0, r4, 0x1
/* 00000CCC 00000D0C  7C 9E 23 79 */	mr. r30, r4
/* 00000CD0 00000D10  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 00000CD4 00000D14  40 82 01 14 */	bne .L_00000DE8
/* 00000CD8 00000D18  A0 1D 02 C8 */	lhz r0, 0x2c8(r29)
/* 00000CDC 00000D1C  2C 00 00 03 */	cmpwi r0, 0x3
/* 00000CE0 00000D20  41 82 00 F4 */	beq .L_00000DD4
/* 00000CE4 00000D24  40 80 00 14 */	bge .L_00000CF8
/* 00000CE8 00000D28  2C 00 00 01 */	cmpwi r0, 0x1
/* 00000CEC 00000D2C  41 82 00 28 */	beq .L_00000D14
/* 00000CF0 00000D30  40 80 00 14 */	bge .L_00000D04
/* 00000CF4 00000D34  48 00 00 E0 */	b .L_00000DD4
.L_00000CF8:
/* 00000CF8 00000D38  2C 00 00 05 */	cmpwi r0, 0x5
/* 00000CFC 00000D3C  40 80 00 D8 */	bge .L_00000DD4
/* 00000D00 00000D40  48 00 00 20 */	b .L_00000D20
.L_00000D04:
/* 00000D04 00000D44  38 00 00 01 */	li r0, 0x1
/* 00000D08 00000D48  90 00 00 00 */	stw r0, RunQueueHint@sda21(r0)
/* 00000D0C 00000D4C  B0 1D 02 C8 */	sth r0, 0x2c8(r29)
/* 00000D10 00000D50  48 00 00 C4 */	b .L_00000DD4
.L_00000D14:
/* 00000D14 00000D54  7F A3 EB 78 */	mr r3, r29
/* 00000D18 00000D58  48 00 00 01 */	bl UnsetRun
/* 00000D1C 00000D5C  48 00 00 B8 */	b .L_00000DD4
.L_00000D20:
/* 00000D20 00000D60  80 9D 02 E0 */	lwz r4, 0x2e0(r29)
/* 00000D24 00000D64  80 BD 02 E4 */	lwz r5, 0x2e4(r29)
/* 00000D28 00000D68  28 04 00 00 */	cmplwi r4, 0x0
/* 00000D2C 00000D6C  40 82 00 10 */	bne .L_00000D3C
/* 00000D30 00000D70  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 00000D34 00000D74  90 A3 00 04 */	stw r5, 0x4(r3)
/* 00000D38 00000D78  48 00 00 08 */	b .L_00000D40
.L_00000D3C:
/* 00000D3C 00000D7C  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_00000D40:
/* 00000D40 00000D80  28 05 00 00 */	cmplwi r5, 0x0
/* 00000D44 00000D84  40 82 00 10 */	bne .L_00000D54
/* 00000D48 00000D88  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 00000D4C 00000D8C  90 83 00 00 */	stw r4, 0x0(r3)
/* 00000D50 00000D90  48 00 00 08 */	b .L_00000D58
.L_00000D54:
/* 00000D54 00000D94  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_00000D58:
/* 00000D58 00000D98  38 00 00 20 */	li r0, 0x20
/* 00000D5C 00000D9C  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 00000D60 00000DA0  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 00000D64 00000DA4  80 64 00 04 */	lwz r3, 0x4(r4)
/* 00000D68 00000DA8  28 03 00 00 */	cmplwi r3, 0x0
/* 00000D6C 00000DAC  40 82 00 0C */	bne .L_00000D78
/* 00000D70 00000DB0  93 A4 00 00 */	stw r29, 0x0(r4)
/* 00000D74 00000DB4  48 00 00 08 */	b .L_00000D7C
.L_00000D78:
/* 00000D78 00000DB8  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_00000D7C:
/* 00000D7C 00000DBC  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 00000D80 00000DC0  38 00 00 00 */	li r0, 0x0
/* 00000D84 00000DC4  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 00000D88 00000DC8  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 00000D8C 00000DCC  93 A3 00 04 */	stw r29, 0x4(r3)
/* 00000D90 00000DD0  80 7D 02 F0 */	lwz r3, 0x2f0(r29)
/* 00000D94 00000DD4  28 03 00 00 */	cmplwi r3, 0x0
/* 00000D98 00000DD8  41 82 00 3C */	beq .L_00000DD4
/* 00000D9C 00000DDC  83 A3 00 08 */	lwz r29, 0x8(r3)
.L_00000DA0:
/* 00000DA0 00000DE0  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 00000DA4 00000DE4  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000DA8 00000DE8  41 81 00 2C */	bgt .L_00000DD4
/* 00000DAC 00000DEC  7F A3 EB 78 */	mr r3, r29
/* 00000DB0 00000DF0  48 00 00 01 */	bl __OSGetEffectivePriority
/* 00000DB4 00000DF4  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 00000DB8 00000DF8  38 83 00 00 */	addi r4, r3, 0x0
/* 00000DBC 00000DFC  7C 00 20 00 */	cmpw r0, r4
/* 00000DC0 00000E00  41 82 00 14 */	beq .L_00000DD4
/* 00000DC4 00000E04  7F A3 EB 78 */	mr r3, r29
/* 00000DC8 00000E08  48 00 00 01 */	bl SetEffectivePriority
/* 00000DCC 00000E0C  7C 7D 1B 79 */	mr. r29, r3
/* 00000DD0 00000E10  40 82 FF D0 */	bne .L_00000DA0
.L_00000DD4:
/* 00000DD4 00000E14  80 00 00 00 */	lwz r0, RunQueueHint@sda21(r0)
/* 00000DD8 00000E18  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000DDC 00000E1C  41 82 00 0C */	beq .L_00000DE8
/* 00000DE0 00000E20  38 60 00 00 */	li r3, 0x0
/* 00000DE4 00000E24  48 00 00 01 */	bl SelectThread
.L_00000DE8:
/* 00000DE8 00000E28  7F E3 FB 78 */	mr r3, r31
/* 00000DEC 00000E2C  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000DF0 00000E30  80 01 00 24 */	lwz r0, 0x24(r1)
/* 00000DF4 00000E34  7F C3 F3 78 */	mr r3, r30
/* 00000DF8 00000E38  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 00000DFC 00000E3C  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 00000E00 00000E40  7C 08 03 A6 */	mtlr r0
/* 00000E04 00000E44  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 00000E08 00000E48  38 21 00 20 */	addi r1, r1, 0x20
/* 00000E0C 00000E4C  4E 80 00 20 */	blr
.endfn OSSuspendThread

.fn OSSleepThread, global
/* 00000E10 00000E50  7C 08 02 A6 */	mflr r0
/* 00000E14 00000E54  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000E18 00000E58  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00000E1C 00000E5C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000E20 00000E60  93 C1 00 10 */	stw r30, 0x10(r1)
/* 00000E24 00000E64  7C 7E 1B 78 */	mr r30, r3
/* 00000E28 00000E68  48 00 00 01 */	bl OSDisableInterrupts
/* 00000E2C 00000E6C  3C 80 80 00 */	lis r4, 0x8000
/* 00000E30 00000E70  80 84 00 E4 */	lwz r4, 0xe4(r4)
/* 00000E34 00000E74  38 00 00 04 */	li r0, 0x4
/* 00000E38 00000E78  7C 7F 1B 78 */	mr r31, r3
/* 00000E3C 00000E7C  B0 04 02 C8 */	sth r0, 0x2c8(r4)
/* 00000E40 00000E80  93 C4 02 DC */	stw r30, 0x2dc(r4)
/* 00000E44 00000E84  80 BE 00 00 */	lwz r5, 0x0(r30)
/* 00000E48 00000E88  48 00 00 08 */	b .L_00000E50
.L_00000E4C:
/* 00000E4C 00000E8C  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
.L_00000E50:
/* 00000E50 00000E90  28 05 00 00 */	cmplwi r5, 0x0
/* 00000E54 00000E94  41 82 00 14 */	beq .L_00000E68
/* 00000E58 00000E98  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 00000E5C 00000E9C  80 04 02 D0 */	lwz r0, 0x2d0(r4)
/* 00000E60 00000EA0  7C 03 00 00 */	cmpw r3, r0
/* 00000E64 00000EA4  40 81 FF E8 */	ble .L_00000E4C
.L_00000E68:
/* 00000E68 00000EA8  28 05 00 00 */	cmplwi r5, 0x0
/* 00000E6C 00000EAC  40 82 00 30 */	bne .L_00000E9C
/* 00000E70 00000EB0  80 7E 00 04 */	lwz r3, 0x4(r30)
/* 00000E74 00000EB4  28 03 00 00 */	cmplwi r3, 0x0
/* 00000E78 00000EB8  40 82 00 0C */	bne .L_00000E84
/* 00000E7C 00000EBC  90 9E 00 00 */	stw r4, 0x0(r30)
/* 00000E80 00000EC0  48 00 00 08 */	b .L_00000E88
.L_00000E84:
/* 00000E84 00000EC4  90 83 02 E0 */	stw r4, 0x2e0(r3)
.L_00000E88:
/* 00000E88 00000EC8  90 64 02 E4 */	stw r3, 0x2e4(r4)
/* 00000E8C 00000ECC  38 00 00 00 */	li r0, 0x0
/* 00000E90 00000ED0  90 04 02 E0 */	stw r0, 0x2e0(r4)
/* 00000E94 00000ED4  90 9E 00 04 */	stw r4, 0x4(r30)
/* 00000E98 00000ED8  48 00 00 28 */	b .L_00000EC0
.L_00000E9C:
/* 00000E9C 00000EDC  90 A4 02 E0 */	stw r5, 0x2e0(r4)
/* 00000EA0 00000EE0  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 00000EA4 00000EE4  90 85 02 E4 */	stw r4, 0x2e4(r5)
/* 00000EA8 00000EE8  28 03 00 00 */	cmplwi r3, 0x0
/* 00000EAC 00000EEC  90 64 02 E4 */	stw r3, 0x2e4(r4)
/* 00000EB0 00000EF0  40 82 00 0C */	bne .L_00000EBC
/* 00000EB4 00000EF4  90 9E 00 00 */	stw r4, 0x0(r30)
/* 00000EB8 00000EF8  48 00 00 08 */	b .L_00000EC0
.L_00000EBC:
/* 00000EBC 00000EFC  90 83 02 E0 */	stw r4, 0x2e0(r3)
.L_00000EC0:
/* 00000EC0 00000F00  38 00 00 01 */	li r0, 0x1
/* 00000EC4 00000F04  90 00 00 00 */	stw r0, RunQueueHint@sda21(r0)
/* 00000EC8 00000F08  80 00 00 00 */	lwz r0, RunQueueHint@sda21(r0)
/* 00000ECC 00000F0C  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000ED0 00000F10  41 82 00 0C */	beq .L_00000EDC
/* 00000ED4 00000F14  38 60 00 00 */	li r3, 0x0
/* 00000ED8 00000F18  48 00 00 01 */	bl SelectThread
.L_00000EDC:
/* 00000EDC 00000F1C  7F E3 FB 78 */	mr r3, r31
/* 00000EE0 00000F20  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000EE4 00000F24  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00000EE8 00000F28  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000EEC 00000F2C  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 00000EF0 00000F30  7C 08 03 A6 */	mtlr r0
/* 00000EF4 00000F34  38 21 00 18 */	addi r1, r1, 0x18
/* 00000EF8 00000F38  4E 80 00 20 */	blr
.endfn OSSleepThread

.fn OSWakeupThread, global
/* 00000EFC 00000F3C  7C 08 02 A6 */	mflr r0
/* 00000F00 00000F40  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000F04 00000F44  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00000F08 00000F48  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000F0C 00000F4C  93 C1 00 10 */	stw r30, 0x10(r1)
/* 00000F10 00000F50  7C 7E 1B 78 */	mr r30, r3
/* 00000F14 00000F54  48 00 00 01 */	bl OSDisableInterrupts
/* 00000F18 00000F58  3C 80 00 00 */	lis r4, RunQueue@ha
/* 00000F1C 00000F5C  3B E3 00 00 */	addi r31, r3, 0x0
/* 00000F20 00000F60  38 A4 00 00 */	addi r5, r4, RunQueue@l
/* 00000F24 00000F64  48 00 00 9C */	b .L_00000FC0
.L_00000F28:
/* 00000F28 00000F68  80 66 02 E0 */	lwz r3, 0x2e0(r6)
/* 00000F2C 00000F6C  28 03 00 00 */	cmplwi r3, 0x0
/* 00000F30 00000F70  40 82 00 10 */	bne .L_00000F40
/* 00000F34 00000F74  38 00 00 00 */	li r0, 0x0
/* 00000F38 00000F78  90 1E 00 04 */	stw r0, 0x4(r30)
/* 00000F3C 00000F7C  48 00 00 0C */	b .L_00000F48
.L_00000F40:
/* 00000F40 00000F80  38 00 00 00 */	li r0, 0x0
/* 00000F44 00000F84  90 03 02 E4 */	stw r0, 0x2e4(r3)
.L_00000F48:
/* 00000F48 00000F88  90 7E 00 00 */	stw r3, 0x0(r30)
/* 00000F4C 00000F8C  38 00 00 01 */	li r0, 0x1
/* 00000F50 00000F90  B0 06 02 C8 */	sth r0, 0x2c8(r6)
/* 00000F54 00000F94  80 06 02 CC */	lwz r0, 0x2cc(r6)
/* 00000F58 00000F98  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000F5C 00000F9C  41 81 00 64 */	bgt .L_00000FC0
/* 00000F60 00000FA0  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 00000F64 00000FA4  54 00 18 38 */	slwi r0, r0, 3
/* 00000F68 00000FA8  7C 05 02 14 */	add r0, r5, r0
/* 00000F6C 00000FAC  90 06 02 DC */	stw r0, 0x2dc(r6)
/* 00000F70 00000FB0  80 86 02 DC */	lwz r4, 0x2dc(r6)
/* 00000F74 00000FB4  80 64 00 04 */	lwz r3, 0x4(r4)
/* 00000F78 00000FB8  28 03 00 00 */	cmplwi r3, 0x0
/* 00000F7C 00000FBC  40 82 00 0C */	bne .L_00000F88
/* 00000F80 00000FC0  90 C4 00 00 */	stw r6, 0x0(r4)
/* 00000F84 00000FC4  48 00 00 08 */	b .L_00000F8C
.L_00000F88:
/* 00000F88 00000FC8  90 C3 02 E0 */	stw r6, 0x2e0(r3)
.L_00000F8C:
/* 00000F8C 00000FCC  90 66 02 E4 */	stw r3, 0x2e4(r6)
/* 00000F90 00000FD0  38 00 00 00 */	li r0, 0x0
/* 00000F94 00000FD4  38 60 00 01 */	li r3, 0x1
/* 00000F98 00000FD8  90 06 02 E0 */	stw r0, 0x2e0(r6)
/* 00000F9C 00000FDC  80 86 02 DC */	lwz r4, 0x2dc(r6)
/* 00000FA0 00000FE0  90 C4 00 04 */	stw r6, 0x4(r4)
/* 00000FA4 00000FE4  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 00000FA8 00000FE8  80 80 00 00 */	lwz r4, RunQueueBits@sda21(r0)
/* 00000FAC 00000FEC  20 00 00 1F */	subfic r0, r0, 0x1f
/* 00000FB0 00000FF0  7C 60 00 30 */	slw r0, r3, r0
/* 00000FB4 00000FF4  7C 80 03 78 */	or r0, r4, r0
/* 00000FB8 00000FF8  90 00 00 00 */	stw r0, RunQueueBits@sda21(r0)
/* 00000FBC 00000FFC  90 60 00 00 */	stw r3, RunQueueHint@sda21(r0)
.L_00000FC0:
/* 00000FC0 00001000  80 DE 00 00 */	lwz r6, 0x0(r30)
/* 00000FC4 00001004  28 06 00 00 */	cmplwi r6, 0x0
/* 00000FC8 00001008  40 82 FF 60 */	bne .L_00000F28
/* 00000FCC 0000100C  80 00 00 00 */	lwz r0, RunQueueHint@sda21(r0)
/* 00000FD0 00001010  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000FD4 00001014  41 82 00 0C */	beq .L_00000FE0
/* 00000FD8 00001018  38 60 00 00 */	li r3, 0x0
/* 00000FDC 0000101C  48 00 00 01 */	bl SelectThread
.L_00000FE0:
/* 00000FE0 00001020  7F E3 FB 78 */	mr r3, r31
/* 00000FE4 00001024  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000FE8 00001028  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00000FEC 0000102C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000FF0 00001030  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 00000FF4 00001034  7C 08 03 A6 */	mtlr r0
/* 00000FF8 00001038  38 21 00 18 */	addi r1, r1, 0x18
/* 00000FFC 0000103C  4E 80 00 20 */	blr
.endfn OSWakeupThread

.fn CheckThreadQueue, global
/* 00001000 00001040  80 83 00 00 */	lwz r4, 0x0(r3)
/* 00001004 00001044  28 04 00 00 */	cmplwi r4, 0x0
/* 00001008 00001048  41 82 00 18 */	beq .L_00001020
/* 0000100C 0000104C  80 04 02 E4 */	lwz r0, 0x2e4(r4)
/* 00001010 00001050  28 00 00 00 */	cmplwi r0, 0x0
/* 00001014 00001054  41 82 00 0C */	beq .L_00001020
/* 00001018 00001058  38 60 00 00 */	li r3, 0x0
/* 0000101C 0000105C  4E 80 00 20 */	blr
.L_00001020:
/* 00001020 00001060  80 63 00 04 */	lwz r3, 0x4(r3)
/* 00001024 00001064  28 03 00 00 */	cmplwi r3, 0x0
/* 00001028 00001068  41 82 00 18 */	beq .L_00001040
/* 0000102C 0000106C  80 03 02 E0 */	lwz r0, 0x2e0(r3)
/* 00001030 00001070  28 00 00 00 */	cmplwi r0, 0x0
/* 00001034 00001074  41 82 00 0C */	beq .L_00001040
/* 00001038 00001078  38 60 00 00 */	li r3, 0x0
/* 0000103C 0000107C  4E 80 00 20 */	blr
.L_00001040:
/* 00001040 00001080  7C 85 23 78 */	mr r5, r4
/* 00001044 00001084  48 00 00 48 */	b .L_0000108C
.L_00001048:
/* 00001048 00001088  80 65 02 E0 */	lwz r3, 0x2e0(r5)
/* 0000104C 0000108C  28 03 00 00 */	cmplwi r3, 0x0
/* 00001050 00001090  41 82 00 18 */	beq .L_00001068
/* 00001054 00001094  80 03 02 E4 */	lwz r0, 0x2e4(r3)
/* 00001058 00001098  7C 05 00 40 */	cmplw r5, r0
/* 0000105C 0000109C  41 82 00 0C */	beq .L_00001068
/* 00001060 000010A0  38 60 00 00 */	li r3, 0x0
/* 00001064 000010A4  4E 80 00 20 */	blr
.L_00001068:
/* 00001068 000010A8  80 85 02 E4 */	lwz r4, 0x2e4(r5)
/* 0000106C 000010AC  28 04 00 00 */	cmplwi r4, 0x0
/* 00001070 000010B0  41 82 00 18 */	beq .L_00001088
/* 00001074 000010B4  80 04 02 E0 */	lwz r0, 0x2e0(r4)
/* 00001078 000010B8  7C 05 00 40 */	cmplw r5, r0
/* 0000107C 000010BC  41 82 00 0C */	beq .L_00001088
/* 00001080 000010C0  38 60 00 00 */	li r3, 0x0
/* 00001084 000010C4  4E 80 00 20 */	blr
.L_00001088:
/* 00001088 000010C8  7C 65 1B 78 */	mr r5, r3
.L_0000108C:
/* 0000108C 000010CC  28 05 00 00 */	cmplwi r5, 0x0
/* 00001090 000010D0  40 82 FF B8 */	bne .L_00001048
/* 00001094 000010D4  38 60 00 01 */	li r3, 0x1
/* 00001098 000010D8  4E 80 00 20 */	blr
.endfn CheckThreadQueue

.fn OSCheckActiveThreads, global
/* 0000109C 000010DC  7C 08 02 A6 */	mflr r0
/* 000010A0 000010E0  3C 80 00 00 */	lis r4, OSSerial_80402420@ha
/* 000010A4 000010E4  90 01 00 04 */	stw r0, 0x4(r1)
/* 000010A8 000010E8  3C 60 00 00 */	lis r3, RunQueue@ha
/* 000010AC 000010EC  94 21 FF C8 */	stwu r1, -0x38(r1)
/* 000010B0 000010F0  BF 41 00 20 */	stmw r26, 0x20(r1)
/* 000010B4 000010F4  3B C4 00 00 */	addi r30, r4, OSSerial_80402420@l
/* 000010B8 000010F8  3B E3 00 00 */	addi r31, r3, RunQueue@l
/* 000010BC 000010FC  3B 80 00 00 */	li r28, 0x0
/* 000010C0 00001100  48 00 00 01 */	bl OSDisableInterrupts
/* 000010C4 00001104  3B 63 00 00 */	addi r27, r3, 0x0
/* 000010C8 00001108  3B BF 00 00 */	addi r29, r31, 0x0
/* 000010CC 0000110C  3B 40 00 00 */	li r26, 0x0
.L_000010D0:
/* 000010D0 00001110  20 1A 00 1F */	subfic r0, r26, 0x1f
/* 000010D4 00001114  80 80 00 00 */	lwz r4, RunQueueBits@sda21(r0)
/* 000010D8 00001118  38 60 00 01 */	li r3, 0x1
/* 000010DC 0000111C  7C 60 00 30 */	slw r0, r3, r0
/* 000010E0 00001120  7C 80 00 39 */	and. r0, r4, r0
/* 000010E4 00001124  41 82 00 44 */	beq .L_00001128
/* 000010E8 00001128  80 1D 00 00 */	lwz r0, 0x0(r29)
/* 000010EC 0000112C  28 00 00 00 */	cmplwi r0, 0x0
/* 000010F0 00001130  41 82 00 10 */	beq .L_00001100
/* 000010F4 00001134  80 1D 00 04 */	lwz r0, 0x4(r29)
/* 000010F8 00001138  28 00 00 00 */	cmplwi r0, 0x0
/* 000010FC 0000113C  40 82 00 68 */	bne .L_00001164
.L_00001100:
/* 00001100 00001140  38 7E 00 00 */	addi r3, r30, 0x0
/* 00001104 00001144  4C C6 31 82 */	crclr cr1eq
/* 00001108 00001148  38 80 05 66 */	li r4, 0x566
/* 0000110C 0000114C  48 00 00 01 */	bl OSReport
/* 00001110 00001150  38 7E 00 60 */	addi r3, r30, 0x60
/* 00001114 00001154  4C C6 31 82 */	crclr cr1eq
/* 00001118 00001158  38 80 05 66 */	li r4, 0x566
/* 0000111C 0000115C  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001120 00001160  48 00 00 01 */	bl OSPanic
/* 00001124 00001164  48 00 00 40 */	b .L_00001164
.L_00001128:
/* 00001128 00001168  80 1D 00 00 */	lwz r0, 0x0(r29)
/* 0000112C 0000116C  28 00 00 00 */	cmplwi r0, 0x0
/* 00001130 00001170  40 82 00 10 */	bne .L_00001140
/* 00001134 00001174  80 1D 00 04 */	lwz r0, 0x4(r29)
/* 00001138 00001178  28 00 00 00 */	cmplwi r0, 0x0
/* 0000113C 0000117C  41 82 00 28 */	beq .L_00001164
.L_00001140:
/* 00001140 00001180  38 7E 00 6C */	addi r3, r30, 0x6c
/* 00001144 00001184  4C C6 31 82 */	crclr cr1eq
/* 00001148 00001188  38 80 05 6B */	li r4, 0x56b
/* 0000114C 0000118C  48 00 00 01 */	bl OSReport
/* 00001150 00001190  38 7E 00 60 */	addi r3, r30, 0x60
/* 00001154 00001194  4C C6 31 82 */	crclr cr1eq
/* 00001158 00001198  38 80 05 6B */	li r4, 0x56b
/* 0000115C 0000119C  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001160 000011A0  48 00 00 01 */	bl OSPanic
.L_00001164:
/* 00001164 000011A4  7F A3 EB 78 */	mr r3, r29
/* 00001168 000011A8  48 00 00 01 */	bl CheckThreadQueue
/* 0000116C 000011AC  2C 03 00 00 */	cmpwi r3, 0x0
/* 00001170 000011B0  40 82 00 28 */	bne .L_00001198
/* 00001174 000011B4  38 7E 00 CC */	addi r3, r30, 0xcc
/* 00001178 000011B8  4C C6 31 82 */	crclr cr1eq
/* 0000117C 000011BC  38 80 05 6D */	li r4, 0x56d
/* 00001180 000011C0  48 00 00 01 */	bl OSReport
/* 00001184 000011C4  38 7E 00 60 */	addi r3, r30, 0x60
/* 00001188 000011C8  4C C6 31 82 */	crclr cr1eq
/* 0000118C 000011CC  38 80 05 6D */	li r4, 0x56d
/* 00001190 000011D0  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001194 000011D4  48 00 00 01 */	bl OSPanic
.L_00001198:
/* 00001198 000011D8  3B 5A 00 01 */	addi r26, r26, 0x1
/* 0000119C 000011DC  2C 1A 00 1F */	cmpwi r26, 0x1f
/* 000011A0 000011E0  3B BD 00 08 */	addi r29, r29, 0x8
/* 000011A4 000011E4  40 81 FF 2C */	ble .L_000010D0
/* 000011A8 000011E8  3C 60 80 00 */	lis r3, 0x8000
/* 000011AC 000011EC  80 63 00 DC */	lwz r3, 0xdc(r3)
/* 000011B0 000011F0  28 03 00 00 */	cmplwi r3, 0x0
/* 000011B4 000011F4  41 82 00 34 */	beq .L_000011E8
/* 000011B8 000011F8  80 03 03 00 */	lwz r0, 0x300(r3)
/* 000011BC 000011FC  28 00 00 00 */	cmplwi r0, 0x0
/* 000011C0 00001200  41 82 00 28 */	beq .L_000011E8
/* 000011C4 00001204  38 7E 01 14 */	addi r3, r30, 0x114
/* 000011C8 00001208  4C C6 31 82 */	crclr cr1eq
/* 000011CC 0000120C  38 80 05 72 */	li r4, 0x572
/* 000011D0 00001210  48 00 00 01 */	bl OSReport
/* 000011D4 00001214  38 7E 00 60 */	addi r3, r30, 0x60
/* 000011D8 00001218  4C C6 31 82 */	crclr cr1eq
/* 000011DC 0000121C  38 80 05 72 */	li r4, 0x572
/* 000011E0 00001220  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 000011E4 00001224  48 00 00 01 */	bl OSPanic
.L_000011E8:
/* 000011E8 00001228  3C 60 80 00 */	lis r3, 0x8000
/* 000011EC 0000122C  38 63 00 DC */	addi r3, r3, 0xdc
/* 000011F0 00001230  80 63 00 04 */	lwz r3, 0x4(r3)
/* 000011F4 00001234  28 03 00 00 */	cmplwi r3, 0x0
/* 000011F8 00001238  41 82 00 34 */	beq .L_0000122C
/* 000011FC 0000123C  80 03 02 FC */	lwz r0, 0x2fc(r3)
/* 00001200 00001240  28 00 00 00 */	cmplwi r0, 0x0
/* 00001204 00001244  41 82 00 28 */	beq .L_0000122C
/* 00001208 00001248  38 7E 01 94 */	addi r3, r30, 0x194
/* 0000120C 0000124C  4C C6 31 82 */	crclr cr1eq
/* 00001210 00001250  38 80 05 74 */	li r4, 0x574
/* 00001214 00001254  48 00 00 01 */	bl OSReport
/* 00001218 00001258  38 7E 00 60 */	addi r3, r30, 0x60
/* 0000121C 0000125C  4C C6 31 82 */	crclr cr1eq
/* 00001220 00001260  38 80 05 74 */	li r4, 0x574
/* 00001224 00001264  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001228 00001268  48 00 00 01 */	bl OSPanic
.L_0000122C:
/* 0000122C 0000126C  3C 60 80 00 */	lis r3, 0x8000
/* 00001230 00001270  83 A3 00 DC */	lwz r29, 0xdc(r3)
/* 00001234 00001274  48 00 05 90 */	b .L_000017C4
.L_00001238:
/* 00001238 00001278  80 7D 02 FC */	lwz r3, 0x2fc(r29)
/* 0000123C 0000127C  3B 9C 00 01 */	addi r28, r28, 0x1
/* 00001240 00001280  28 03 00 00 */	cmplwi r3, 0x0
/* 00001244 00001284  41 82 00 34 */	beq .L_00001278
/* 00001248 00001288  80 03 03 00 */	lwz r0, 0x300(r3)
/* 0000124C 0000128C  7C 1D 00 40 */	cmplw r29, r0
/* 00001250 00001290  41 82 00 28 */	beq .L_00001278
/* 00001254 00001294  38 7E 02 14 */	addi r3, r30, 0x214
/* 00001258 00001298  4C C6 31 82 */	crclr cr1eq
/* 0000125C 0000129C  38 80 05 7C */	li r4, 0x57c
/* 00001260 000012A0  48 00 00 01 */	bl OSReport
/* 00001264 000012A4  38 7E 00 60 */	addi r3, r30, 0x60
/* 00001268 000012A8  4C C6 31 82 */	crclr cr1eq
/* 0000126C 000012AC  38 80 05 7C */	li r4, 0x57c
/* 00001270 000012B0  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001274 000012B4  48 00 00 01 */	bl OSPanic
.L_00001278:
/* 00001278 000012B8  80 7D 03 00 */	lwz r3, 0x300(r29)
/* 0000127C 000012BC  28 03 00 00 */	cmplwi r3, 0x0
/* 00001280 000012C0  41 82 00 34 */	beq .L_000012B4
/* 00001284 000012C4  80 03 02 FC */	lwz r0, 0x2fc(r3)
/* 00001288 000012C8  7C 1D 00 40 */	cmplw r29, r0
/* 0000128C 000012CC  41 82 00 28 */	beq .L_000012B4
/* 00001290 000012D0  38 7E 02 90 */	addi r3, r30, 0x290
/* 00001294 000012D4  4C C6 31 82 */	crclr cr1eq
/* 00001298 000012D8  38 80 05 7E */	li r4, 0x57e
/* 0000129C 000012DC  48 00 00 01 */	bl OSReport
/* 000012A0 000012E0  38 7E 00 60 */	addi r3, r30, 0x60
/* 000012A4 000012E4  4C C6 31 82 */	crclr cr1eq
/* 000012A8 000012E8  38 80 05 7E */	li r4, 0x57e
/* 000012AC 000012EC  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 000012B0 000012F0  48 00 00 01 */	bl OSPanic
.L_000012B4:
/* 000012B4 000012F4  80 7D 03 08 */	lwz r3, 0x308(r29)
/* 000012B8 000012F8  80 63 00 00 */	lwz r3, 0x0(r3)
/* 000012BC 000012FC  3C 03 21 53 */	addis r0, r3, 0x2153
/* 000012C0 00001300  28 00 BA BE */	cmplwi r0, 0xbabe
/* 000012C4 00001304  41 82 00 28 */	beq .L_000012EC
/* 000012C8 00001308  38 7E 03 0C */	addi r3, r30, 0x30c
/* 000012CC 0000130C  4C C6 31 82 */	crclr cr1eq
/* 000012D0 00001310  38 80 05 81 */	li r4, 0x581
/* 000012D4 00001314  48 00 00 01 */	bl OSReport
/* 000012D8 00001318  38 7E 00 60 */	addi r3, r30, 0x60
/* 000012DC 0000131C  4C C6 31 82 */	crclr cr1eq
/* 000012E0 00001320  38 80 05 81 */	li r4, 0x581
/* 000012E4 00001324  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 000012E8 00001328  48 00 00 01 */	bl OSPanic
.L_000012EC:
/* 000012EC 0000132C  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 000012F0 00001330  2C 00 00 00 */	cmpwi r0, 0x0
/* 000012F4 00001334  41 80 00 0C */	blt .L_00001300
/* 000012F8 00001338  2C 00 00 20 */	cmpwi r0, 0x20
/* 000012FC 0000133C  40 81 00 28 */	ble .L_00001324
.L_00001300:
/* 00001300 00001340  38 7E 03 60 */	addi r3, r30, 0x360
/* 00001304 00001344  4C C6 31 82 */	crclr cr1eq
/* 00001308 00001348  38 80 05 84 */	li r4, 0x584
/* 0000130C 0000134C  48 00 00 01 */	bl OSReport
/* 00001310 00001350  38 7E 00 60 */	addi r3, r30, 0x60
/* 00001314 00001354  4C C6 31 82 */	crclr cr1eq
/* 00001318 00001358  38 80 05 84 */	li r4, 0x584
/* 0000131C 0000135C  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001320 00001360  48 00 00 01 */	bl OSPanic
.L_00001324:
/* 00001324 00001364  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 00001328 00001368  2C 00 00 00 */	cmpwi r0, 0x0
/* 0000132C 0000136C  40 80 00 28 */	bge .L_00001354
/* 00001330 00001370  38 7E 03 D4 */	addi r3, r30, 0x3d4
/* 00001334 00001374  4C C6 31 82 */	crclr cr1eq
/* 00001338 00001378  38 80 05 85 */	li r4, 0x585
/* 0000133C 0000137C  48 00 00 01 */	bl OSReport
/* 00001340 00001380  38 7E 00 60 */	addi r3, r30, 0x60
/* 00001344 00001384  4C C6 31 82 */	crclr cr1eq
/* 00001348 00001388  38 80 05 85 */	li r4, 0x585
/* 0000134C 0000138C  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001350 00001390  48 00 00 01 */	bl OSPanic
.L_00001354:
/* 00001354 00001394  38 7D 02 E8 */	addi r3, r29, 0x2e8
/* 00001358 00001398  48 00 00 01 */	bl CheckThreadQueue
/* 0000135C 0000139C  2C 03 00 00 */	cmpwi r3, 0x0
/* 00001360 000013A0  40 82 00 28 */	bne .L_00001388
/* 00001364 000013A4  38 7E 04 10 */	addi r3, r30, 0x410
/* 00001368 000013A8  4C C6 31 82 */	crclr cr1eq
/* 0000136C 000013AC  38 80 05 86 */	li r4, 0x586
/* 00001370 000013B0  48 00 00 01 */	bl OSReport
/* 00001374 000013B4  38 7E 00 60 */	addi r3, r30, 0x60
/* 00001378 000013B8  4C C6 31 82 */	crclr cr1eq
/* 0000137C 000013BC  38 80 05 86 */	li r4, 0x586
/* 00001380 000013C0  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001384 000013C4  48 00 00 01 */	bl OSPanic
.L_00001388:
/* 00001388 000013C8  A0 9D 02 C8 */	lhz r4, 0x2c8(r29)
/* 0000138C 000013CC  2C 04 00 04 */	cmpwi r4, 0x4
/* 00001390 000013D0  41 82 02 00 */	beq .L_00001590
/* 00001394 000013D4  40 80 00 1C */	bge .L_000013B0
/* 00001398 000013D8  2C 04 00 02 */	cmpwi r4, 0x2
/* 0000139C 000013DC  41 82 01 2C */	beq .L_000014C8
/* 000013A0 000013E0  40 80 03 C8 */	bge .L_00001768
/* 000013A4 000013E4  2C 04 00 01 */	cmpwi r4, 0x1
/* 000013A8 000013E8  40 80 00 14 */	bge .L_000013BC
/* 000013AC 000013EC  48 00 03 BC */	b .L_00001768
.L_000013B0:
/* 000013B0 000013F0  2C 04 00 08 */	cmpwi r4, 0x8
/* 000013B4 000013F4  41 82 03 74 */	beq .L_00001728
/* 000013B8 000013F8  48 00 03 B0 */	b .L_00001768
.L_000013BC:
/* 000013BC 000013FC  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 000013C0 00001400  2C 00 00 00 */	cmpwi r0, 0x0
/* 000013C4 00001404  41 81 03 C8 */	bgt .L_0000178C
/* 000013C8 00001408  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 000013CC 0000140C  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 000013D0 00001410  54 00 18 38 */	slwi r0, r0, 3
/* 000013D4 00001414  7C 1F 02 14 */	add r0, r31, r0
/* 000013D8 00001418  7C 03 00 40 */	cmplw r3, r0
/* 000013DC 0000141C  41 82 00 28 */	beq .L_00001404
/* 000013E0 00001420  38 7E 04 5C */	addi r3, r30, 0x45c
/* 000013E4 00001424  4C C6 31 82 */	crclr cr1eq
/* 000013E8 00001428  38 80 05 8C */	li r4, 0x58c
/* 000013EC 0000142C  48 00 00 01 */	bl OSReport
/* 000013F0 00001430  38 7E 00 60 */	addi r3, r30, 0x60
/* 000013F4 00001434  4C C6 31 82 */	crclr cr1eq
/* 000013F8 00001438  38 80 05 8C */	li r4, 0x58c
/* 000013FC 0000143C  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001400 00001440  48 00 00 01 */	bl OSPanic
.L_00001404:
/* 00001404 00001444  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 00001408 00001448  54 00 18 38 */	slwi r0, r0, 3
/* 0000140C 0000144C  7C 7F 00 2E */	lwzx r3, r31, r0
/* 00001410 00001450  48 00 00 18 */	b .L_00001428
.L_00001414:
/* 00001414 00001454  7C 1D 18 40 */	cmplw r29, r3
/* 00001418 00001458  40 82 00 0C */	bne .L_00001424
/* 0000141C 0000145C  38 00 00 01 */	li r0, 0x1
/* 00001420 00001460  48 00 00 14 */	b .L_00001434
.L_00001424:
/* 00001424 00001464  80 63 02 E0 */	lwz r3, 0x2e0(r3)
.L_00001428:
/* 00001428 00001468  28 03 00 00 */	cmplwi r3, 0x0
/* 0000142C 0000146C  40 82 FF E8 */	bne .L_00001414
/* 00001430 00001470  38 00 00 00 */	li r0, 0x0
.L_00001434:
/* 00001434 00001474  2C 00 00 00 */	cmpwi r0, 0x0
/* 00001438 00001478  40 82 00 28 */	bne .L_00001460
/* 0000143C 0000147C  38 7E 04 B0 */	addi r3, r30, 0x4b0
/* 00001440 00001480  4C C6 31 82 */	crclr cr1eq
/* 00001444 00001484  38 80 05 8D */	li r4, 0x58d
/* 00001448 00001488  48 00 00 01 */	bl OSReport
/* 0000144C 0000148C  38 7E 00 60 */	addi r3, r30, 0x60
/* 00001450 00001490  4C C6 31 82 */	crclr cr1eq
/* 00001454 00001494  38 80 05 8D */	li r4, 0x58d
/* 00001458 00001498  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 0000145C 0000149C  48 00 00 01 */	bl OSPanic
.L_00001460:
/* 00001460 000014A0  80 9D 02 D4 */	lwz r4, 0x2d4(r29)
/* 00001464 000014A4  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 00001468 000014A8  48 00 00 24 */	b .L_0000148C
.L_0000146C:
/* 0000146C 000014AC  80 A3 00 00 */	lwz r5, 0x0(r3)
/* 00001470 000014B0  28 05 00 00 */	cmplwi r5, 0x0
/* 00001474 000014B4  41 82 00 14 */	beq .L_00001488
/* 00001478 000014B8  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 0000147C 000014BC  7C 00 20 00 */	cmpw r0, r4
/* 00001480 000014C0  40 80 00 08 */	bge .L_00001488
/* 00001484 000014C4  7C 04 03 78 */	mr r4, r0
.L_00001488:
/* 00001488 000014C8  80 63 00 10 */	lwz r3, 0x10(r3)
.L_0000148C:
/* 0000148C 000014CC  28 03 00 00 */	cmplwi r3, 0x0
/* 00001490 000014D0  40 82 FF DC */	bne .L_0000146C
/* 00001494 000014D4  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 00001498 000014D8  7C 00 20 00 */	cmpw r0, r4
/* 0000149C 000014DC  41 82 02 F0 */	beq .L_0000178C
/* 000014A0 000014E0  38 7E 05 04 */	addi r3, r30, 0x504
/* 000014A4 000014E4  4C C6 31 82 */	crclr cr1eq
/* 000014A8 000014E8  38 80 05 8E */	li r4, 0x58e
/* 000014AC 000014EC  48 00 00 01 */	bl OSReport
/* 000014B0 000014F0  38 7E 00 60 */	addi r3, r30, 0x60
/* 000014B4 000014F4  4C C6 31 82 */	crclr cr1eq
/* 000014B8 000014F8  38 80 05 8E */	li r4, 0x58e
/* 000014BC 000014FC  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 000014C0 00001500  48 00 00 01 */	bl OSPanic
/* 000014C4 00001504  48 00 02 C8 */	b .L_0000178C
.L_000014C8:
/* 000014C8 00001508  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 000014CC 0000150C  2C 00 00 00 */	cmpwi r0, 0x0
/* 000014D0 00001510  40 81 00 28 */	ble .L_000014F8
/* 000014D4 00001514  38 7E 05 60 */	addi r3, r30, 0x560
/* 000014D8 00001518  4C C6 31 82 */	crclr cr1eq
/* 000014DC 0000151C  38 80 05 92 */	li r4, 0x592
/* 000014E0 00001520  48 00 00 01 */	bl OSReport
/* 000014E4 00001524  38 7E 00 60 */	addi r3, r30, 0x60
/* 000014E8 00001528  4C C6 31 82 */	crclr cr1eq
/* 000014EC 0000152C  38 80 05 92 */	li r4, 0x592
/* 000014F0 00001530  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 000014F4 00001534  48 00 00 01 */	bl OSPanic
.L_000014F8:
/* 000014F8 00001538  80 1D 02 DC */	lwz r0, 0x2dc(r29)
/* 000014FC 0000153C  28 00 00 00 */	cmplwi r0, 0x0
/* 00001500 00001540  41 82 00 28 */	beq .L_00001528
/* 00001504 00001544  38 7E 05 A4 */	addi r3, r30, 0x5a4
/* 00001508 00001548  4C C6 31 82 */	crclr cr1eq
/* 0000150C 0000154C  38 80 05 93 */	li r4, 0x593
/* 00001510 00001550  48 00 00 01 */	bl OSReport
/* 00001514 00001554  38 7E 00 60 */	addi r3, r30, 0x60
/* 00001518 00001558  4C C6 31 82 */	crclr cr1eq
/* 0000151C 0000155C  38 80 05 93 */	li r4, 0x593
/* 00001520 00001560  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001524 00001564  48 00 00 01 */	bl OSPanic
.L_00001528:
/* 00001528 00001568  80 9D 02 D4 */	lwz r4, 0x2d4(r29)
/* 0000152C 0000156C  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 00001530 00001570  48 00 00 24 */	b .L_00001554
.L_00001534:
/* 00001534 00001574  80 A3 00 00 */	lwz r5, 0x0(r3)
/* 00001538 00001578  28 05 00 00 */	cmplwi r5, 0x0
/* 0000153C 0000157C  41 82 00 14 */	beq .L_00001550
/* 00001540 00001580  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 00001544 00001584  7C 00 20 00 */	cmpw r0, r4
/* 00001548 00001588  40 80 00 08 */	bge .L_00001550
/* 0000154C 0000158C  7C 04 03 78 */	mr r4, r0
.L_00001550:
/* 00001550 00001590  80 63 00 10 */	lwz r3, 0x10(r3)
.L_00001554:
/* 00001554 00001594  28 03 00 00 */	cmplwi r3, 0x0
/* 00001558 00001598  40 82 FF DC */	bne .L_00001534
/* 0000155C 0000159C  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 00001560 000015A0  7C 00 20 00 */	cmpw r0, r4
/* 00001564 000015A4  41 82 02 28 */	beq .L_0000178C
/* 00001568 000015A8  38 7E 05 04 */	addi r3, r30, 0x504
/* 0000156C 000015AC  4C C6 31 82 */	crclr cr1eq
/* 00001570 000015B0  38 80 05 94 */	li r4, 0x594
/* 00001574 000015B4  48 00 00 01 */	bl OSReport
/* 00001578 000015B8  38 7E 00 60 */	addi r3, r30, 0x60
/* 0000157C 000015BC  4C C6 31 82 */	crclr cr1eq
/* 00001580 000015C0  38 80 05 94 */	li r4, 0x594
/* 00001584 000015C4  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001588 000015C8  48 00 00 01 */	bl OSPanic
/* 0000158C 000015CC  48 00 02 00 */	b .L_0000178C
.L_00001590:
/* 00001590 000015D0  80 1D 02 DC */	lwz r0, 0x2dc(r29)
/* 00001594 000015D4  28 00 00 00 */	cmplwi r0, 0x0
/* 00001598 000015D8  40 82 00 28 */	bne .L_000015C0
/* 0000159C 000015DC  38 7E 05 E0 */	addi r3, r30, 0x5e0
/* 000015A0 000015E0  4C C6 31 82 */	crclr cr1eq
/* 000015A4 000015E4  38 80 05 97 */	li r4, 0x597
/* 000015A8 000015E8  48 00 00 01 */	bl OSReport
/* 000015AC 000015EC  38 7E 00 60 */	addi r3, r30, 0x60
/* 000015B0 000015F0  4C C6 31 82 */	crclr cr1eq
/* 000015B4 000015F4  38 80 05 97 */	li r4, 0x597
/* 000015B8 000015F8  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 000015BC 000015FC  48 00 00 01 */	bl OSPanic
.L_000015C0:
/* 000015C0 00001600  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 000015C4 00001604  48 00 00 01 */	bl CheckThreadQueue
/* 000015C8 00001608  2C 03 00 00 */	cmpwi r3, 0x0
/* 000015CC 0000160C  40 82 00 28 */	bne .L_000015F4
/* 000015D0 00001610  38 7E 06 1C */	addi r3, r30, 0x61c
/* 000015D4 00001614  4C C6 31 82 */	crclr cr1eq
/* 000015D8 00001618  38 80 05 98 */	li r4, 0x598
/* 000015DC 0000161C  48 00 00 01 */	bl OSReport
/* 000015E0 00001620  38 7E 00 60 */	addi r3, r30, 0x60
/* 000015E4 00001624  4C C6 31 82 */	crclr cr1eq
/* 000015E8 00001628  38 80 05 98 */	li r4, 0x598
/* 000015EC 0000162C  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 000015F0 00001630  48 00 00 01 */	bl OSPanic
.L_000015F4:
/* 000015F4 00001634  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 000015F8 00001638  80 63 00 00 */	lwz r3, 0x0(r3)
/* 000015FC 0000163C  48 00 00 18 */	b .L_00001614
.L_00001600:
/* 00001600 00001640  7C 1D 18 40 */	cmplw r29, r3
/* 00001604 00001644  40 82 00 0C */	bne .L_00001610
/* 00001608 00001648  38 00 00 01 */	li r0, 0x1
/* 0000160C 0000164C  48 00 00 14 */	b .L_00001620
.L_00001610:
/* 00001610 00001650  80 63 02 E0 */	lwz r3, 0x2e0(r3)
.L_00001614:
/* 00001614 00001654  28 03 00 00 */	cmplwi r3, 0x0
/* 00001618 00001658  40 82 FF E8 */	bne .L_00001600
/* 0000161C 0000165C  38 00 00 00 */	li r0, 0x0
.L_00001620:
/* 00001620 00001660  2C 00 00 00 */	cmpwi r0, 0x0
/* 00001624 00001664  40 82 00 28 */	bne .L_0000164C
/* 00001628 00001668  38 7E 06 60 */	addi r3, r30, 0x660
/* 0000162C 0000166C  4C C6 31 82 */	crclr cr1eq
/* 00001630 00001670  38 80 05 99 */	li r4, 0x599
/* 00001634 00001674  48 00 00 01 */	bl OSReport
/* 00001638 00001678  38 7E 00 60 */	addi r3, r30, 0x60
/* 0000163C 0000167C  4C C6 31 82 */	crclr cr1eq
/* 00001640 00001680  38 80 05 99 */	li r4, 0x599
/* 00001644 00001684  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001648 00001688  48 00 00 01 */	bl OSPanic
.L_0000164C:
/* 0000164C 0000168C  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 00001650 00001690  2C 00 00 00 */	cmpwi r0, 0x0
/* 00001654 00001694  41 81 00 6C */	bgt .L_000016C0
/* 00001658 00001698  80 9D 02 D4 */	lwz r4, 0x2d4(r29)
/* 0000165C 0000169C  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 00001660 000016A0  48 00 00 24 */	b .L_00001684
.L_00001664:
/* 00001664 000016A4  80 A3 00 00 */	lwz r5, 0x0(r3)
/* 00001668 000016A8  28 05 00 00 */	cmplwi r5, 0x0
/* 0000166C 000016AC  41 82 00 14 */	beq .L_00001680
/* 00001670 000016B0  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 00001674 000016B4  7C 00 20 00 */	cmpw r0, r4
/* 00001678 000016B8  40 80 00 08 */	bge .L_00001680
/* 0000167C 000016BC  7C 04 03 78 */	mr r4, r0
.L_00001680:
/* 00001680 000016C0  80 63 00 10 */	lwz r3, 0x10(r3)
.L_00001684:
/* 00001684 000016C4  28 03 00 00 */	cmplwi r3, 0x0
/* 00001688 000016C8  40 82 FF DC */	bne .L_00001664
/* 0000168C 000016CC  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 00001690 000016D0  7C 00 20 00 */	cmpw r0, r4
/* 00001694 000016D4  41 82 00 5C */	beq .L_000016F0
/* 00001698 000016D8  38 7E 05 04 */	addi r3, r30, 0x504
/* 0000169C 000016DC  4C C6 31 82 */	crclr cr1eq
/* 000016A0 000016E0  38 80 05 9C */	li r4, 0x59c
/* 000016A4 000016E4  48 00 00 01 */	bl OSReport
/* 000016A8 000016E8  38 7E 00 60 */	addi r3, r30, 0x60
/* 000016AC 000016EC  4C C6 31 82 */	crclr cr1eq
/* 000016B0 000016F0  38 80 05 9C */	li r4, 0x59c
/* 000016B4 000016F4  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 000016B8 000016F8  48 00 00 01 */	bl OSPanic
/* 000016BC 000016FC  48 00 00 34 */	b .L_000016F0
.L_000016C0:
/* 000016C0 00001700  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 000016C4 00001704  2C 00 00 20 */	cmpwi r0, 0x20
/* 000016C8 00001708  41 82 00 28 */	beq .L_000016F0
/* 000016CC 0000170C  38 7E 06 A4 */	addi r3, r30, 0x6a4
/* 000016D0 00001710  4C C6 31 82 */	crclr cr1eq
/* 000016D4 00001714  38 80 05 A0 */	li r4, 0x5a0
/* 000016D8 00001718  48 00 00 01 */	bl OSReport
/* 000016DC 0000171C  38 7E 00 60 */	addi r3, r30, 0x60
/* 000016E0 00001720  4C C6 31 82 */	crclr cr1eq
/* 000016E4 00001724  38 80 05 A0 */	li r4, 0x5a0
/* 000016E8 00001728  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 000016EC 0000172C  48 00 00 01 */	bl OSPanic
.L_000016F0:
/* 000016F0 00001730  7F A3 EB 78 */	mr r3, r29
/* 000016F4 00001734  48 00 00 01 */	bl __OSCheckDeadLock
/* 000016F8 00001738  2C 03 00 00 */	cmpwi r3, 0x0
/* 000016FC 0000173C  41 82 00 90 */	beq .L_0000178C
/* 00001700 00001740  38 7E 06 E0 */	addi r3, r30, 0x6e0
/* 00001704 00001744  4C C6 31 82 */	crclr cr1eq
/* 00001708 00001748  38 80 05 A2 */	li r4, 0x5a2
/* 0000170C 0000174C  48 00 00 01 */	bl OSReport
/* 00001710 00001750  38 7E 00 60 */	addi r3, r30, 0x60
/* 00001714 00001754  4C C6 31 82 */	crclr cr1eq
/* 00001718 00001758  38 80 05 A2 */	li r4, 0x5a2
/* 0000171C 0000175C  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001720 00001760  48 00 00 01 */	bl OSPanic
/* 00001724 00001764  48 00 00 68 */	b .L_0000178C
.L_00001728:
/* 00001728 00001768  80 1D 02 F4 */	lwz r0, 0x2f4(r29)
/* 0000172C 0000176C  28 00 00 00 */	cmplwi r0, 0x0
/* 00001730 00001770  40 82 00 10 */	bne .L_00001740
/* 00001734 00001774  80 1D 02 F8 */	lwz r0, 0x2f8(r29)
/* 00001738 00001778  28 00 00 00 */	cmplwi r0, 0x0
/* 0000173C 0000177C  41 82 00 50 */	beq .L_0000178C
.L_00001740:
/* 00001740 00001780  38 7E 07 20 */	addi r3, r30, 0x720
/* 00001744 00001784  4C C6 31 82 */	crclr cr1eq
/* 00001748 00001788  38 80 05 A6 */	li r4, 0x5a6
/* 0000174C 0000178C  48 00 00 01 */	bl OSReport
/* 00001750 00001790  38 7E 00 60 */	addi r3, r30, 0x60
/* 00001754 00001794  4C C6 31 82 */	crclr cr1eq
/* 00001758 00001798  38 80 05 A6 */	li r4, 0x5a6
/* 0000175C 0000179C  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001760 000017A0  48 00 00 01 */	bl OSPanic
/* 00001764 000017A4  48 00 00 28 */	b .L_0000178C
.L_00001768:
/* 00001768 000017A8  4C C6 31 82 */	crclr cr1eq
/* 0000176C 000017AC  38 BD 00 00 */	addi r5, r29, 0x0
/* 00001770 000017B0  38 7E 07 88 */	addi r3, r30, 0x788
/* 00001774 000017B4  48 00 00 01 */	bl OSReport
/* 00001778 000017B8  38 7E 00 60 */	addi r3, r30, 0x60
/* 0000177C 000017BC  4C C6 31 82 */	crclr cr1eq
/* 00001780 000017C0  38 80 05 AC */	li r4, 0x5ac
/* 00001784 000017C4  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 00001788 000017C8  48 00 00 01 */	bl OSPanic
.L_0000178C:
/* 0000178C 000017CC  7F A3 EB 78 */	mr r3, r29
/* 00001790 000017D0  48 00 00 01 */	bl __OSCheckMutexes
/* 00001794 000017D4  2C 03 00 00 */	cmpwi r3, 0x0
/* 00001798 000017D8  40 82 00 28 */	bne .L_000017C0
/* 0000179C 000017DC  38 7E 07 D0 */	addi r3, r30, 0x7d0
/* 000017A0 000017E0  4C C6 31 82 */	crclr cr1eq
/* 000017A4 000017E4  38 80 05 B1 */	li r4, 0x5b1
/* 000017A8 000017E8  48 00 00 01 */	bl OSReport
/* 000017AC 000017EC  38 7E 00 60 */	addi r3, r30, 0x60
/* 000017B0 000017F0  4C C6 31 82 */	crclr cr1eq
/* 000017B4 000017F4  38 80 05 B1 */	li r4, 0x5b1
/* 000017B8 000017F8  38 A0 00 00 */	li r5, OSSerial_804D5C28@sda21
/* 000017BC 000017FC  48 00 00 01 */	bl OSPanic
.L_000017C0:
/* 000017C0 00001800  83 BD 02 FC */	lwz r29, 0x2fc(r29)
.L_000017C4:
/* 000017C4 00001804  28 1D 00 00 */	cmplwi r29, 0x0
/* 000017C8 00001808  40 82 FA 70 */	bne .L_00001238
/* 000017CC 0000180C  7F 63 DB 78 */	mr r3, r27
/* 000017D0 00001810  48 00 00 01 */	bl OSRestoreInterrupts
/* 000017D4 00001814  7F 83 E3 78 */	mr r3, r28
/* 000017D8 00001818  BB 41 00 20 */	lmw r26, 0x20(r1)
/* 000017DC 0000181C  80 01 00 3C */	lwz r0, 0x3c(r1)
/* 000017E0 00001820  38 21 00 38 */	addi r1, r1, 0x38
/* 000017E4 00001824  7C 08 03 A6 */	mtlr r0
/* 000017E8 00001828  4E 80 00 20 */	blr
.endfn OSCheckActiveThreads

# 0x00000000 - 0x00000810
.data
.balign 8

.obj OSSerial_80402420, global
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x2052756E
	.4byte 0x51756575
	.4byte 0x655B7072
	.4byte 0x696F5D2E
	.4byte 0x68656164
	.4byte 0x20213D20
	.4byte 0x4E554C4C
	.4byte 0x20262620
	.4byte 0x52756E51
	.4byte 0x75657565
	.4byte 0x5B707269
	.4byte 0x6F5D2E74
	.4byte 0x61696C20
	.4byte 0x213D204E
	.4byte 0x554C4C20
	.4byte 0x696E2025
	.4byte 0x640A0000
	.4byte 0x4F535468
	.4byte 0x72656164
	.4byte 0x2E630000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x2052756E
	.4byte 0x51756575
	.4byte 0x655B7072
	.4byte 0x696F5D2E
	.4byte 0x68656164
	.4byte 0x203D3D20
	.4byte 0x4E554C4C
	.4byte 0x20262620
	.4byte 0x52756E51
	.4byte 0x75657565
	.4byte 0x5B707269
	.4byte 0x6F5D2E74
	.4byte 0x61696C20
	.4byte 0x3D3D204E
	.4byte 0x554C4C20
	.4byte 0x696E2025
	.4byte 0x640A0000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20436865
	.4byte 0x636B5468
	.4byte 0x72656164
	.4byte 0x51756575
	.4byte 0x65282652
	.4byte 0x756E5175
	.4byte 0x6575655B
	.4byte 0x7072696F
	.4byte 0x5D292069
	.4byte 0x6E202564
	.4byte 0x0A000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x205F5F4F
	.4byte 0x53416374
	.4byte 0x69766554
	.4byte 0x68726561
	.4byte 0x64517565
	.4byte 0x75652E68
	.4byte 0x65616420
	.4byte 0x3D3D204E
	.4byte 0x554C4C20
	.4byte 0x7C7C205F
	.4byte 0x5F4F5341
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616451
	.4byte 0x75657565
	.4byte 0x2E686561
	.4byte 0x642D3E6C
	.4byte 0x696E6B41
	.4byte 0x63746976
	.4byte 0x652E7072
	.4byte 0x6576203D
	.4byte 0x3D204E55
	.4byte 0x4C4C2069
	.4byte 0x6E202564
	.4byte 0x0A000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x205F5F4F
	.4byte 0x53416374
	.4byte 0x69766554
	.4byte 0x68726561
	.4byte 0x64517565
	.4byte 0x75652E74
	.4byte 0x61696C20
	.4byte 0x3D3D204E
	.4byte 0x554C4C20
	.4byte 0x7C7C205F
	.4byte 0x5F4F5341
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616451
	.4byte 0x75657565
	.4byte 0x2E746169
	.4byte 0x6C2D3E6C
	.4byte 0x696E6B41
	.4byte 0x63746976
	.4byte 0x652E6E65
	.4byte 0x7874203D
	.4byte 0x3D204E55
	.4byte 0x4C4C2069
	.4byte 0x6E202564
	.4byte 0x0A000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20746872
	.4byte 0x6561642D
	.4byte 0x3E6C696E
	.4byte 0x6B416374
	.4byte 0x6976652E
	.4byte 0x6E657874
	.4byte 0x203D3D20
	.4byte 0x4E554C4C
	.4byte 0x207C7C20
	.4byte 0x74687265
	.4byte 0x6164203D
	.4byte 0x3D207468
	.4byte 0x72656164
	.4byte 0x2D3E6C69
	.4byte 0x6E6B4163
	.4byte 0x74697665
	.4byte 0x2E6E6578
	.4byte 0x742D3E6C
	.4byte 0x696E6B41
	.4byte 0x63746976
	.4byte 0x652E7072
	.4byte 0x65762069
	.4byte 0x6E202564
	.4byte 0x0A000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20746872
	.4byte 0x6561642D
	.4byte 0x3E6C696E
	.4byte 0x6B416374
	.4byte 0x6976652E
	.4byte 0x70726576
	.4byte 0x203D3D20
	.4byte 0x4E554C4C
	.4byte 0x207C7C20
	.4byte 0x74687265
	.4byte 0x6164203D
	.4byte 0x3D207468
	.4byte 0x72656164
	.4byte 0x2D3E6C69
	.4byte 0x6E6B4163
	.4byte 0x74697665
	.4byte 0x2E707265
	.4byte 0x762D3E6C
	.4byte 0x696E6B41
	.4byte 0x63746976
	.4byte 0x652E6E65
	.4byte 0x78742069
	.4byte 0x6E202564
	.4byte 0x0A000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x202A2874
	.4byte 0x68726561
	.4byte 0x642D3E73
	.4byte 0x7461636B
	.4byte 0x456E6429
	.4byte 0x203D3D20
	.4byte 0x4F535F54
	.4byte 0x48524541
	.4byte 0x445F5354
	.4byte 0x41434B5F
	.4byte 0x4D414749
	.4byte 0x4320696E
	.4byte 0x2025640A
	.4byte 0x00000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x204F535F
	.4byte 0x5052494F
	.4byte 0x52495459
	.4byte 0x5F4D494E
	.4byte 0x203C3D20
	.4byte 0x74687265
	.4byte 0x61642D3E
	.4byte 0x7072696F
	.4byte 0x72697479
	.4byte 0x20262620
	.4byte 0x74687265
	.4byte 0x61642D3E
	.4byte 0x7072696F
	.4byte 0x72697479
	.4byte 0x203C3D20
	.4byte 0x4F535F50
	.4byte 0x52494F52
	.4byte 0x4954595F
	.4byte 0x4D41582B
	.4byte 0x3120696E
	.4byte 0x2025640A
	.4byte 0x00000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x2030203C
	.4byte 0x3D207468
	.4byte 0x72656164
	.4byte 0x2D3E7375
	.4byte 0x7370656E
	.4byte 0x6420696E
	.4byte 0x2025640A
	.4byte 0x00000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20436865
	.4byte 0x636B5468
	.4byte 0x72656164
	.4byte 0x51756575
	.4byte 0x65282674
	.4byte 0x68726561
	.4byte 0x642D3E71
	.4byte 0x75657565
	.4byte 0x4A6F696E
	.4byte 0x2920696E
	.4byte 0x2025640A
	.4byte 0x00000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20746872
	.4byte 0x6561642D
	.4byte 0x3E717565
	.4byte 0x7565203D
	.4byte 0x3D202652
	.4byte 0x756E5175
	.4byte 0x6575655B
	.4byte 0x74687265
	.4byte 0x61642D3E
	.4byte 0x7072696F
	.4byte 0x72697479
	.4byte 0x5D20696E
	.4byte 0x2025640A
	.4byte 0x00000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x2049734D
	.4byte 0x656D6265
	.4byte 0x72282652
	.4byte 0x756E5175
	.4byte 0x6575655B
	.4byte 0x74687265
	.4byte 0x61642D3E
	.4byte 0x7072696F
	.4byte 0x72697479
	.4byte 0x5D2C2074
	.4byte 0x68726561
	.4byte 0x64292069
	.4byte 0x6E202564
	.4byte 0x0A000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20746872
	.4byte 0x6561642D
	.4byte 0x3E707269
	.4byte 0x6F726974
	.4byte 0x79203D3D
	.4byte 0x205F5F4F
	.4byte 0x53476574
	.4byte 0x45666665
	.4byte 0x63746976
	.4byte 0x65507269
	.4byte 0x6F726974
	.4byte 0x79287468
	.4byte 0x72656164
	.4byte 0x2920696E
	.4byte 0x2025640A
	.4byte 0x00000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20214973
	.4byte 0x53757370
	.4byte 0x656E6465
	.4byte 0x64287468
	.4byte 0x72656164
	.4byte 0x2D3E7375
	.4byte 0x7370656E
	.4byte 0x64292069
	.4byte 0x6E202564
	.4byte 0x0A000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20746872
	.4byte 0x6561642D
	.4byte 0x3E717565
	.4byte 0x7565203D
	.4byte 0x3D204E55
	.4byte 0x4C4C2069
	.4byte 0x6E202564
	.4byte 0x0A000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20746872
	.4byte 0x6561642D
	.4byte 0x3E717565
	.4byte 0x75652021
	.4byte 0x3D204E55
	.4byte 0x4C4C2069
	.4byte 0x6E202564
	.4byte 0x0A000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20436865
	.4byte 0x636B5468
	.4byte 0x72656164
	.4byte 0x51756575
	.4byte 0x65287468
	.4byte 0x72656164
	.4byte 0x2D3E7175
	.4byte 0x65756529
	.4byte 0x20696E20
	.4byte 0x25640A00
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x2049734D
	.4byte 0x656D6265
	.4byte 0x72287468
	.4byte 0x72656164
	.4byte 0x2D3E7175
	.4byte 0x6575652C
	.4byte 0x20746872
	.4byte 0x65616429
	.4byte 0x20696E20
	.4byte 0x25640A00
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20746872
	.4byte 0x6561642D
	.4byte 0x3E707269
	.4byte 0x6F726974
	.4byte 0x79203D3D
	.4byte 0x20333220
	.4byte 0x696E2025
	.4byte 0x640A0000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20215F5F
	.4byte 0x4F534368
	.4byte 0x65636B44
	.4byte 0x6561644C
	.4byte 0x6F636B28
	.4byte 0x74687265
	.4byte 0x61642920
	.4byte 0x696E2025
	.4byte 0x640A0000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x20746872
	.4byte 0x6561642D
	.4byte 0x3E717565
	.4byte 0x75654D75
	.4byte 0x7465782E
	.4byte 0x68656164
	.4byte 0x203D3D20
	.4byte 0x4E554C4C
	.4byte 0x20262620
	.4byte 0x74687265
	.4byte 0x61642D3E
	.4byte 0x71756575
	.4byte 0x654D7574
	.4byte 0x65782E74
	.4byte 0x61696C20
	.4byte 0x3D3D204E
	.4byte 0x554C4C20
	.4byte 0x696E2025
	.4byte 0x640A0000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x2E20756E
	.4byte 0x6B6F776E
	.4byte 0x20746872
	.4byte 0x65616420
	.4byte 0x73746174
	.4byte 0x65202825
	.4byte 0x6429206F
	.4byte 0x66207468
	.4byte 0x72656164
	.4byte 0x2025700A
	.4byte 0x00000000
	.4byte 0x4F534368
	.4byte 0x65636B41
	.4byte 0x63746976
	.4byte 0x65546872
	.4byte 0x65616473
	.4byte 0x3A204661
	.4byte 0x696C6564
	.4byte 0x205F5F4F
	.4byte 0x53436865
	.4byte 0x636B4D75
	.4byte 0x74657865
	.4byte 0x73287468
	.4byte 0x72656164
	.4byte 0x2920696E
	.4byte 0x2025640A
	.4byte 0x00000000
.endobj OSSerial_80402420

# 0x00000000 - 0x000009E8
.section .bss, "wa", @nobits
.balign 8

.obj RunQueue, local
	.skip 0x100
.endobj RunQueue

.obj gap_08_804A80B8_bss, global
.hidden gap_08_804A80B8_bss
	.skip 0x8E8
.endobj gap_08_804A80B8_bss

# 0x00000000 - 0x00000008
.section .sdata, "wa"
.balign 8

.obj OSSerial_804D5C28, global
	.4byte 0x00000000
	.4byte 0x00000000
.endobj OSSerial_804D5C28

# 0x00000000 - 0x00000010
.section .sbss, "wa", @nobits
.balign 8

.obj RunQueueBits, local
	.skip 0x4
.endobj RunQueueBits

.obj RunQueueHint, local
	.skip 0x4
.endobj RunQueueHint

.obj Reschedule, local
	.skip 0x4
.endobj Reschedule

.obj gap_10_804D73E4_sbss, global
.hidden gap_10_804D73E4_sbss
	.skip 0x4
.endobj gap_10_804D73E4_sbss
