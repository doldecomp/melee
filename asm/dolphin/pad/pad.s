.include "macros.inc"
.file "pad.c"

# 0x00000000 - 0x00001BDC
.text
.balign 4

.fn UpdateOrigin, global
/* 00000000 00000040  7C 08 02 A6 */	mflr r0
/* 00000004 00000044  3C A0 00 00 */	lis r5, Origin@ha
/* 00000008 00000048  90 01 00 04 */	stw r0, 0x4(r1)
/* 0000000C 0000004C  1C C3 00 0C */	mulli r6, r3, 0xc
/* 00000010 00000050  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00000014 00000054  38 A5 00 00 */	addi r5, r5, Origin@l
/* 00000018 00000058  93 E1 00 14 */	stw r31, 0x14(r1)
/* 0000001C 0000005C  7F E5 32 14 */	add r31, r5, r6
/* 00000020 00000060  80 00 00 00 */	lwz r0, AnalogMode@sda21(r0)
/* 00000024 00000064  54 04 05 6E */	rlwinm r4, r0, 0, 21, 23
/* 00000028 00000068  2C 04 04 00 */	cmpwi r4, 0x400
/* 0000002C 0000006C  3C 00 80 00 */	lis r0, 0x8000
/* 00000030 00000070  7C 00 1C 30 */	srw r0, r0, r3
/* 00000034 00000074  41 82 00 F4 */	beq .L_00000128
/* 00000038 00000078  40 80 00 34 */	bge .L_0000006C
/* 0000003C 0000007C  2C 04 02 00 */	cmpwi r4, 0x200
/* 00000040 00000080  41 82 00 B8 */	beq .L_000000F8
/* 00000044 00000084  40 80 00 1C */	bge .L_00000060
/* 00000048 00000088  2C 04 01 00 */	cmpwi r4, 0x100
/* 0000004C 0000008C  41 82 00 78 */	beq .L_000000C4
/* 00000050 00000090  40 80 00 D8 */	bge .L_00000128
/* 00000054 00000094  2C 04 00 00 */	cmpwi r4, 0x0
/* 00000058 00000098  41 82 00 38 */	beq .L_00000090
/* 0000005C 0000009C  48 00 00 CC */	b .L_00000128
.L_00000060:
/* 00000060 000000A0  2C 04 03 00 */	cmpwi r4, 0x300
/* 00000064 000000A4  41 82 00 C4 */	beq .L_00000128
/* 00000068 000000A8  48 00 00 C0 */	b .L_00000128
.L_0000006C:
/* 0000006C 000000AC  2C 04 06 00 */	cmpwi r4, 0x600
/* 00000070 000000B0  41 82 00 20 */	beq .L_00000090
/* 00000074 000000B4  40 80 00 10 */	bge .L_00000084
/* 00000078 000000B8  2C 04 05 00 */	cmpwi r4, 0x500
/* 0000007C 000000BC  41 82 00 14 */	beq .L_00000090
/* 00000080 000000C0  48 00 00 A8 */	b .L_00000128
.L_00000084:
/* 00000084 000000C4  2C 04 07 00 */	cmpwi r4, 0x700
/* 00000088 000000C8  41 82 00 08 */	beq .L_00000090
/* 0000008C 000000CC  48 00 00 9C */	b .L_00000128
.L_00000090:
/* 00000090 000000D0  88 9F 00 06 */	lbz r4, 0x6(r31)
/* 00000094 000000D4  54 84 00 36 */	clrrwi r4, r4, 4
/* 00000098 000000D8  98 9F 00 06 */	stb r4, 0x6(r31)
/* 0000009C 000000DC  88 9F 00 07 */	lbz r4, 0x7(r31)
/* 000000A0 000000E0  54 84 00 36 */	clrrwi r4, r4, 4
/* 000000A4 000000E4  98 9F 00 07 */	stb r4, 0x7(r31)
/* 000000A8 000000E8  88 9F 00 08 */	lbz r4, 0x8(r31)
/* 000000AC 000000EC  54 84 00 36 */	clrrwi r4, r4, 4
/* 000000B0 000000F0  98 9F 00 08 */	stb r4, 0x8(r31)
/* 000000B4 000000F4  88 9F 00 09 */	lbz r4, 0x9(r31)
/* 000000B8 000000F8  54 84 00 36 */	clrrwi r4, r4, 4
/* 000000BC 000000FC  98 9F 00 09 */	stb r4, 0x9(r31)
/* 000000C0 00000100  48 00 00 68 */	b .L_00000128
.L_000000C4:
/* 000000C4 00000104  88 9F 00 04 */	lbz r4, 0x4(r31)
/* 000000C8 00000108  54 84 00 36 */	clrrwi r4, r4, 4
/* 000000CC 0000010C  98 9F 00 04 */	stb r4, 0x4(r31)
/* 000000D0 00000110  88 9F 00 05 */	lbz r4, 0x5(r31)
/* 000000D4 00000114  54 84 00 36 */	clrrwi r4, r4, 4
/* 000000D8 00000118  98 9F 00 05 */	stb r4, 0x5(r31)
/* 000000DC 0000011C  88 9F 00 08 */	lbz r4, 0x8(r31)
/* 000000E0 00000120  54 84 00 36 */	clrrwi r4, r4, 4
/* 000000E4 00000124  98 9F 00 08 */	stb r4, 0x8(r31)
/* 000000E8 00000128  88 9F 00 09 */	lbz r4, 0x9(r31)
/* 000000EC 0000012C  54 84 00 36 */	clrrwi r4, r4, 4
/* 000000F0 00000130  98 9F 00 09 */	stb r4, 0x9(r31)
/* 000000F4 00000134  48 00 00 34 */	b .L_00000128
.L_000000F8:
/* 000000F8 00000138  88 9F 00 04 */	lbz r4, 0x4(r31)
/* 000000FC 0000013C  54 84 00 36 */	clrrwi r4, r4, 4
/* 00000100 00000140  98 9F 00 04 */	stb r4, 0x4(r31)
/* 00000104 00000144  88 9F 00 05 */	lbz r4, 0x5(r31)
/* 00000108 00000148  54 84 00 36 */	clrrwi r4, r4, 4
/* 0000010C 0000014C  98 9F 00 05 */	stb r4, 0x5(r31)
/* 00000110 00000150  88 9F 00 06 */	lbz r4, 0x6(r31)
/* 00000114 00000154  54 84 00 36 */	clrrwi r4, r4, 4
/* 00000118 00000158  98 9F 00 06 */	stb r4, 0x6(r31)
/* 0000011C 0000015C  88 9F 00 07 */	lbz r4, 0x7(r31)
/* 00000120 00000160  54 84 00 36 */	clrrwi r4, r4, 4
/* 00000124 00000164  98 9F 00 07 */	stb r4, 0x7(r31)
.L_00000128:
/* 00000128 00000168  88 9F 00 02 */	lbz r4, 0x2(r31)
/* 0000012C 0000016C  38 84 FF 80 */	subi r4, r4, 0x80
/* 00000130 00000170  98 9F 00 02 */	stb r4, 0x2(r31)
/* 00000134 00000174  88 9F 00 03 */	lbz r4, 0x3(r31)
/* 00000138 00000178  38 84 FF 80 */	subi r4, r4, 0x80
/* 0000013C 0000017C  98 9F 00 03 */	stb r4, 0x3(r31)
/* 00000140 00000180  88 9F 00 04 */	lbz r4, 0x4(r31)
/* 00000144 00000184  38 84 FF 80 */	subi r4, r4, 0x80
/* 00000148 00000188  98 9F 00 04 */	stb r4, 0x4(r31)
/* 0000014C 0000018C  88 9F 00 05 */	lbz r4, 0x5(r31)
/* 00000150 00000190  38 84 FF 80 */	subi r4, r4, 0x80
/* 00000154 00000194  98 9F 00 05 */	stb r4, 0x5(r31)
/* 00000158 00000198  80 80 00 00 */	lwz r4, XPatchBits@sda21(r0)
/* 0000015C 0000019C  7C 80 00 39 */	and. r0, r4, r0
/* 00000160 000001A0  41 82 00 30 */	beq .L_00000190
/* 00000164 000001A4  88 1F 00 02 */	lbz r0, 0x2(r31)
/* 00000168 000001A8  7C 00 07 74 */	extsb r0, r0
/* 0000016C 000001AC  2C 00 00 40 */	cmpwi r0, 0x40
/* 00000170 000001B0  40 81 00 20 */	ble .L_00000190
/* 00000174 000001B4  48 00 00 01 */	bl SIGetType
/* 00000178 000001B8  54 63 00 1E */	clrrwi r3, r3, 16
/* 0000017C 000001BC  3C 03 F7 00 */	subis r0, r3, 0x900
/* 00000180 000001C0  28 00 00 00 */	cmplwi r0, 0x0
/* 00000184 000001C4  40 82 00 0C */	bne .L_00000190
/* 00000188 000001C8  38 00 00 00 */	li r0, 0x0
/* 0000018C 000001CC  98 1F 00 02 */	stb r0, 0x2(r31)
.L_00000190:
/* 00000190 000001D0  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00000194 000001D4  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000198 000001D8  38 21 00 18 */	addi r1, r1, 0x18
/* 0000019C 000001DC  7C 08 03 A6 */	mtlr r0
/* 000001A0 000001E0  4E 80 00 20 */	blr
.endfn UpdateOrigin

.fn PADOriginCallback, global
/* 000001A4 000001E4  7C 08 02 A6 */	mflr r0
/* 000001A8 000001E8  90 01 00 04 */	stw r0, 0x4(r1)
/* 000001AC 000001EC  54 80 07 3F */	clrlwi. r0, r4, 28
/* 000001B0 000001F0  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 000001B4 000001F4  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 000001B8 000001F8  40 82 00 48 */	bne .L_00000200
/* 000001BC 000001FC  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 000001C0 00000200  48 00 00 01 */	bl UpdateOrigin
/* 000001C4 00000204  83 E0 00 00 */	lwz r31, ResettingChan@sda21(r0)
/* 000001C8 00000208  3C 00 80 00 */	lis r0, 0x8000
/* 000001CC 0000020C  80 60 00 00 */	lwz r3, EnabledBits@sda21(r0)
/* 000001D0 00000210  38 81 00 1C */	addi r4, r1, 0x1c
/* 000001D4 00000214  7C 00 FC 30 */	srw r0, r0, r31
/* 000001D8 00000218  7C 60 03 78 */	or r0, r3, r0
/* 000001DC 0000021C  90 00 00 00 */	stw r0, EnabledBits@sda21(r0)
/* 000001E0 00000220  7F E3 FB 78 */	mr r3, r31
/* 000001E4 00000224  48 00 00 01 */	bl SIGetResponse
/* 000001E8 00000228  80 00 00 00 */	lwz r0, AnalogMode@sda21(r0)
/* 000001EC 0000022C  38 7F 00 00 */	addi r3, r31, 0x0
/* 000001F0 00000230  64 04 00 40 */	oris r4, r0, 0x40
/* 000001F4 00000234  48 00 00 01 */	bl SISetCommand
/* 000001F8 00000238  80 60 00 00 */	lwz r3, EnabledBits@sda21(r0)
/* 000001FC 0000023C  48 00 00 01 */	bl SIEnablePolling
.L_00000200:
/* 00000200 00000240  80 A0 00 00 */	lwz r5, ResettingBits@sda21(r0)
/* 00000204 00000244  7C A0 00 34 */	cntlzw r0, r5
/* 00000208 00000248  90 00 00 00 */	stw r0, ResettingChan@sda21(r0)
/* 0000020C 0000024C  80 80 00 00 */	lwz r4, ResettingChan@sda21(r0)
/* 00000210 00000250  2C 04 00 20 */	cmpwi r4, 0x20
/* 00000214 00000254  41 82 00 40 */	beq .L_00000254
/* 00000218 00000258  3C 00 80 00 */	lis r0, 0x8000
/* 0000021C 0000025C  7C 00 24 30 */	srw r0, r0, r4
/* 00000220 00000260  7C A0 00 78 */	andc r0, r5, r0
/* 00000224 00000264  1C 84 00 0C */	mulli r4, r4, 0xc
/* 00000228 00000268  90 00 00 00 */	stw r0, ResettingBits@sda21(r0)
/* 0000022C 0000026C  3C 60 00 00 */	lis r3, Origin@ha
/* 00000230 00000270  38 03 00 00 */	addi r0, r3, Origin@l
/* 00000234 00000274  7C 60 22 14 */	add r3, r0, r4
/* 00000238 00000278  38 80 00 00 */	li r4, 0x0
/* 0000023C 0000027C  38 A0 00 0C */	li r5, 0xc
/* 00000240 00000280  48 00 00 01 */	bl memset
/* 00000244 00000284  3C 80 00 00 */	lis r4, PADTypeAndStatusCallback@ha
/* 00000248 00000288  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 0000024C 0000028C  38 84 00 00 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 00000250 00000290  48 00 00 01 */	bl SIGetTypeAsync
.L_00000254:
/* 00000254 00000294  80 01 00 34 */	lwz r0, 0x34(r1)
/* 00000258 00000298  83 E1 00 2C */	lwz r31, 0x2c(r1)
/* 0000025C 0000029C  38 21 00 30 */	addi r1, r1, 0x30
/* 00000260 000002A0  7C 08 03 A6 */	mtlr r0
/* 00000264 000002A4  4E 80 00 20 */	blr
.endfn PADOriginCallback

.fn PADOriginUpdateCallback, global
/* 00000268 000002A8  7C 08 02 A6 */	mflr r0
/* 0000026C 000002AC  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000270 000002B0  3C 00 80 00 */	lis r0, 0x8000
/* 00000274 000002B4  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 00000278 000002B8  93 E1 00 24 */	stw r31, 0x24(r1)
/* 0000027C 000002BC  3B E4 00 00 */	addi r31, r4, 0x0
/* 00000280 000002C0  93 C1 00 20 */	stw r30, 0x20(r1)
/* 00000284 000002C4  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 00000288 000002C8  7C 7D 1B 78 */	mr r29, r3
/* 0000028C 000002CC  7C 1E EC 30 */	srw r30, r0, r29
/* 00000290 000002D0  80 60 00 00 */	lwz r3, EnabledBits@sda21(r0)
/* 00000294 000002D4  7C 60 F0 39 */	and. r0, r3, r30
/* 00000298 000002D8  41 82 00 74 */	beq .L_0000030C
/* 0000029C 000002DC  57 E0 07 3F */	clrlwi. r0, r31, 28
/* 000002A0 000002E0  40 82 00 0C */	bne .L_000002AC
/* 000002A4 000002E4  7F A3 EB 78 */	mr r3, r29
/* 000002A8 000002E8  48 00 00 01 */	bl UpdateOrigin
.L_000002AC:
/* 000002AC 000002EC  57 E0 07 39 */	rlwinm. r0, r31, 0, 28, 28
/* 000002B0 000002F0  41 82 00 5C */	beq .L_0000030C
/* 000002B4 000002F4  48 00 00 01 */	bl OSDisableInterrupts
/* 000002B8 000002F8  3B E3 00 00 */	addi r31, r3, 0x0
/* 000002BC 000002FC  38 7E 00 00 */	addi r3, r30, 0x0
/* 000002C0 00000300  48 00 00 01 */	bl SIDisablePolling
/* 000002C4 00000304  80 C0 00 00 */	lwz r6, EnabledBits@sda21(r0)
/* 000002C8 00000308  7F C8 F0 F8 */	nor r8, r30, r30
/* 000002CC 0000030C  80 A0 00 00 */	lwz r5, WaitingBits@sda21(r0)
/* 000002D0 00000310  7F A3 EB 78 */	mr r3, r29
/* 000002D4 00000314  80 80 00 00 */	lwz r4, CheckingBits@sda21(r0)
/* 000002D8 00000318  80 00 00 00 */	lwz r0, PendingBits@sda21(r0)
/* 000002DC 0000031C  7C C7 40 38 */	and r7, r6, r8
/* 000002E0 00000320  7C A6 40 38 */	and r6, r5, r8
/* 000002E4 00000324  90 E0 00 00 */	stw r7, EnabledBits@sda21(r0)
/* 000002E8 00000328  7C 85 40 38 */	and r5, r4, r8
/* 000002EC 0000032C  7C 00 40 38 */	and r0, r0, r8
/* 000002F0 00000330  90 C0 00 00 */	stw r6, WaitingBits@sda21(r0)
/* 000002F4 00000334  38 80 00 00 */	li r4, 0x0
/* 000002F8 00000338  90 A0 00 00 */	stw r5, CheckingBits@sda21(r0)
/* 000002FC 0000033C  90 00 00 00 */	stw r0, PendingBits@sda21(r0)
/* 00000300 00000340  48 00 00 01 */	bl OSSetWirelessID
/* 00000304 00000344  7F E3 FB 78 */	mr r3, r31
/* 00000308 00000348  48 00 00 01 */	bl OSRestoreInterrupts
.L_0000030C:
/* 0000030C 0000034C  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 00000310 00000350  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 00000314 00000354  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 00000318 00000358  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 0000031C 0000035C  38 21 00 28 */	addi r1, r1, 0x28
/* 00000320 00000360  7C 08 03 A6 */	mtlr r0
/* 00000324 00000364  4E 80 00 20 */	blr
.endfn PADOriginUpdateCallback

.fn PADProbeCallback, global
/* 00000328 00000368  7C 08 02 A6 */	mflr r0
/* 0000032C 0000036C  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000330 00000370  54 80 07 3F */	clrlwi. r0, r4, 28
/* 00000334 00000374  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 00000338 00000378  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 0000033C 0000037C  93 C1 00 28 */	stw r30, 0x28(r1)
/* 00000340 00000380  40 82 00 54 */	bne .L_00000394
/* 00000344 00000384  83 C0 00 00 */	lwz r30, ResettingChan@sda21(r0)
/* 00000348 00000388  3F E0 80 00 */	lis r31, 0x8000
/* 0000034C 0000038C  80 60 00 00 */	lwz r3, EnabledBits@sda21(r0)
/* 00000350 00000390  38 81 00 1C */	addi r4, r1, 0x1c
/* 00000354 00000394  7F E0 F4 30 */	srw r0, r31, r30
/* 00000358 00000398  7C 60 03 78 */	or r0, r3, r0
/* 0000035C 0000039C  90 00 00 00 */	stw r0, EnabledBits@sda21(r0)
/* 00000360 000003A0  7F C3 F3 78 */	mr r3, r30
/* 00000364 000003A4  48 00 00 01 */	bl SIGetResponse
/* 00000368 000003A8  80 00 00 00 */	lwz r0, AnalogMode@sda21(r0)
/* 0000036C 000003AC  38 7E 00 00 */	addi r3, r30, 0x0
/* 00000370 000003B0  64 04 00 40 */	oris r4, r0, 0x40
/* 00000374 000003B4  48 00 00 01 */	bl SISetCommand
/* 00000378 000003B8  80 60 00 00 */	lwz r3, EnabledBits@sda21(r0)
/* 0000037C 000003BC  48 00 00 01 */	bl SIEnablePolling
/* 00000380 000003C0  80 00 00 00 */	lwz r0, ResettingChan@sda21(r0)
/* 00000384 000003C4  80 60 00 00 */	lwz r3, WaitingBits@sda21(r0)
/* 00000388 000003C8  7F E0 04 30 */	srw r0, r31, r0
/* 0000038C 000003CC  7C 60 03 78 */	or r0, r3, r0
/* 00000390 000003D0  90 00 00 00 */	stw r0, WaitingBits@sda21(r0)
.L_00000394:
/* 00000394 000003D4  80 A0 00 00 */	lwz r5, ResettingBits@sda21(r0)
/* 00000398 000003D8  7C A0 00 34 */	cntlzw r0, r5
/* 0000039C 000003DC  90 00 00 00 */	stw r0, ResettingChan@sda21(r0)
/* 000003A0 000003E0  80 80 00 00 */	lwz r4, ResettingChan@sda21(r0)
/* 000003A4 000003E4  2C 04 00 20 */	cmpwi r4, 0x20
/* 000003A8 000003E8  41 82 00 40 */	beq .L_000003E8
/* 000003AC 000003EC  3C 00 80 00 */	lis r0, 0x8000
/* 000003B0 000003F0  7C 00 24 30 */	srw r0, r0, r4
/* 000003B4 000003F4  7C A0 00 78 */	andc r0, r5, r0
/* 000003B8 000003F8  1C 84 00 0C */	mulli r4, r4, 0xc
/* 000003BC 000003FC  90 00 00 00 */	stw r0, ResettingBits@sda21(r0)
/* 000003C0 00000400  3C 60 00 00 */	lis r3, Origin@ha
/* 000003C4 00000404  38 03 00 00 */	addi r0, r3, Origin@l
/* 000003C8 00000408  7C 60 22 14 */	add r3, r0, r4
/* 000003CC 0000040C  38 80 00 00 */	li r4, 0x0
/* 000003D0 00000410  38 A0 00 0C */	li r5, 0xc
/* 000003D4 00000414  48 00 00 01 */	bl memset
/* 000003D8 00000418  3C 80 00 00 */	lis r4, PADTypeAndStatusCallback@ha
/* 000003DC 0000041C  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 000003E0 00000420  38 84 00 00 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 000003E4 00000424  48 00 00 01 */	bl SIGetTypeAsync
.L_000003E8:
/* 000003E8 00000428  80 01 00 34 */	lwz r0, 0x34(r1)
/* 000003EC 0000042C  83 E1 00 2C */	lwz r31, 0x2c(r1)
/* 000003F0 00000430  83 C1 00 28 */	lwz r30, 0x28(r1)
/* 000003F4 00000434  38 21 00 30 */	addi r1, r1, 0x30
/* 000003F8 00000438  7C 08 03 A6 */	mtlr r0
/* 000003FC 0000043C  4E 80 00 20 */	blr
.endfn PADProbeCallback

.fn PADTypeAndStatusCallback, global
/* 00000400 00000440  7C 08 02 A6 */	mflr r0
/* 00000404 00000444  3C C0 00 00 */	lis r6, Type@ha
/* 00000408 00000448  90 01 00 04 */	stw r0, 0x4(r1)
/* 0000040C 0000044C  54 80 07 3F */	clrlwi. r0, r4, 28
/* 00000410 00000450  94 21 FF C0 */	stwu r1, -0x40(r1)
/* 00000414 00000454  93 E1 00 3C */	stw r31, 0x3c(r1)
/* 00000418 00000458  3F E0 80 00 */	lis r31, 0x8000
/* 0000041C 0000045C  93 C1 00 38 */	stw r30, 0x38(r1)
/* 00000420 00000460  3B C6 00 00 */	addi r30, r6, Type@l
/* 00000424 00000464  93 A1 00 34 */	stw r29, 0x34(r1)
/* 00000428 00000468  93 81 00 30 */	stw r28, 0x30(r1)
/* 0000042C 0000046C  83 A0 00 00 */	lwz r29, ResettingChan@sda21(r0)
/* 00000430 00000470  80 A0 00 00 */	lwz r5, RecalibrateBits@sda21(r0)
/* 00000434 00000474  7F FC EC 30 */	srw r28, r31, r29
/* 00000438 00000478  7C A3 E0 78 */	andc r3, r5, r28
/* 0000043C 0000047C  90 60 00 00 */	stw r3, RecalibrateBits@sda21(r0)
/* 00000440 00000480  7C A5 E0 38 */	and r5, r5, r28
/* 00000444 00000484  38 60 00 01 */	li r3, 0x1
/* 00000448 00000488  41 82 00 54 */	beq .L_0000049C
/* 0000044C 0000048C  80 80 00 00 */	lwz r4, ResettingBits@sda21(r0)
/* 00000450 00000490  7C 80 00 34 */	cntlzw r0, r4
/* 00000454 00000494  90 00 00 00 */	stw r0, ResettingChan@sda21(r0)
/* 00000458 00000498  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 0000045C 0000049C  2C 03 00 20 */	cmpwi r3, 0x20
/* 00000460 000004A0  41 82 02 AC */	beq .L_0000070C
/* 00000464 000004A4  1C 03 00 0C */	mulli r0, r3, 0xc
/* 00000468 000004A8  7F E3 1C 30 */	srw r3, r31, r3
/* 0000046C 000004AC  7C 84 18 78 */	andc r4, r4, r3
/* 00000470 000004B0  7C 7E 02 14 */	add r3, r30, r0
/* 00000474 000004B4  90 80 00 00 */	stw r4, ResettingBits@sda21(r0)
/* 00000478 000004B8  38 80 00 00 */	li r4, 0x0
/* 0000047C 000004BC  38 A0 00 0C */	li r5, 0xc
/* 00000480 000004C0  38 63 00 10 */	addi r3, r3, 0x10
/* 00000484 000004C4  48 00 00 01 */	bl memset
/* 00000488 000004C8  3C 80 00 00 */	lis r4, PADTypeAndStatusCallback@ha
/* 0000048C 000004CC  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 00000490 000004D0  38 84 00 00 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 00000494 000004D4  48 00 00 01 */	bl SIGetTypeAsync
/* 00000498 000004D8  48 00 02 74 */	b .L_0000070C
.L_0000049C:
/* 0000049C 000004DC  54 86 00 2E */	clrrwi r6, r4, 8
/* 000004A0 000004E0  54 84 00 C8 */	rlwinm r4, r4, 0, 3, 4
/* 000004A4 000004E4  3C 04 F8 00 */	subis r0, r4, 0x800
/* 000004A8 000004E8  57 A4 10 3A */	slwi r4, r29, 2
/* 000004AC 000004EC  28 00 00 00 */	cmplwi r0, 0x0
/* 000004B0 000004F0  7C DE 21 2E */	stwx r6, r30, r4
/* 000004B4 000004F4  40 82 00 0C */	bne .L_000004C0
/* 000004B8 000004F8  54 C0 01 CF */	rlwinm. r0, r6, 0, 7, 7
/* 000004BC 000004FC  40 82 00 58 */	bne .L_00000514
.L_000004C0:
/* 000004C0 00000500  80 A0 00 00 */	lwz r5, ResettingBits@sda21(r0)
/* 000004C4 00000504  7C A0 00 34 */	cntlzw r0, r5
/* 000004C8 00000508  90 00 00 00 */	stw r0, ResettingChan@sda21(r0)
/* 000004CC 0000050C  80 80 00 00 */	lwz r4, ResettingChan@sda21(r0)
/* 000004D0 00000510  2C 04 00 20 */	cmpwi r4, 0x20
/* 000004D4 00000514  41 82 02 38 */	beq .L_0000070C
/* 000004D8 00000518  3C 60 80 00 */	lis r3, 0x8000
/* 000004DC 0000051C  1C 04 00 0C */	mulli r0, r4, 0xc
/* 000004E0 00000520  7C 63 24 30 */	srw r3, r3, r4
/* 000004E4 00000524  7C A4 18 78 */	andc r4, r5, r3
/* 000004E8 00000528  7C 7E 02 14 */	add r3, r30, r0
/* 000004EC 0000052C  90 80 00 00 */	stw r4, ResettingBits@sda21(r0)
/* 000004F0 00000530  38 80 00 00 */	li r4, 0x0
/* 000004F4 00000534  38 A0 00 0C */	li r5, 0xc
/* 000004F8 00000538  38 63 00 10 */	addi r3, r3, 0x10
/* 000004FC 0000053C  48 00 00 01 */	bl memset
/* 00000500 00000540  3C 80 00 00 */	lis r4, PADTypeAndStatusCallback@ha
/* 00000504 00000544  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 00000508 00000548  38 84 00 00 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 0000050C 0000054C  48 00 00 01 */	bl SIGetTypeAsync
/* 00000510 00000550  48 00 01 FC */	b .L_0000070C
.L_00000514:
/* 00000514 00000554  80 00 00 00 */	lwz r0, Spec@sda21(r0)
/* 00000518 00000558  28 00 00 02 */	cmplwi r0, 0x2
/* 0000051C 0000055C  40 80 00 84 */	bge .L_000005A0
/* 00000520 00000560  80 00 00 00 */	lwz r0, EnabledBits@sda21(r0)
/* 00000524 00000564  38 7D 00 00 */	addi r3, r29, 0x0
/* 00000528 00000568  38 81 00 1C */	addi r4, r1, 0x1c
/* 0000052C 0000056C  7C 00 E3 78 */	or r0, r0, r28
/* 00000530 00000570  90 00 00 00 */	stw r0, EnabledBits@sda21(r0)
/* 00000534 00000574  48 00 00 01 */	bl SIGetResponse
/* 00000538 00000578  80 00 00 00 */	lwz r0, AnalogMode@sda21(r0)
/* 0000053C 0000057C  38 7D 00 00 */	addi r3, r29, 0x0
/* 00000540 00000580  64 04 00 40 */	oris r4, r0, 0x40
/* 00000544 00000584  48 00 00 01 */	bl SISetCommand
/* 00000548 00000588  80 60 00 00 */	lwz r3, EnabledBits@sda21(r0)
/* 0000054C 0000058C  48 00 00 01 */	bl SIEnablePolling
/* 00000550 00000590  80 80 00 00 */	lwz r4, ResettingBits@sda21(r0)
/* 00000554 00000594  7C 80 00 34 */	cntlzw r0, r4
/* 00000558 00000598  90 00 00 00 */	stw r0, ResettingChan@sda21(r0)
/* 0000055C 0000059C  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 00000560 000005A0  2C 03 00 20 */	cmpwi r3, 0x20
/* 00000564 000005A4  41 82 01 A8 */	beq .L_0000070C
/* 00000568 000005A8  1C 03 00 0C */	mulli r0, r3, 0xc
/* 0000056C 000005AC  7F E3 1C 30 */	srw r3, r31, r3
/* 00000570 000005B0  7C 84 18 78 */	andc r4, r4, r3
/* 00000574 000005B4  7C 7E 02 14 */	add r3, r30, r0
/* 00000578 000005B8  90 80 00 00 */	stw r4, ResettingBits@sda21(r0)
/* 0000057C 000005BC  38 80 00 00 */	li r4, 0x0
/* 00000580 000005C0  38 A0 00 0C */	li r5, 0xc
/* 00000584 000005C4  38 63 00 10 */	addi r3, r3, 0x10
/* 00000588 000005C8  48 00 00 01 */	bl memset
/* 0000058C 000005CC  3C 80 00 00 */	lis r4, PADTypeAndStatusCallback@ha
/* 00000590 000005D0  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 00000594 000005D4  38 84 00 00 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 00000598 000005D8  48 00 00 01 */	bl SIGetTypeAsync
/* 0000059C 000005DC  48 00 01 70 */	b .L_0000070C
.L_000005A0:
/* 000005A0 000005E0  54 C0 00 01 */	clrrwi. r0, r6, 31
/* 000005A4 000005E4  41 82 00 0C */	beq .L_000005B0
/* 000005A8 000005E8  54 C0 01 4B */	rlwinm. r0, r6, 0, 5, 5
/* 000005AC 000005EC  41 82 00 74 */	beq .L_00000620
.L_000005B0:
/* 000005B0 000005F0  28 05 00 00 */	cmplwi r5, 0x0
/* 000005B4 000005F4  41 82 00 38 */	beq .L_000005EC
/* 000005B8 000005F8  1C 1D 00 0C */	mulli r0, r29, 0xc
/* 000005BC 000005FC  3C 60 00 00 */	lis r3, PADOriginCallback@ha
/* 000005C0 00000600  7C DE 02 14 */	add r6, r30, r0
/* 000005C4 00000604  39 03 00 00 */	addi r8, r3, PADOriginCallback@l
/* 000005C8 00000608  38 7D 00 00 */	addi r3, r29, 0x0
/* 000005CC 0000060C  38 80 00 00 */	li r4, CmdCalibrate@sda21
/* 000005D0 00000610  38 A0 00 03 */	li r5, 0x3
/* 000005D4 00000614  38 E0 00 0A */	li r7, 0xa
/* 000005D8 00000618  39 40 00 00 */	li r10, 0x0
/* 000005DC 0000061C  39 20 00 00 */	li r9, 0x0
/* 000005E0 00000620  38 C6 00 10 */	addi r6, r6, 0x10
/* 000005E4 00000624  48 00 00 01 */	bl SITransfer
/* 000005E8 00000628  48 00 00 C0 */	b .L_000006A8
.L_000005EC:
/* 000005EC 0000062C  1C 1D 00 0C */	mulli r0, r29, 0xc
/* 000005F0 00000630  3C 60 00 00 */	lis r3, PADOriginCallback@ha
/* 000005F4 00000634  7C DE 02 14 */	add r6, r30, r0
/* 000005F8 00000638  39 03 00 00 */	addi r8, r3, PADOriginCallback@l
/* 000005FC 0000063C  38 7D 00 00 */	addi r3, r29, 0x0
/* 00000600 00000640  38 80 00 00 */	li r4, CmdReadOrigin@sda21
/* 00000604 00000644  38 A0 00 01 */	li r5, 0x1
/* 00000608 00000648  38 E0 00 0A */	li r7, 0xa
/* 0000060C 0000064C  39 40 00 00 */	li r10, 0x0
/* 00000610 00000650  39 20 00 00 */	li r9, 0x0
/* 00000614 00000654  38 C6 00 10 */	addi r6, r6, 0x10
/* 00000618 00000658  48 00 00 01 */	bl SITransfer
/* 0000061C 0000065C  48 00 00 8C */	b .L_000006A8
.L_00000620:
/* 00000620 00000660  54 C0 02 D7 */	rlwinm. r0, r6, 0, 11, 11
/* 00000624 00000664  41 82 00 84 */	beq .L_000006A8
/* 00000628 00000668  54 C0 03 19 */	rlwinm. r0, r6, 0, 12, 12
/* 0000062C 0000066C  40 82 00 7C */	bne .L_000006A8
/* 00000630 00000670  54 C0 03 5B */	rlwinm. r0, r6, 0, 13, 13
/* 00000634 00000674  40 82 00 74 */	bne .L_000006A8
/* 00000638 00000678  54 C0 00 43 */	rlwinm. r0, r6, 0, 1, 1
/* 0000063C 0000067C  41 82 00 38 */	beq .L_00000674
/* 00000640 00000680  1C 1D 00 0C */	mulli r0, r29, 0xc
/* 00000644 00000684  3C 60 00 00 */	lis r3, PADOriginCallback@ha
/* 00000648 00000688  7C DE 02 14 */	add r6, r30, r0
/* 0000064C 0000068C  39 03 00 00 */	addi r8, r3, PADOriginCallback@l
/* 00000650 00000690  38 7D 00 00 */	addi r3, r29, 0x0
/* 00000654 00000694  38 80 00 00 */	li r4, CmdReadOrigin@sda21
/* 00000658 00000698  38 A0 00 01 */	li r5, 0x1
/* 0000065C 0000069C  38 E0 00 0A */	li r7, 0xa
/* 00000660 000006A0  39 40 00 00 */	li r10, 0x0
/* 00000664 000006A4  39 20 00 00 */	li r9, 0x0
/* 00000668 000006A8  38 C6 00 10 */	addi r6, r6, 0x10
/* 0000066C 000006AC  48 00 00 01 */	bl SITransfer
/* 00000670 000006B0  48 00 00 38 */	b .L_000006A8
.L_00000674:
/* 00000674 000006B4  1C 1D 00 0C */	mulli r0, r29, 0xc
/* 00000678 000006B8  3C 60 00 00 */	lis r3, PADProbeCallback@ha
/* 0000067C 000006BC  7C 9E 22 14 */	add r4, r30, r4
/* 00000680 000006C0  7C DE 02 14 */	add r6, r30, r0
/* 00000684 000006C4  39 03 00 00 */	addi r8, r3, PADProbeCallback@l
/* 00000688 000006C8  38 7D 00 00 */	addi r3, r29, 0x0
/* 0000068C 000006CC  38 A0 00 03 */	li r5, 0x3
/* 00000690 000006D0  38 E0 00 08 */	li r7, 0x8
/* 00000694 000006D4  39 40 00 00 */	li r10, 0x0
/* 00000698 000006D8  39 20 00 00 */	li r9, 0x0
/* 0000069C 000006DC  38 84 00 40 */	addi r4, r4, 0x40
/* 000006A0 000006E0  38 C6 00 10 */	addi r6, r6, 0x10
/* 000006A4 000006E4  48 00 00 01 */	bl SITransfer
.L_000006A8:
/* 000006A8 000006E8  2C 03 00 00 */	cmpwi r3, 0x0
/* 000006AC 000006EC  40 82 00 60 */	bne .L_0000070C
/* 000006B0 000006F0  80 A0 00 00 */	lwz r5, ResettingBits@sda21(r0)
/* 000006B4 000006F4  80 60 00 00 */	lwz r3, PendingBits@sda21(r0)
/* 000006B8 000006F8  7C A0 00 34 */	cntlzw r0, r5
/* 000006BC 000006FC  90 00 00 00 */	stw r0, ResettingChan@sda21(r0)
/* 000006C0 00000700  7C 60 E3 78 */	or r0, r3, r28
/* 000006C4 00000704  80 80 00 00 */	lwz r4, ResettingChan@sda21(r0)
/* 000006C8 00000708  90 00 00 00 */	stw r0, PendingBits@sda21(r0)
/* 000006CC 0000070C  2C 04 00 20 */	cmpwi r4, 0x20
/* 000006D0 00000710  41 82 00 3C */	beq .L_0000070C
/* 000006D4 00000714  3C 60 80 00 */	lis r3, 0x8000
/* 000006D8 00000718  1C 04 00 0C */	mulli r0, r4, 0xc
/* 000006DC 0000071C  7C 63 24 30 */	srw r3, r3, r4
/* 000006E0 00000720  7C A4 18 78 */	andc r4, r5, r3
/* 000006E4 00000724  7C 7E 02 14 */	add r3, r30, r0
/* 000006E8 00000728  90 80 00 00 */	stw r4, ResettingBits@sda21(r0)
/* 000006EC 0000072C  38 80 00 00 */	li r4, 0x0
/* 000006F0 00000730  38 A0 00 0C */	li r5, 0xc
/* 000006F4 00000734  38 63 00 10 */	addi r3, r3, 0x10
/* 000006F8 00000738  48 00 00 01 */	bl memset
/* 000006FC 0000073C  3C 80 00 00 */	lis r4, PADTypeAndStatusCallback@ha
/* 00000700 00000740  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 00000704 00000744  38 84 00 00 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 00000708 00000748  48 00 00 01 */	bl SIGetTypeAsync
.L_0000070C:
/* 0000070C 0000074C  80 01 00 44 */	lwz r0, 0x44(r1)
/* 00000710 00000750  83 E1 00 3C */	lwz r31, 0x3c(r1)
/* 00000714 00000754  83 C1 00 38 */	lwz r30, 0x38(r1)
/* 00000718 00000758  83 A1 00 34 */	lwz r29, 0x34(r1)
/* 0000071C 0000075C  83 81 00 30 */	lwz r28, 0x30(r1)
/* 00000720 00000760  38 21 00 40 */	addi r1, r1, 0x40
/* 00000724 00000764  7C 08 03 A6 */	mtlr r0
/* 00000728 00000768  4E 80 00 20 */	blr
.endfn PADTypeAndStatusCallback

.fn PADReceiveCheckCallback, global
/* 0000072C 0000076C  7C 08 02 A6 */	mflr r0
/* 00000730 00000770  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000734 00000774  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 00000738 00000778  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 0000073C 0000077C  7C 7F 1B 78 */	mr r31, r3
/* 00000740 00000780  3C 60 80 00 */	lis r3, 0x8000
/* 00000744 00000784  93 C1 00 18 */	stw r30, 0x18(r1)
/* 00000748 00000788  93 A1 00 14 */	stw r29, 0x14(r1)
/* 0000074C 0000078C  7C 7D FC 30 */	srw r29, r3, r31
/* 00000750 00000790  80 00 00 00 */	lwz r0, EnabledBits@sda21(r0)
/* 00000754 00000794  7C 00 E8 39 */	and. r0, r0, r29
/* 00000758 00000798  41 82 00 EC */	beq .L_00000844
/* 0000075C 0000079C  80 A0 00 00 */	lwz r5, WaitingBits@sda21(r0)
/* 00000760 000007A0  7F A6 E8 F8 */	nor r6, r29, r29
/* 00000764 000007A4  80 60 00 00 */	lwz r3, CheckingBits@sda21(r0)
/* 00000768 000007A8  54 80 07 3F */	clrlwi. r0, r4, 28
/* 0000076C 000007AC  7C A5 30 38 */	and r5, r5, r6
/* 00000770 000007B0  7C 63 30 38 */	and r3, r3, r6
/* 00000774 000007B4  90 A0 00 00 */	stw r5, WaitingBits@sda21(r0)
/* 00000778 000007B8  90 60 00 00 */	stw r3, CheckingBits@sda21(r0)
/* 0000077C 000007BC  54 83 00 2E */	clrrwi r3, r4, 8
/* 00000780 000007C0  40 82 00 6C */	bne .L_000007EC
/* 00000784 000007C4  54 60 00 01 */	clrrwi. r0, r3, 31
/* 00000788 000007C8  41 82 00 64 */	beq .L_000007EC
/* 0000078C 000007CC  54 60 02 D7 */	rlwinm. r0, r3, 0, 11, 11
/* 00000790 000007D0  41 82 00 5C */	beq .L_000007EC
/* 00000794 000007D4  54 60 00 43 */	rlwinm. r0, r3, 0, 1, 1
/* 00000798 000007D8  41 82 00 54 */	beq .L_000007EC
/* 0000079C 000007DC  54 60 01 4B */	rlwinm. r0, r3, 0, 5, 5
/* 000007A0 000007E0  40 82 00 4C */	bne .L_000007EC
/* 000007A4 000007E4  54 60 03 19 */	rlwinm. r0, r3, 0, 12, 12
/* 000007A8 000007E8  40 82 00 44 */	bne .L_000007EC
/* 000007AC 000007EC  54 60 03 5B */	rlwinm. r0, r3, 0, 13, 13
/* 000007B0 000007F0  40 82 00 3C */	bne .L_000007EC
/* 000007B4 000007F4  1C 9F 00 0C */	mulli r4, r31, 0xc
/* 000007B8 000007F8  3C 60 00 00 */	lis r3, Origin@ha
/* 000007BC 000007FC  38 03 00 00 */	addi r0, r3, Origin@l
/* 000007C0 00000800  3C 60 00 00 */	lis r3, PADOriginUpdateCallback@ha
/* 000007C4 00000804  7C C0 22 14 */	add r6, r0, r4
/* 000007C8 00000808  39 03 00 00 */	addi r8, r3, PADOriginUpdateCallback@l
/* 000007CC 0000080C  38 7F 00 00 */	addi r3, r31, 0x0
/* 000007D0 00000810  38 80 00 00 */	li r4, CmdReadOrigin@sda21
/* 000007D4 00000814  38 A0 00 01 */	li r5, 0x1
/* 000007D8 00000818  38 E0 00 0A */	li r7, 0xa
/* 000007DC 0000081C  39 40 00 00 */	li r10, 0x0
/* 000007E0 00000820  39 20 00 00 */	li r9, 0x0
/* 000007E4 00000824  48 00 00 01 */	bl SITransfer
/* 000007E8 00000828  48 00 00 5C */	b .L_00000844
.L_000007EC:
/* 000007EC 0000082C  48 00 00 01 */	bl OSDisableInterrupts
/* 000007F0 00000830  3B C3 00 00 */	addi r30, r3, 0x0
/* 000007F4 00000834  38 7D 00 00 */	addi r3, r29, 0x0
/* 000007F8 00000838  48 00 00 01 */	bl SIDisablePolling
/* 000007FC 0000083C  80 C0 00 00 */	lwz r6, EnabledBits@sda21(r0)
/* 00000800 00000840  7F A8 E8 F8 */	nor r8, r29, r29
/* 00000804 00000844  80 A0 00 00 */	lwz r5, WaitingBits@sda21(r0)
/* 00000808 00000848  7F E3 FB 78 */	mr r3, r31
/* 0000080C 0000084C  80 80 00 00 */	lwz r4, CheckingBits@sda21(r0)
/* 00000810 00000850  80 00 00 00 */	lwz r0, PendingBits@sda21(r0)
/* 00000814 00000854  7C C7 40 38 */	and r7, r6, r8
/* 00000818 00000858  7C A6 40 38 */	and r6, r5, r8
/* 0000081C 0000085C  90 E0 00 00 */	stw r7, EnabledBits@sda21(r0)
/* 00000820 00000860  7C 85 40 38 */	and r5, r4, r8
/* 00000824 00000864  7C 00 40 38 */	and r0, r0, r8
/* 00000828 00000868  90 C0 00 00 */	stw r6, WaitingBits@sda21(r0)
/* 0000082C 0000086C  38 80 00 00 */	li r4, 0x0
/* 00000830 00000870  90 A0 00 00 */	stw r5, CheckingBits@sda21(r0)
/* 00000834 00000874  90 00 00 00 */	stw r0, PendingBits@sda21(r0)
/* 00000838 00000878  48 00 00 01 */	bl OSSetWirelessID
/* 0000083C 0000087C  7F C3 F3 78 */	mr r3, r30
/* 00000840 00000880  48 00 00 01 */	bl OSRestoreInterrupts
.L_00000844:
/* 00000844 00000884  80 01 00 24 */	lwz r0, 0x24(r1)
/* 00000848 00000888  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 0000084C 0000088C  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 00000850 00000890  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 00000854 00000894  38 21 00 20 */	addi r1, r1, 0x20
/* 00000858 00000898  7C 08 03 A6 */	mtlr r0
/* 0000085C 0000089C  4E 80 00 20 */	blr
.endfn PADReceiveCheckCallback

.fn PADReset, global
/* 00000860 000008A0  7C 08 02 A6 */	mflr r0
/* 00000864 000008A4  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000868 000008A8  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 0000086C 000008AC  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000870 000008B0  93 C1 00 10 */	stw r30, 0x10(r1)
/* 00000874 000008B4  7C 7E 1B 78 */	mr r30, r3
/* 00000878 000008B8  48 00 00 01 */	bl OSDisableInterrupts
/* 0000087C 000008BC  80 80 00 00 */	lwz r4, PendingBits@sda21(r0)
/* 00000880 000008C0  38 E0 00 00 */	li r7, 0x0
/* 00000884 000008C4  80 A0 00 00 */	lwz r5, WaitingBits@sda21(r0)
/* 00000888 000008C8  3B E3 00 00 */	addi r31, r3, 0x0
/* 0000088C 000008CC  80 00 00 00 */	lwz r0, CheckingBits@sda21(r0)
/* 00000890 000008D0  7F DE 23 78 */	or r30, r30, r4
/* 00000894 000008D4  80 80 00 00 */	lwz r4, ResettingBits@sda21(r0)
/* 00000898 000008D8  7C A5 03 78 */	or r5, r5, r0
/* 0000089C 000008DC  80 00 00 00 */	lwz r0, Spec@sda21(r0)
/* 000008A0 000008E0  7F DE 28 78 */	andc r30, r30, r5
/* 000008A4 000008E4  80 A0 00 00 */	lwz r5, EnabledBits@sda21(r0)
/* 000008A8 000008E8  7C 86 F3 78 */	or r6, r4, r30
/* 000008AC 000008EC  90 E0 00 00 */	stw r7, PendingBits@sda21(r0)
/* 000008B0 000008F0  7C A4 F0 78 */	andc r4, r5, r30
/* 000008B4 000008F4  90 C0 00 00 */	stw r6, ResettingBits@sda21(r0)
/* 000008B8 000008F8  28 00 00 04 */	cmplwi r0, 0x4
/* 000008BC 000008FC  80 00 00 00 */	lwz r0, ResettingBits@sda21(r0)
/* 000008C0 00000900  90 80 00 00 */	stw r4, EnabledBits@sda21(r0)
/* 000008C4 00000904  7C 03 28 38 */	and r3, r0, r5
/* 000008C8 00000908  40 82 00 10 */	bne .L_000008D8
/* 000008CC 0000090C  80 00 00 00 */	lwz r0, RecalibrateBits@sda21(r0)
/* 000008D0 00000910  7C 00 F3 78 */	or r0, r0, r30
/* 000008D4 00000914  90 00 00 00 */	stw r0, RecalibrateBits@sda21(r0)
.L_000008D8:
/* 000008D8 00000918  48 00 00 01 */	bl SIDisablePolling
/* 000008DC 0000091C  80 00 00 00 */	lwz r0, ResettingChan@sda21(r0)
/* 000008E0 00000920  2C 00 00 20 */	cmpwi r0, 0x20
/* 000008E4 00000924  40 82 00 58 */	bne .L_0000093C
/* 000008E8 00000928  80 A0 00 00 */	lwz r5, ResettingBits@sda21(r0)
/* 000008EC 0000092C  7C A0 00 34 */	cntlzw r0, r5
/* 000008F0 00000930  90 00 00 00 */	stw r0, ResettingChan@sda21(r0)
/* 000008F4 00000934  80 80 00 00 */	lwz r4, ResettingChan@sda21(r0)
/* 000008F8 00000938  2C 04 00 20 */	cmpwi r4, 0x20
/* 000008FC 0000093C  41 82 00 40 */	beq .L_0000093C
/* 00000900 00000940  3C 00 80 00 */	lis r0, 0x8000
/* 00000904 00000944  7C 00 24 30 */	srw r0, r0, r4
/* 00000908 00000948  7C A0 00 78 */	andc r0, r5, r0
/* 0000090C 0000094C  1C 84 00 0C */	mulli r4, r4, 0xc
/* 00000910 00000950  90 00 00 00 */	stw r0, ResettingBits@sda21(r0)
/* 00000914 00000954  3C 60 00 00 */	lis r3, Origin@ha
/* 00000918 00000958  38 03 00 00 */	addi r0, r3, Origin@l
/* 0000091C 0000095C  7C 60 22 14 */	add r3, r0, r4
/* 00000920 00000960  38 80 00 00 */	li r4, 0x0
/* 00000924 00000964  38 A0 00 0C */	li r5, 0xc
/* 00000928 00000968  48 00 00 01 */	bl memset
/* 0000092C 0000096C  3C 80 00 00 */	lis r4, PADTypeAndStatusCallback@ha
/* 00000930 00000970  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 00000934 00000974  38 84 00 00 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 00000938 00000978  48 00 00 01 */	bl SIGetTypeAsync
.L_0000093C:
/* 0000093C 0000097C  7F E3 FB 78 */	mr r3, r31
/* 00000940 00000980  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000944 00000984  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00000948 00000988  38 60 00 01 */	li r3, 0x1
/* 0000094C 0000098C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000950 00000990  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 00000954 00000994  38 21 00 18 */	addi r1, r1, 0x18
/* 00000958 00000998  7C 08 03 A6 */	mtlr r0
/* 0000095C 0000099C  4E 80 00 20 */	blr
.endfn PADReset

.fn PADRecalibrate, global
/* 00000960 000009A0  7C 08 02 A6 */	mflr r0
/* 00000964 000009A4  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000968 000009A8  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 0000096C 000009AC  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00000970 000009B0  93 C1 00 10 */	stw r30, 0x10(r1)
/* 00000974 000009B4  7C 7E 1B 78 */	mr r30, r3
/* 00000978 000009B8  48 00 00 01 */	bl OSDisableInterrupts
/* 0000097C 000009BC  80 C0 00 00 */	lwz r6, PendingBits@sda21(r0)
/* 00000980 000009C0  38 E0 00 00 */	li r7, 0x0
/* 00000984 000009C4  80 A0 00 00 */	lwz r5, WaitingBits@sda21(r0)
/* 00000988 000009C8  3C 80 80 00 */	lis r4, 0x8000
/* 0000098C 000009CC  80 00 00 00 */	lwz r0, CheckingBits@sda21(r0)
/* 00000990 000009D0  7F DE 33 78 */	or r30, r30, r6
/* 00000994 000009D4  80 C0 00 00 */	lwz r6, ResettingBits@sda21(r0)
/* 00000998 000009D8  7C A5 03 78 */	or r5, r5, r0
/* 0000099C 000009DC  88 04 30 E3 */	lbz r0, 0x30e3(r4)
/* 000009A0 000009E0  7F DE 28 78 */	andc r30, r30, r5
/* 000009A4 000009E4  80 A0 00 00 */	lwz r5, EnabledBits@sda21(r0)
/* 000009A8 000009E8  7C C4 F3 78 */	or r4, r6, r30
/* 000009AC 000009EC  90 E0 00 00 */	stw r7, PendingBits@sda21(r0)
/* 000009B0 000009F0  54 00 06 73 */	rlwinm. r0, r0, 0, 25, 25
/* 000009B4 000009F4  90 80 00 00 */	stw r4, ResettingBits@sda21(r0)
/* 000009B8 000009F8  7C A4 F0 78 */	andc r4, r5, r30
/* 000009BC 000009FC  3B E3 00 00 */	addi r31, r3, 0x0
/* 000009C0 00000A00  80 C0 00 00 */	lwz r6, ResettingBits@sda21(r0)
/* 000009C4 00000A04  90 80 00 00 */	stw r4, EnabledBits@sda21(r0)
/* 000009C8 00000A08  7C C3 28 38 */	and r3, r6, r5
/* 000009CC 00000A0C  40 82 00 10 */	bne .L_000009DC
/* 000009D0 00000A10  80 00 00 00 */	lwz r0, RecalibrateBits@sda21(r0)
/* 000009D4 00000A14  7C 00 F3 78 */	or r0, r0, r30
/* 000009D8 00000A18  90 00 00 00 */	stw r0, RecalibrateBits@sda21(r0)
.L_000009DC:
/* 000009DC 00000A1C  48 00 00 01 */	bl SIDisablePolling
/* 000009E0 00000A20  80 00 00 00 */	lwz r0, ResettingChan@sda21(r0)
/* 000009E4 00000A24  2C 00 00 20 */	cmpwi r0, 0x20
/* 000009E8 00000A28  40 82 00 58 */	bne .L_00000A40
/* 000009EC 00000A2C  80 A0 00 00 */	lwz r5, ResettingBits@sda21(r0)
/* 000009F0 00000A30  7C A0 00 34 */	cntlzw r0, r5
/* 000009F4 00000A34  90 00 00 00 */	stw r0, ResettingChan@sda21(r0)
/* 000009F8 00000A38  80 80 00 00 */	lwz r4, ResettingChan@sda21(r0)
/* 000009FC 00000A3C  2C 04 00 20 */	cmpwi r4, 0x20
/* 00000A00 00000A40  41 82 00 40 */	beq .L_00000A40
/* 00000A04 00000A44  3C 00 80 00 */	lis r0, 0x8000
/* 00000A08 00000A48  7C 00 24 30 */	srw r0, r0, r4
/* 00000A0C 00000A4C  7C A0 00 78 */	andc r0, r5, r0
/* 00000A10 00000A50  1C 84 00 0C */	mulli r4, r4, 0xc
/* 00000A14 00000A54  90 00 00 00 */	stw r0, ResettingBits@sda21(r0)
/* 00000A18 00000A58  3C 60 00 00 */	lis r3, Origin@ha
/* 00000A1C 00000A5C  38 03 00 00 */	addi r0, r3, Origin@l
/* 00000A20 00000A60  7C 60 22 14 */	add r3, r0, r4
/* 00000A24 00000A64  38 80 00 00 */	li r4, 0x0
/* 00000A28 00000A68  38 A0 00 0C */	li r5, 0xc
/* 00000A2C 00000A6C  48 00 00 01 */	bl memset
/* 00000A30 00000A70  3C 80 00 00 */	lis r4, PADTypeAndStatusCallback@ha
/* 00000A34 00000A74  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 00000A38 00000A78  38 84 00 00 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 00000A3C 00000A7C  48 00 00 01 */	bl SIGetTypeAsync
.L_00000A40:
/* 00000A40 00000A80  7F E3 FB 78 */	mr r3, r31
/* 00000A44 00000A84  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000A48 00000A88  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00000A4C 00000A8C  38 60 00 01 */	li r3, 0x1
/* 00000A50 00000A90  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00000A54 00000A94  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 00000A58 00000A98  38 21 00 18 */	addi r1, r1, 0x18
/* 00000A5C 00000A9C  7C 08 03 A6 */	mtlr r0
/* 00000A60 00000AA0  4E 80 00 20 */	blr
.endfn PADRecalibrate

.fn PADInit, global
/* 00000A64 00000AA4  7C 08 02 A6 */	mflr r0
/* 00000A68 00000AA8  3C 60 00 00 */	lis r3, Type@ha
/* 00000A6C 00000AAC  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000A70 00000AB0  94 21 FF C8 */	stwu r1, -0x38(r1)
/* 00000A74 00000AB4  BF 21 00 1C */	stmw r25, 0x1c(r1)
/* 00000A78 00000AB8  3B E3 00 00 */	addi r31, r3, Type@l
/* 00000A7C 00000ABC  80 00 00 00 */	lwz r0, Initialized@sda21(r0)
/* 00000A80 00000AC0  2C 00 00 00 */	cmpwi r0, 0x0
/* 00000A84 00000AC4  41 82 00 0C */	beq .L_00000A90
/* 00000A88 00000AC8  38 60 00 01 */	li r3, 0x1
/* 00000A8C 00000ACC  48 00 01 D8 */	b .L_00000C64
.L_00000A90:
/* 00000A90 00000AD0  80 60 00 00 */	lwz r3, __PADSpec@sda21(r0)
/* 00000A94 00000AD4  28 03 00 00 */	cmplwi r3, 0x0
/* 00000A98 00000AD8  41 82 00 08 */	beq .L_00000AA0
/* 00000A9C 00000ADC  48 00 00 01 */	bl PADSetSpec
.L_00000AA0:
/* 00000AA0 00000AE0  80 00 00 00 */	lwz r0, __PADFixBits@sda21(r0)
/* 00000AA4 00000AE4  28 00 00 00 */	cmplwi r0, 0x0
/* 00000AA8 00000AE8  41 82 00 8C */	beq .L_00000B34
/* 00000AAC 00000AEC  48 00 00 01 */	bl OSGetTime
/* 00000AB0 00000AF0  3B 24 00 00 */	addi r25, r4, 0x0
/* 00000AB4 00000AF4  3B 43 00 00 */	addi r26, r3, 0x0
/* 00000AB8 00000AF8  38 A0 00 10 */	li r5, 0x10
/* 00000ABC 00000AFC  48 00 00 01 */	bl __shr2i
/* 00000AC0 00000B00  3C A0 00 01 */	lis r5, 0x1
/* 00000AC4 00000B04  3B 65 FF FF */	subi r27, r5, 0x1
/* 00000AC8 00000B08  3B 80 00 00 */	li r28, 0x0
/* 00000ACC 00000B0C  7C 86 D8 38 */	and r6, r4, r27
/* 00000AD0 00000B10  7F 24 D8 38 */	and r4, r25, r27
/* 00000AD4 00000B14  7C 65 E0 38 */	and r5, r3, r28
/* 00000AD8 00000B18  7F 40 E0 38 */	and r0, r26, r28
/* 00000ADC 00000B1C  7F A4 30 14 */	addc r29, r4, r6
/* 00000AE0 00000B20  38 7A 00 00 */	addi r3, r26, 0x0
/* 00000AE4 00000B24  38 99 00 00 */	addi r4, r25, 0x0
/* 00000AE8 00000B28  7F C0 29 14 */	adde r30, r0, r5
/* 00000AEC 00000B2C  38 A0 00 20 */	li r5, 0x20
/* 00000AF0 00000B30  48 00 00 01 */	bl __shr2i
/* 00000AF4 00000B34  7C 84 D8 38 */	and r4, r4, r27
/* 00000AF8 00000B38  7C 60 E0 38 */	and r0, r3, r28
/* 00000AFC 00000B3C  7F A4 E8 14 */	addc r29, r4, r29
/* 00000B00 00000B40  38 7A 00 00 */	addi r3, r26, 0x0
/* 00000B04 00000B44  38 99 00 00 */	addi r4, r25, 0x0
/* 00000B08 00000B48  7F C0 F1 14 */	adde r30, r0, r30
/* 00000B0C 00000B4C  38 A0 00 30 */	li r5, 0x30
/* 00000B10 00000B50  48 00 00 01 */	bl __shr2i
/* 00000B14 00000B54  7C 80 D8 38 */	and r0, r4, r27
/* 00000B18 00000B58  7C A0 E8 14 */	addc r5, r0, r29
/* 00000B1C 00000B5C  3C 00 F0 00 */	lis r0, 0xf000
/* 00000B20 00000B60  38 80 3F FF */	li r4, 0x3fff
/* 00000B24 00000B64  90 00 00 00 */	stw r0, RecalibrateBits@sda21(r0)
/* 00000B28 00000B68  7C A0 20 38 */	and r0, r5, r4
/* 00000B2C 00000B6C  3C 60 80 00 */	lis r3, 0x8000
/* 00000B30 00000B70  B0 03 30 E0 */	sth r0, 0x30e0(r3)
.L_00000B34:
/* 00000B34 00000B74  3C A0 80 00 */	lis r5, 0x8000
/* 00000B38 00000B78  A0 85 30 E0 */	lhz r4, 0x30e0(r5)
/* 00000B3C 00000B7C  38 00 00 01 */	li r0, 0x1
/* 00000B40 00000B80  38 60 00 00 */	li r3, 0x0
/* 00000B44 00000B84  54 84 42 AE */	clrlslwi r4, r4, 18, 8
/* 00000B48 00000B88  64 84 4D 00 */	oris r4, r4, 0x4d00
/* 00000B4C 00000B8C  90 9F 00 40 */	stw r4, 0x40(r31)
/* 00000B50 00000B90  A0 85 30 E0 */	lhz r4, 0x30e0(r5)
/* 00000B54 00000B94  54 84 42 AE */	clrlslwi r4, r4, 18, 8
/* 00000B58 00000B98  64 84 4D 40 */	oris r4, r4, 0x4d40
/* 00000B5C 00000B9C  90 9F 00 44 */	stw r4, 0x44(r31)
/* 00000B60 00000BA0  A0 85 30 E0 */	lhz r4, 0x30e0(r5)
/* 00000B64 00000BA4  54 84 42 AE */	clrlslwi r4, r4, 18, 8
/* 00000B68 00000BA8  64 84 4D 80 */	oris r4, r4, 0x4d80
/* 00000B6C 00000BAC  90 9F 00 48 */	stw r4, 0x48(r31)
/* 00000B70 00000BB0  A0 85 30 E0 */	lhz r4, 0x30e0(r5)
/* 00000B74 00000BB4  54 84 42 AE */	clrlslwi r4, r4, 18, 8
/* 00000B78 00000BB8  64 84 4D C0 */	oris r4, r4, 0x4dc0
/* 00000B7C 00000BBC  90 9F 00 4C */	stw r4, 0x4c(r31)
/* 00000B80 00000BC0  90 00 00 00 */	stw r0, Initialized@sda21(r0)
/* 00000B84 00000BC4  48 00 00 01 */	bl SISetSamplingRate
/* 00000B88 00000BC8  3C 60 00 00 */	lis r3, ResetFunctionInfo@ha
/* 00000B8C 00000BCC  38 63 00 00 */	addi r3, r3, ResetFunctionInfo@l
/* 00000B90 00000BD0  48 00 00 01 */	bl OSRegisterResetFunction
/* 00000B94 00000BD4  3F 80 F0 00 */	lis r28, 0xf000
/* 00000B98 00000BD8  48 00 00 01 */	bl OSDisableInterrupts
/* 00000B9C 00000BDC  80 80 00 00 */	lwz r4, PendingBits@sda21(r0)
/* 00000BA0 00000BE0  38 E0 00 00 */	li r7, 0x0
/* 00000BA4 00000BE4  80 A0 00 00 */	lwz r5, WaitingBits@sda21(r0)
/* 00000BA8 00000BE8  3B 63 00 00 */	addi r27, r3, 0x0
/* 00000BAC 00000BEC  80 00 00 00 */	lwz r0, CheckingBits@sda21(r0)
/* 00000BB0 00000BF0  7F 9C 23 78 */	or r28, r28, r4
/* 00000BB4 00000BF4  80 80 00 00 */	lwz r4, ResettingBits@sda21(r0)
/* 00000BB8 00000BF8  7C A5 03 78 */	or r5, r5, r0
/* 00000BBC 00000BFC  80 00 00 00 */	lwz r0, Spec@sda21(r0)
/* 00000BC0 00000C00  7F 9C 28 78 */	andc r28, r28, r5
/* 00000BC4 00000C04  80 A0 00 00 */	lwz r5, EnabledBits@sda21(r0)
/* 00000BC8 00000C08  7C 86 E3 78 */	or r6, r4, r28
/* 00000BCC 00000C0C  90 E0 00 00 */	stw r7, PendingBits@sda21(r0)
/* 00000BD0 00000C10  7C A4 E0 78 */	andc r4, r5, r28
/* 00000BD4 00000C14  90 C0 00 00 */	stw r6, ResettingBits@sda21(r0)
/* 00000BD8 00000C18  28 00 00 04 */	cmplwi r0, 0x4
/* 00000BDC 00000C1C  80 00 00 00 */	lwz r0, ResettingBits@sda21(r0)
/* 00000BE0 00000C20  90 80 00 00 */	stw r4, EnabledBits@sda21(r0)
/* 00000BE4 00000C24  7C 03 28 38 */	and r3, r0, r5
/* 00000BE8 00000C28  40 82 00 10 */	bne .L_00000BF8
/* 00000BEC 00000C2C  80 00 00 00 */	lwz r0, RecalibrateBits@sda21(r0)
/* 00000BF0 00000C30  7C 00 E3 78 */	or r0, r0, r28
/* 00000BF4 00000C34  90 00 00 00 */	stw r0, RecalibrateBits@sda21(r0)
.L_00000BF8:
/* 00000BF8 00000C38  48 00 00 01 */	bl SIDisablePolling
/* 00000BFC 00000C3C  80 00 00 00 */	lwz r0, ResettingChan@sda21(r0)
/* 00000C00 00000C40  2C 00 00 20 */	cmpwi r0, 0x20
/* 00000C04 00000C44  40 82 00 54 */	bne .L_00000C58
/* 00000C08 00000C48  80 A0 00 00 */	lwz r5, ResettingBits@sda21(r0)
/* 00000C0C 00000C4C  7C A0 00 34 */	cntlzw r0, r5
/* 00000C10 00000C50  90 00 00 00 */	stw r0, ResettingChan@sda21(r0)
/* 00000C14 00000C54  80 80 00 00 */	lwz r4, ResettingChan@sda21(r0)
/* 00000C18 00000C58  2C 04 00 20 */	cmpwi r4, 0x20
/* 00000C1C 00000C5C  41 82 00 3C */	beq .L_00000C58
/* 00000C20 00000C60  3C 60 80 00 */	lis r3, 0x8000
/* 00000C24 00000C64  1C 04 00 0C */	mulli r0, r4, 0xc
/* 00000C28 00000C68  7C 63 24 30 */	srw r3, r3, r4
/* 00000C2C 00000C6C  7C A4 18 78 */	andc r4, r5, r3
/* 00000C30 00000C70  7C 7F 02 14 */	add r3, r31, r0
/* 00000C34 00000C74  90 80 00 00 */	stw r4, ResettingBits@sda21(r0)
/* 00000C38 00000C78  38 80 00 00 */	li r4, 0x0
/* 00000C3C 00000C7C  38 A0 00 0C */	li r5, 0xc
/* 00000C40 00000C80  38 63 00 10 */	addi r3, r3, 0x10
/* 00000C44 00000C84  48 00 00 01 */	bl memset
/* 00000C48 00000C88  3C 80 00 00 */	lis r4, PADTypeAndStatusCallback@ha
/* 00000C4C 00000C8C  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 00000C50 00000C90  38 84 00 00 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 00000C54 00000C94  48 00 00 01 */	bl SIGetTypeAsync
.L_00000C58:
/* 00000C58 00000C98  7F 63 DB 78 */	mr r3, r27
/* 00000C5C 00000C9C  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000C60 00000CA0  38 60 00 01 */	li r3, 0x1
.L_00000C64:
/* 00000C64 00000CA4  BB 21 00 1C */	lmw r25, 0x1c(r1)
/* 00000C68 00000CA8  80 01 00 3C */	lwz r0, 0x3c(r1)
/* 00000C6C 00000CAC  38 21 00 38 */	addi r1, r1, 0x38
/* 00000C70 00000CB0  7C 08 03 A6 */	mtlr r0
/* 00000C74 00000CB4  4E 80 00 20 */	blr
.endfn PADInit

.fn PADRead, global
/* 00000C78 00000CB8  7C 08 02 A6 */	mflr r0
/* 00000C7C 00000CBC  90 01 00 04 */	stw r0, 0x4(r1)
/* 00000C80 00000CC0  94 21 FF B0 */	stwu r1, -0x50(r1)
/* 00000C84 00000CC4  BE 81 00 20 */	stmw r20, 0x20(r1)
/* 00000C88 00000CC8  7C 7F 1B 78 */	mr r31, r3
/* 00000C8C 00000CCC  48 00 00 01 */	bl OSDisableInterrupts
/* 00000C90 00000CD0  3A A0 00 00 */	li r21, 0x0
/* 00000C94 00000CD4  1C 15 00 0C */	mulli r0, r21, 0xc
/* 00000C98 00000CD8  3C 80 00 00 */	lis r4, Origin@ha
/* 00000C9C 00000CDC  3B 44 00 00 */	addi r26, r4, Origin@l
/* 00000CA0 00000CE0  3C 80 00 00 */	lis r4, PADOriginUpdateCallback@ha
/* 00000CA4 00000CE4  3C A0 00 00 */	lis r5, PADReceiveCheckCallback@ha
/* 00000CA8 00000CE8  3C C0 00 00 */	lis r6, PADTypeAndStatusCallback@ha
/* 00000CAC 00000CEC  7F 1A 02 14 */	add r24, r26, r0
/* 00000CB0 00000CF0  3A C3 00 00 */	addi r22, r3, 0x0
/* 00000CB4 00000CF4  3B C4 00 00 */	addi r30, r4, PADOriginUpdateCallback@l
/* 00000CB8 00000CF8  3B A5 00 00 */	addi r29, r5, PADReceiveCheckCallback@l
/* 00000CBC 00000CFC  3B 86 00 00 */	addi r28, r6, PADTypeAndStatusCallback@l
/* 00000CC0 00000D00  3A 80 00 00 */	li r20, 0x0
/* 00000CC4 00000D04  3F 60 80 00 */	lis r27, 0x8000
.L_00000CC8:
/* 00000CC8 00000D08  80 00 00 00 */	lwz r0, PendingBits@sda21(r0)
/* 00000CCC 00000D0C  7F 77 AC 30 */	srw r23, r27, r21
/* 00000CD0 00000D10  7C 00 B8 39 */	and. r0, r0, r23
/* 00000CD4 00000D14  41 82 00 D8 */	beq .L_00000DAC
/* 00000CD8 00000D18  48 00 00 01 */	bl OSDisableInterrupts
/* 00000CDC 00000D1C  80 80 00 00 */	lwz r4, WaitingBits@sda21(r0)
/* 00000CE0 00000D20  38 C0 00 00 */	li r6, 0x0
/* 00000CE4 00000D24  80 00 00 00 */	lwz r0, CheckingBits@sda21(r0)
/* 00000CE8 00000D28  7C 79 1B 78 */	mr r25, r3
/* 00000CEC 00000D2C  80 A0 00 00 */	lwz r5, PendingBits@sda21(r0)
/* 00000CF0 00000D30  7C 84 03 78 */	or r4, r4, r0
/* 00000CF4 00000D34  80 00 00 00 */	lwz r0, ResettingBits@sda21(r0)
/* 00000CF8 00000D38  7C A7 20 78 */	andc r7, r5, r4
/* 00000CFC 00000D3C  80 A0 00 00 */	lwz r5, EnabledBits@sda21(r0)
/* 00000D00 00000D40  7C 04 3B 78 */	or r4, r0, r7
/* 00000D04 00000D44  80 00 00 00 */	lwz r0, Spec@sda21(r0)
/* 00000D08 00000D48  90 80 00 00 */	stw r4, ResettingBits@sda21(r0)
/* 00000D0C 00000D4C  7C A4 38 78 */	andc r4, r5, r7
/* 00000D10 00000D50  28 00 00 04 */	cmplwi r0, 0x4
/* 00000D14 00000D54  80 00 00 00 */	lwz r0, ResettingBits@sda21(r0)
/* 00000D18 00000D58  90 C0 00 00 */	stw r6, PendingBits@sda21(r0)
/* 00000D1C 00000D5C  7C 03 28 38 */	and r3, r0, r5
/* 00000D20 00000D60  90 80 00 00 */	stw r4, EnabledBits@sda21(r0)
/* 00000D24 00000D64  40 82 00 10 */	bne .L_00000D34
/* 00000D28 00000D68  80 00 00 00 */	lwz r0, RecalibrateBits@sda21(r0)
/* 00000D2C 00000D6C  7C 00 3B 78 */	or r0, r0, r7
/* 00000D30 00000D70  90 00 00 00 */	stw r0, RecalibrateBits@sda21(r0)
.L_00000D34:
/* 00000D34 00000D74  48 00 00 01 */	bl SIDisablePolling
/* 00000D38 00000D78  80 00 00 00 */	lwz r0, ResettingChan@sda21(r0)
/* 00000D3C 00000D7C  2C 00 00 20 */	cmpwi r0, 0x20
/* 00000D40 00000D80  40 82 00 48 */	bne .L_00000D88
/* 00000D44 00000D84  80 80 00 00 */	lwz r4, ResettingBits@sda21(r0)
/* 00000D48 00000D88  7C 80 00 34 */	cntlzw r0, r4
/* 00000D4C 00000D8C  90 00 00 00 */	stw r0, ResettingChan@sda21(r0)
/* 00000D50 00000D90  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 00000D54 00000D94  2C 03 00 20 */	cmpwi r3, 0x20
/* 00000D58 00000D98  41 82 00 30 */	beq .L_00000D88
/* 00000D5C 00000D9C  1C 03 00 0C */	mulli r0, r3, 0xc
/* 00000D60 00000DA0  7F 63 1C 30 */	srw r3, r27, r3
/* 00000D64 00000DA4  7C 84 18 78 */	andc r4, r4, r3
/* 00000D68 00000DA8  90 80 00 00 */	stw r4, ResettingBits@sda21(r0)
/* 00000D6C 00000DAC  7C 7A 02 14 */	add r3, r26, r0
/* 00000D70 00000DB0  38 80 00 00 */	li r4, 0x0
/* 00000D74 00000DB4  38 A0 00 0C */	li r5, 0xc
/* 00000D78 00000DB8  48 00 00 01 */	bl memset
/* 00000D7C 00000DBC  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 00000D80 00000DC0  7F 84 E3 78 */	mr r4, r28
/* 00000D84 00000DC4  48 00 00 01 */	bl SIGetTypeAsync
.L_00000D88:
/* 00000D88 00000DC8  7F 23 CB 78 */	mr r3, r25
/* 00000D8C 00000DCC  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000D90 00000DD0  38 00 FF FE */	li r0, -0x2
/* 00000D94 00000DD4  98 1F 00 0A */	stb r0, 0xa(r31)
/* 00000D98 00000DD8  38 7F 00 00 */	addi r3, r31, 0x0
/* 00000D9C 00000DDC  38 80 00 00 */	li r4, 0x0
/* 00000DA0 00000DE0  38 A0 00 0A */	li r5, 0xa
/* 00000DA4 00000DE4  48 00 00 01 */	bl memset
/* 00000DA8 00000DE8  48 00 02 48 */	b .L_00000FF0
.L_00000DAC:
/* 00000DAC 00000DEC  80 00 00 00 */	lwz r0, ResettingBits@sda21(r0)
/* 00000DB0 00000DF0  7C 00 B8 39 */	and. r0, r0, r23
/* 00000DB4 00000DF4  40 82 00 10 */	bne .L_00000DC4
/* 00000DB8 00000DF8  80 00 00 00 */	lwz r0, ResettingChan@sda21(r0)
/* 00000DBC 00000DFC  7C 00 A8 00 */	cmpw r0, r21
/* 00000DC0 00000E00  40 82 00 20 */	bne .L_00000DE0
.L_00000DC4:
/* 00000DC4 00000E04  38 00 FF FE */	li r0, -0x2
/* 00000DC8 00000E08  98 1F 00 0A */	stb r0, 0xa(r31)
/* 00000DCC 00000E0C  38 7F 00 00 */	addi r3, r31, 0x0
/* 00000DD0 00000E10  38 80 00 00 */	li r4, 0x0
/* 00000DD4 00000E14  38 A0 00 0A */	li r5, 0xa
/* 00000DD8 00000E18  48 00 00 01 */	bl memset
/* 00000DDC 00000E1C  48 00 02 14 */	b .L_00000FF0
.L_00000DE0:
/* 00000DE0 00000E20  80 00 00 00 */	lwz r0, EnabledBits@sda21(r0)
/* 00000DE4 00000E24  7C 00 B8 39 */	and. r0, r0, r23
/* 00000DE8 00000E28  40 82 00 20 */	bne .L_00000E08
/* 00000DEC 00000E2C  38 00 FF FF */	li r0, -0x1
/* 00000DF0 00000E30  98 1F 00 0A */	stb r0, 0xa(r31)
/* 00000DF4 00000E34  38 7F 00 00 */	addi r3, r31, 0x0
/* 00000DF8 00000E38  38 80 00 00 */	li r4, 0x0
/* 00000DFC 00000E3C  38 A0 00 0A */	li r5, 0xa
/* 00000E00 00000E40  48 00 00 01 */	bl memset
/* 00000E04 00000E44  48 00 01 EC */	b .L_00000FF0
.L_00000E08:
/* 00000E08 00000E48  7E A3 AB 78 */	mr r3, r21
/* 00000E0C 00000E4C  48 00 00 01 */	bl SIIsChanBusy
/* 00000E10 00000E50  2C 03 00 00 */	cmpwi r3, 0x0
/* 00000E14 00000E54  41 82 00 20 */	beq .L_00000E34
/* 00000E18 00000E58  38 00 FF FD */	li r0, -0x3
/* 00000E1C 00000E5C  98 1F 00 0A */	stb r0, 0xa(r31)
/* 00000E20 00000E60  38 7F 00 00 */	addi r3, r31, 0x0
/* 00000E24 00000E64  38 80 00 00 */	li r4, 0x0
/* 00000E28 00000E68  38 A0 00 0A */	li r5, 0xa
/* 00000E2C 00000E6C  48 00 00 01 */	bl memset
/* 00000E30 00000E70  48 00 01 C0 */	b .L_00000FF0
.L_00000E34:
/* 00000E34 00000E74  7E A3 AB 78 */	mr r3, r21
/* 00000E38 00000E78  48 00 00 01 */	bl SIGetStatus
/* 00000E3C 00000E7C  54 60 07 39 */	rlwinm. r0, r3, 0, 28, 28
/* 00000E40 00000E80  41 82 00 CC */	beq .L_00000F0C
/* 00000E44 00000E84  38 75 00 00 */	addi r3, r21, 0x0
/* 00000E48 00000E88  38 81 00 14 */	addi r4, r1, 0x14
/* 00000E4C 00000E8C  48 00 00 01 */	bl SIGetResponse
/* 00000E50 00000E90  80 00 00 00 */	lwz r0, WaitingBits@sda21(r0)
/* 00000E54 00000E94  7C 00 B8 39 */	and. r0, r0, r23
/* 00000E58 00000E98  41 82 00 40 */	beq .L_00000E98
/* 00000E5C 00000E9C  38 00 00 00 */	li r0, 0x0
/* 00000E60 00000EA0  98 1F 00 0A */	stb r0, 0xa(r31)
/* 00000E64 00000EA4  38 7F 00 00 */	addi r3, r31, 0x0
/* 00000E68 00000EA8  38 80 00 00 */	li r4, 0x0
/* 00000E6C 00000EAC  38 A0 00 0A */	li r5, 0xa
/* 00000E70 00000EB0  48 00 00 01 */	bl memset
/* 00000E74 00000EB4  80 60 00 00 */	lwz r3, CheckingBits@sda21(r0)
/* 00000E78 00000EB8  7C 60 B8 39 */	and. r0, r3, r23
/* 00000E7C 00000EBC  40 82 01 74 */	bne .L_00000FF0
/* 00000E80 00000EC0  7C 60 BB 78 */	or r0, r3, r23
/* 00000E84 00000EC4  90 00 00 00 */	stw r0, CheckingBits@sda21(r0)
/* 00000E88 00000EC8  38 75 00 00 */	addi r3, r21, 0x0
/* 00000E8C 00000ECC  38 9D 00 00 */	addi r4, r29, 0x0
/* 00000E90 00000ED0  48 00 00 01 */	bl SIGetTypeAsync
/* 00000E94 00000ED4  48 00 01 5C */	b .L_00000FF0
.L_00000E98:
/* 00000E98 00000ED8  48 00 00 01 */	bl OSDisableInterrupts
/* 00000E9C 00000EDC  3B 23 00 00 */	addi r25, r3, 0x0
/* 00000EA0 00000EE0  38 77 00 00 */	addi r3, r23, 0x0
/* 00000EA4 00000EE4  48 00 00 01 */	bl SIDisablePolling
/* 00000EA8 00000EE8  80 C0 00 00 */	lwz r6, EnabledBits@sda21(r0)
/* 00000EAC 00000EEC  7E E8 B8 F8 */	nor r8, r23, r23
/* 00000EB0 00000EF0  80 A0 00 00 */	lwz r5, WaitingBits@sda21(r0)
/* 00000EB4 00000EF4  7E A3 AB 78 */	mr r3, r21
/* 00000EB8 00000EF8  80 80 00 00 */	lwz r4, CheckingBits@sda21(r0)
/* 00000EBC 00000EFC  80 00 00 00 */	lwz r0, PendingBits@sda21(r0)
/* 00000EC0 00000F00  7C C7 40 38 */	and r7, r6, r8
/* 00000EC4 00000F04  7C A6 40 38 */	and r6, r5, r8
/* 00000EC8 00000F08  90 E0 00 00 */	stw r7, EnabledBits@sda21(r0)
/* 00000ECC 00000F0C  7C 85 40 38 */	and r5, r4, r8
/* 00000ED0 00000F10  7C 00 40 38 */	and r0, r0, r8
/* 00000ED4 00000F14  90 C0 00 00 */	stw r6, WaitingBits@sda21(r0)
/* 00000ED8 00000F18  38 80 00 00 */	li r4, 0x0
/* 00000EDC 00000F1C  90 A0 00 00 */	stw r5, CheckingBits@sda21(r0)
/* 00000EE0 00000F20  90 00 00 00 */	stw r0, PendingBits@sda21(r0)
/* 00000EE4 00000F24  48 00 00 01 */	bl OSSetWirelessID
/* 00000EE8 00000F28  7F 23 CB 78 */	mr r3, r25
/* 00000EEC 00000F2C  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000EF0 00000F30  38 00 FF FF */	li r0, -0x1
/* 00000EF4 00000F34  98 1F 00 0A */	stb r0, 0xa(r31)
/* 00000EF8 00000F38  38 7F 00 00 */	addi r3, r31, 0x0
/* 00000EFC 00000F3C  38 80 00 00 */	li r4, 0x0
/* 00000F00 00000F40  38 A0 00 0A */	li r5, 0xa
/* 00000F04 00000F44  48 00 00 01 */	bl memset
/* 00000F08 00000F48  48 00 00 E8 */	b .L_00000FF0
.L_00000F0C:
/* 00000F0C 00000F4C  7E A3 AB 78 */	mr r3, r21
/* 00000F10 00000F50  48 00 00 01 */	bl SIGetType
/* 00000F14 00000F54  54 60 00 85 */	rlwinm. r0, r3, 0, 2, 2
/* 00000F18 00000F58  40 82 00 08 */	bne .L_00000F20
/* 00000F1C 00000F5C  7E 94 BB 78 */	or r20, r20, r23
.L_00000F20:
/* 00000F20 00000F60  38 75 00 00 */	addi r3, r21, 0x0
/* 00000F24 00000F64  38 81 00 14 */	addi r4, r1, 0x14
/* 00000F28 00000F68  48 00 00 01 */	bl SIGetResponse
/* 00000F2C 00000F6C  2C 03 00 00 */	cmpwi r3, 0x0
/* 00000F30 00000F70  40 82 00 20 */	bne .L_00000F50
/* 00000F34 00000F74  38 00 FF FD */	li r0, -0x3
/* 00000F38 00000F78  98 1F 00 0A */	stb r0, 0xa(r31)
/* 00000F3C 00000F7C  38 7F 00 00 */	addi r3, r31, 0x0
/* 00000F40 00000F80  38 80 00 00 */	li r4, 0x0
/* 00000F44 00000F84  38 A0 00 0A */	li r5, 0xa
/* 00000F48 00000F88  48 00 00 01 */	bl memset
/* 00000F4C 00000F8C  48 00 00 A4 */	b .L_00000FF0
.L_00000F50:
/* 00000F50 00000F90  80 01 00 14 */	lwz r0, 0x14(r1)
/* 00000F54 00000F94  54 00 00 01 */	clrrwi. r0, r0, 31
/* 00000F58 00000F98  41 82 00 20 */	beq .L_00000F78
/* 00000F5C 00000F9C  38 00 FF FD */	li r0, -0x3
/* 00000F60 00000FA0  98 1F 00 0A */	stb r0, 0xa(r31)
/* 00000F64 00000FA4  38 7F 00 00 */	addi r3, r31, 0x0
/* 00000F68 00000FA8  38 80 00 00 */	li r4, 0x0
/* 00000F6C 00000FAC  38 A0 00 0A */	li r5, 0xa
/* 00000F70 00000FB0  48 00 00 01 */	bl memset
/* 00000F74 00000FB4  48 00 00 7C */	b .L_00000FF0
.L_00000F78:
/* 00000F78 00000FB8  81 80 00 00 */	lwz r12, MakeStatus@sda21(r0)
/* 00000F7C 00000FBC  38 75 00 00 */	addi r3, r21, 0x0
/* 00000F80 00000FC0  38 9F 00 00 */	addi r4, r31, 0x0
/* 00000F84 00000FC4  7D 88 03 A6 */	mtlr r12
/* 00000F88 00000FC8  38 A1 00 14 */	addi r5, r1, 0x14
/* 00000F8C 00000FCC  4E 80 00 21 */	blrl
/* 00000F90 00000FD0  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000F94 00000FD4  54 00 04 A5 */	rlwinm. r0, r0, 0, 18, 18
/* 00000F98 00000FD8  41 82 00 44 */	beq .L_00000FDC
/* 00000F9C 00000FDC  38 00 FF FD */	li r0, -0x3
/* 00000FA0 00000FE0  98 1F 00 0A */	stb r0, 0xa(r31)
/* 00000FA4 00000FE4  38 7F 00 00 */	addi r3, r31, 0x0
/* 00000FA8 00000FE8  38 80 00 00 */	li r4, 0x0
/* 00000FAC 00000FEC  38 A0 00 0A */	li r5, 0xa
/* 00000FB0 00000FF0  48 00 00 01 */	bl memset
/* 00000FB4 00000FF4  38 75 00 00 */	addi r3, r21, 0x0
/* 00000FB8 00000FF8  38 D8 00 00 */	addi r6, r24, 0x0
/* 00000FBC 00000FFC  39 1E 00 00 */	addi r8, r30, 0x0
/* 00000FC0 00001000  38 80 00 00 */	li r4, CmdReadOrigin@sda21
/* 00000FC4 00001004  38 A0 00 01 */	li r5, 0x1
/* 00000FC8 00001008  38 E0 00 0A */	li r7, 0xa
/* 00000FCC 0000100C  39 40 00 00 */	li r10, 0x0
/* 00000FD0 00001010  39 20 00 00 */	li r9, 0x0
/* 00000FD4 00001014  48 00 00 01 */	bl SITransfer
/* 00000FD8 00001018  48 00 00 18 */	b .L_00000FF0
.L_00000FDC:
/* 00000FDC 0000101C  38 00 00 00 */	li r0, 0x0
/* 00000FE0 00001020  98 1F 00 0A */	stb r0, 0xa(r31)
/* 00000FE4 00001024  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 00000FE8 00001028  54 00 06 6E */	rlwinm r0, r0, 0, 25, 23
/* 00000FEC 0000102C  B0 1F 00 00 */	sth r0, 0x0(r31)
.L_00000FF0:
/* 00000FF0 00001030  3A B5 00 01 */	addi r21, r21, 0x1
/* 00000FF4 00001034  2C 15 00 04 */	cmpwi r21, 0x4
/* 00000FF8 00001038  3B 18 00 0C */	addi r24, r24, 0xc
/* 00000FFC 0000103C  3B FF 00 0C */	addi r31, r31, 0xc
/* 00001000 00001040  41 80 FC C8 */	blt .L_00000CC8
/* 00001004 00001044  7E C3 B3 78 */	mr r3, r22
/* 00001008 00001048  48 00 00 01 */	bl OSRestoreInterrupts
/* 0000100C 0000104C  7E 83 A3 78 */	mr r3, r20
/* 00001010 00001050  BA 81 00 20 */	lmw r20, 0x20(r1)
/* 00001014 00001054  80 01 00 54 */	lwz r0, 0x54(r1)
/* 00001018 00001058  38 21 00 50 */	addi r1, r1, 0x50
/* 0000101C 0000105C  7C 08 03 A6 */	mtlr r0
/* 00001020 00001060  4E 80 00 20 */	blr
.endfn PADRead

.fn SISetSamplingRate, global
/* 00001024 00001064  7C 08 02 A6 */	mflr r0
/* 00001028 00001068  90 01 00 04 */	stw r0, 0x4(r1)
/* 0000102C 0000106C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 00001030 00001070  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 00001034 00001074  93 C1 00 18 */	stw r30, 0x18(r1)
/* 00001038 00001078  93 A1 00 14 */	stw r29, 0x14(r1)
/* 0000103C 0000107C  93 81 00 10 */	stw r28, 0x10(r1)
/* 00001040 00001080  3B 83 00 00 */	addi r28, r3, 0x0
/* 00001044 00001084  28 1C 00 0B */	cmplwi r28, 0xb
/* 00001048 00001088  3C 60 00 00 */	lis r3, ResetFunctionInfo@ha
/* 0000104C 0000108C  3B E3 00 00 */	addi r31, r3, ResetFunctionInfo@l
/* 00001050 00001090  40 81 00 08 */	ble .L_00001058
/* 00001054 00001094  3B 80 00 0B */	li r28, 0xb
.L_00001058:
/* 00001058 00001098  48 00 00 01 */	bl OSDisableInterrupts
/* 0000105C 0000109C  93 80 00 00 */	stw r28, SamplingRate@sda21(r0)
/* 00001060 000010A0  7C 7D 1B 78 */	mr r29, r3
/* 00001064 000010A4  48 00 00 01 */	bl VIGetTvFormat
/* 00001068 000010A8  2C 03 00 01 */	cmpwi r3, 0x1
/* 0000106C 000010AC  41 82 00 24 */	beq .L_00001090
/* 00001070 000010B0  40 80 00 10 */	bge .L_00001080
/* 00001074 000010B4  2C 03 00 00 */	cmpwi r3, 0x0
/* 00001078 000010B8  40 80 00 10 */	bge .L_00001088
/* 0000107C 000010BC  48 00 00 1C */	b .L_00001098
.L_00001080:
/* 00001080 000010C0  2C 03 00 03 */	cmpwi r3, 0x3
/* 00001084 000010C4  40 80 00 14 */	bge .L_00001098
.L_00001088:
/* 00001088 000010C8  3B DF 00 10 */	addi r30, r31, 0x10
/* 0000108C 000010CC  48 00 00 20 */	b .L_000010AC
.L_00001090:
/* 00001090 000010D0  3B DF 00 40 */	addi r30, r31, 0x40
/* 00001094 000010D4  48 00 00 18 */	b .L_000010AC
.L_00001098:
/* 00001098 000010D8  38 BF 00 70 */	addi r5, r31, 0x70
/* 0000109C 000010DC  4C C6 31 82 */	crclr cr1eq
/* 000010A0 000010E0  38 60 00 00 */	li r3, PAD_804D5C54@sda21
/* 000010A4 000010E4  38 80 04 96 */	li r4, 0x496
/* 000010A8 000010E8  48 00 00 01 */	bl OSPanic
.L_000010AC:
/* 000010AC 000010EC  3C 60 CC 00 */	lis r3, 0xcc00
/* 000010B0 000010F0  A0 03 20 6C */	lhz r0, 0x206c(r3)
/* 000010B4 000010F4  54 00 07 FF */	clrlwi. r0, r0, 31
/* 000010B8 000010F8  41 82 00 0C */	beq .L_000010C4
/* 000010BC 000010FC  38 A0 00 02 */	li r5, 0x2
/* 000010C0 00001100  48 00 00 08 */	b .L_000010C8
.L_000010C4:
/* 000010C4 00001104  38 A0 00 01 */	li r5, 0x1
.L_000010C8:
/* 000010C8 00001108  57 83 10 3A */	slwi r3, r28, 2
/* 000010CC 0000110C  7C 1E 1A 2E */	lhzx r0, r30, r3
/* 000010D0 00001110  7C 7E 1A 14 */	add r3, r30, r3
/* 000010D4 00001114  88 83 00 02 */	lbz r4, 0x2(r3)
/* 000010D8 00001118  7C 65 01 D6 */	mullw r3, r5, r0
/* 000010DC 0000111C  48 00 00 01 */	bl SISetXY
/* 000010E0 00001120  80 60 00 00 */	lwz r3, EnabledBits@sda21(r0)
/* 000010E4 00001124  48 00 00 01 */	bl SIEnablePolling
/* 000010E8 00001128  7F A3 EB 78 */	mr r3, r29
/* 000010EC 0000112C  48 00 00 01 */	bl OSRestoreInterrupts
/* 000010F0 00001130  80 01 00 24 */	lwz r0, 0x24(r1)
/* 000010F4 00001134  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 000010F8 00001138  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 000010FC 0000113C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 00001100 00001140  83 81 00 10 */	lwz r28, 0x10(r1)
/* 00001104 00001144  38 21 00 20 */	addi r1, r1, 0x20
/* 00001108 00001148  7C 08 03 A6 */	mtlr r0
/* 0000110C 0000114C  4E 80 00 20 */	blr
.endfn SISetSamplingRate

.fn SIRefreshSamplingRate, global
/* 00001110 00001150  7C 08 02 A6 */	mflr r0
/* 00001114 00001154  90 01 00 04 */	stw r0, 0x4(r1)
/* 00001118 00001158  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 0000111C 0000115C  80 60 00 00 */	lwz r3, SamplingRate@sda21(r0)
/* 00001120 00001160  48 00 00 01 */	bl SISetSamplingRate
/* 00001124 00001164  80 01 00 0C */	lwz r0, 0xc(r1)
/* 00001128 00001168  38 21 00 08 */	addi r1, r1, 0x8
/* 0000112C 0000116C  7C 08 03 A6 */	mtlr r0
/* 00001130 00001170  4E 80 00 20 */	blr
.endfn SIRefreshSamplingRate

.fn PADControlMotor, global
/* 00001134 00001174  7C 08 02 A6 */	mflr r0
/* 00001138 00001178  90 01 00 04 */	stw r0, 0x4(r1)
/* 0000113C 0000117C  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 00001140 00001180  93 E1 00 24 */	stw r31, 0x24(r1)
/* 00001144 00001184  93 C1 00 20 */	stw r30, 0x20(r1)
/* 00001148 00001188  3B C4 00 00 */	addi r30, r4, 0x0
/* 0000114C 0000118C  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 00001150 00001190  3B A3 00 00 */	addi r29, r3, 0x0
/* 00001154 00001194  48 00 00 01 */	bl OSDisableInterrupts
/* 00001158 00001198  3C 00 80 00 */	lis r0, 0x8000
/* 0000115C 0000119C  80 80 00 00 */	lwz r4, EnabledBits@sda21(r0)
/* 00001160 000011A0  7C 00 EC 30 */	srw r0, r0, r29
/* 00001164 000011A4  7C 80 00 39 */	and. r0, r4, r0
/* 00001168 000011A8  3B E3 00 00 */	addi r31, r3, 0x0
/* 0000116C 000011AC  41 82 00 48 */	beq .L_000011B4
/* 00001170 000011B0  7F A3 EB 78 */	mr r3, r29
/* 00001174 000011B4  48 00 00 01 */	bl SIGetType
/* 00001178 000011B8  54 60 00 85 */	rlwinm. r0, r3, 0, 2, 2
/* 0000117C 000011BC  40 82 00 38 */	bne .L_000011B4
/* 00001180 000011C0  80 00 00 00 */	lwz r0, Spec@sda21(r0)
/* 00001184 000011C4  28 00 00 02 */	cmplwi r0, 0x2
/* 00001188 000011C8  40 80 00 10 */	bge .L_00001198
/* 0000118C 000011CC  28 1E 00 02 */	cmplwi r30, 0x2
/* 00001190 000011D0  40 82 00 08 */	bne .L_00001198
/* 00001194 000011D4  3B C0 00 00 */	li r30, 0x0
.L_00001198:
/* 00001198 000011D8  80 80 00 00 */	lwz r4, AnalogMode@sda21(r0)
/* 0000119C 000011DC  57 C0 07 BE */	clrlwi r0, r30, 30
/* 000011A0 000011E0  38 7D 00 00 */	addi r3, r29, 0x0
/* 000011A4 000011E4  64 84 00 40 */	oris r4, r4, 0x40
/* 000011A8 000011E8  7C 84 03 78 */	or r4, r4, r0
/* 000011AC 000011EC  48 00 00 01 */	bl SISetCommand
/* 000011B0 000011F0  48 00 00 01 */	bl SITransferCommands
.L_000011B4:
/* 000011B4 000011F4  7F E3 FB 78 */	mr r3, r31
/* 000011B8 000011F8  48 00 00 01 */	bl OSRestoreInterrupts
/* 000011BC 000011FC  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 000011C0 00001200  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 000011C4 00001204  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 000011C8 00001208  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 000011CC 0000120C  38 21 00 28 */	addi r1, r1, 0x28
/* 000011D0 00001210  7C 08 03 A6 */	mtlr r0
/* 000011D4 00001214  4E 80 00 20 */	blr
.endfn PADControlMotor

.fn PADSetSpec, global
/* 000011D8 00001218  38 00 00 00 */	li r0, 0x0
/* 000011DC 0000121C  2C 03 00 01 */	cmpwi r3, 0x1
/* 000011E0 00001220  90 00 00 00 */	stw r0, __PADSpec@sda21(r0)
/* 000011E4 00001224  41 82 00 30 */	beq .L_00001214
/* 000011E8 00001228  40 80 00 10 */	bge .L_000011F8
/* 000011EC 0000122C  2C 03 00 00 */	cmpwi r3, 0x0
/* 000011F0 00001230  40 80 00 14 */	bge .L_00001204
/* 000011F4 00001234  48 00 00 3C */	b .L_00001230
.L_000011F8:
/* 000011F8 00001238  2C 03 00 06 */	cmpwi r3, 0x6
/* 000011FC 0000123C  40 80 00 34 */	bge .L_00001230
/* 00001200 00001240  48 00 00 24 */	b .L_00001224
.L_00001204:
/* 00001204 00001244  3C 80 00 00 */	lis r4, SPEC0_MakeStatus@ha
/* 00001208 00001248  38 04 00 00 */	addi r0, r4, SPEC0_MakeStatus@l
/* 0000120C 0000124C  90 00 00 00 */	stw r0, MakeStatus@sda21(r0)
/* 00001210 00001250  48 00 00 20 */	b .L_00001230
.L_00001214:
/* 00001214 00001254  3C 80 00 00 */	lis r4, SPEC1_MakeStatus@ha
/* 00001218 00001258  38 04 00 00 */	addi r0, r4, SPEC1_MakeStatus@l
/* 0000121C 0000125C  90 00 00 00 */	stw r0, MakeStatus@sda21(r0)
/* 00001220 00001260  48 00 00 10 */	b .L_00001230
.L_00001224:
/* 00001224 00001264  3C 80 00 00 */	lis r4, SPEC2_MakeStatus@ha
/* 00001228 00001268  38 04 00 00 */	addi r0, r4, SPEC2_MakeStatus@l
/* 0000122C 0000126C  90 00 00 00 */	stw r0, MakeStatus@sda21(r0)
.L_00001230:
/* 00001230 00001270  90 60 00 00 */	stw r3, Spec@sda21(r0)
/* 00001234 00001274  4E 80 00 20 */	blr
.endfn PADSetSpec

.fn SPEC0_MakeStatus, local
/* 00001238 00001278  38 60 00 00 */	li r3, 0x0
/* 0000123C 0000127C  B0 64 00 00 */	sth r3, 0x0(r4)
/* 00001240 00001280  80 05 00 00 */	lwz r0, 0x0(r5)
/* 00001244 00001284  54 00 87 39 */	rlwinm. r0, r0, 16, 28, 28
/* 00001248 00001288  41 82 00 08 */	beq .L_00001250
/* 0000124C 0000128C  38 60 01 00 */	li r3, 0x100
.L_00001250:
/* 00001250 00001290  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 00001254 00001294  7C 00 1B 78 */	or r0, r0, r3
/* 00001258 00001298  B0 04 00 00 */	sth r0, 0x0(r4)
/* 0000125C 0000129C  80 05 00 00 */	lwz r0, 0x0(r5)
/* 00001260 000012A0  54 00 86 B5 */	rlwinm. r0, r0, 16, 26, 26
/* 00001264 000012A4  41 82 00 0C */	beq .L_00001270
/* 00001268 000012A8  38 60 02 00 */	li r3, 0x200
/* 0000126C 000012AC  48 00 00 08 */	b .L_00001274
.L_00001270:
/* 00001270 000012B0  38 60 00 00 */	li r3, 0x0
.L_00001274:
/* 00001274 000012B4  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 00001278 000012B8  7C 00 1B 78 */	or r0, r0, r3
/* 0000127C 000012BC  B0 04 00 00 */	sth r0, 0x0(r4)
/* 00001280 000012C0  80 05 00 00 */	lwz r0, 0x0(r5)
/* 00001284 000012C4  54 00 85 EF */	rlwinm. r0, r0, 16, 23, 23
/* 00001288 000012C8  41 82 00 0C */	beq .L_00001294
/* 0000128C 000012CC  38 60 04 00 */	li r3, 0x400
/* 00001290 000012D0  48 00 00 08 */	b .L_00001298
.L_00001294:
/* 00001294 000012D4  38 60 00 00 */	li r3, 0x0
.L_00001298:
/* 00001298 000012D8  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 0000129C 000012DC  7C 00 1B 78 */	or r0, r0, r3
/* 000012A0 000012E0  B0 04 00 00 */	sth r0, 0x0(r4)
/* 000012A4 000012E4  80 05 00 00 */	lwz r0, 0x0(r5)
/* 000012A8 000012E8  54 00 87 FF */	extrwi. r0, r0, 1, 15
/* 000012AC 000012EC  41 82 00 0C */	beq .L_000012B8
/* 000012B0 000012F0  38 60 08 00 */	li r3, 0x800
/* 000012B4 000012F4  48 00 00 08 */	b .L_000012BC
.L_000012B8:
/* 000012B8 000012F8  38 60 00 00 */	li r3, 0x0
.L_000012BC:
/* 000012BC 000012FC  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 000012C0 00001300  7C 00 1B 78 */	or r0, r0, r3
/* 000012C4 00001304  B0 04 00 00 */	sth r0, 0x0(r4)
/* 000012C8 00001308  80 05 00 00 */	lwz r0, 0x0(r5)
/* 000012CC 0000130C  54 00 86 F7 */	rlwinm. r0, r0, 16, 27, 27
/* 000012D0 00001310  41 82 00 0C */	beq .L_000012DC
/* 000012D4 00001314  38 C0 10 00 */	li r6, 0x1000
/* 000012D8 00001318  48 00 00 08 */	b .L_000012E0
.L_000012DC:
/* 000012DC 0000131C  38 C0 00 00 */	li r6, 0x0
.L_000012E0:
/* 000012E0 00001320  A0 64 00 00 */	lhz r3, 0x0(r4)
/* 000012E4 00001324  38 00 00 00 */	li r0, 0x0
/* 000012E8 00001328  7C 63 33 78 */	or r3, r3, r6
/* 000012EC 0000132C  B0 64 00 00 */	sth r3, 0x0(r4)
/* 000012F0 00001330  80 65 00 04 */	lwz r3, 0x4(r5)
/* 000012F4 00001334  54 63 84 3E */	srwi r3, r3, 16
/* 000012F8 00001338  7C 63 07 74 */	extsb r3, r3
/* 000012FC 0000133C  98 64 00 02 */	stb r3, 0x2(r4)
/* 00001300 00001340  80 65 00 04 */	lwz r3, 0x4(r5)
/* 00001304 00001344  54 63 46 3E */	srwi r3, r3, 24
/* 00001308 00001348  7C 63 07 74 */	extsb r3, r3
/* 0000130C 0000134C  98 64 00 03 */	stb r3, 0x3(r4)
/* 00001310 00001350  80 65 00 04 */	lwz r3, 0x4(r5)
/* 00001314 00001354  7C 63 07 74 */	extsb r3, r3
/* 00001318 00001358  98 64 00 04 */	stb r3, 0x4(r4)
/* 0000131C 0000135C  80 65 00 04 */	lwz r3, 0x4(r5)
/* 00001320 00001360  54 63 C2 3E */	srwi r3, r3, 8
/* 00001324 00001364  7C 63 07 74 */	extsb r3, r3
/* 00001328 00001368  98 64 00 05 */	stb r3, 0x5(r4)
/* 0000132C 0000136C  80 65 00 00 */	lwz r3, 0x0(r5)
/* 00001330 00001370  54 63 C6 3E */	extrwi r3, r3, 8, 16
/* 00001334 00001374  98 64 00 06 */	stb r3, 0x6(r4)
/* 00001338 00001378  80 65 00 00 */	lwz r3, 0x0(r5)
/* 0000133C 0000137C  98 64 00 07 */	stb r3, 0x7(r4)
/* 00001340 00001380  98 04 00 08 */	stb r0, 0x8(r4)
/* 00001344 00001384  98 04 00 09 */	stb r0, 0x9(r4)
/* 00001348 00001388  88 04 00 06 */	lbz r0, 0x6(r4)
/* 0000134C 0000138C  28 00 00 AA */	cmplwi r0, 0xaa
/* 00001350 00001390  41 80 00 10 */	blt .L_00001360
/* 00001354 00001394  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 00001358 00001398  60 00 00 40 */	ori r0, r0, 0x40
/* 0000135C 0000139C  B0 04 00 00 */	sth r0, 0x0(r4)
.L_00001360:
/* 00001360 000013A0  88 04 00 07 */	lbz r0, 0x7(r4)
/* 00001364 000013A4  28 00 00 AA */	cmplwi r0, 0xaa
/* 00001368 000013A8  41 80 00 10 */	blt .L_00001378
/* 0000136C 000013AC  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 00001370 000013B0  60 00 00 20 */	ori r0, r0, 0x20
/* 00001374 000013B4  B0 04 00 00 */	sth r0, 0x0(r4)
.L_00001378:
/* 00001378 000013B8  88 64 00 02 */	lbz r3, 0x2(r4)
/* 0000137C 000013BC  38 03 FF 80 */	subi r0, r3, 0x80
/* 00001380 000013C0  98 04 00 02 */	stb r0, 0x2(r4)
/* 00001384 000013C4  88 64 00 03 */	lbz r3, 0x3(r4)
/* 00001388 000013C8  38 03 FF 80 */	subi r0, r3, 0x80
/* 0000138C 000013CC  98 04 00 03 */	stb r0, 0x3(r4)
/* 00001390 000013D0  88 64 00 04 */	lbz r3, 0x4(r4)
/* 00001394 000013D4  38 03 FF 80 */	subi r0, r3, 0x80
/* 00001398 000013D8  98 04 00 04 */	stb r0, 0x4(r4)
/* 0000139C 000013DC  88 64 00 05 */	lbz r3, 0x5(r4)
/* 000013A0 000013E0  38 03 FF 80 */	subi r0, r3, 0x80
/* 000013A4 000013E4  98 04 00 05 */	stb r0, 0x5(r4)
/* 000013A8 000013E8  4E 80 00 20 */	blr
.endfn SPEC0_MakeStatus

.fn SPEC1_MakeStatus, local
/* 000013AC 000013EC  38 60 00 00 */	li r3, 0x0
/* 000013B0 000013F0  B0 64 00 00 */	sth r3, 0x0(r4)
/* 000013B4 000013F4  80 05 00 00 */	lwz r0, 0x0(r5)
/* 000013B8 000013F8  54 00 86 31 */	rlwinm. r0, r0, 16, 24, 24
/* 000013BC 000013FC  41 82 00 08 */	beq .L_000013C4
/* 000013C0 00001400  38 60 01 00 */	li r3, 0x100
.L_000013C4:
/* 000013C4 00001404  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 000013C8 00001408  7C 00 1B 78 */	or r0, r0, r3
/* 000013CC 0000140C  B0 04 00 00 */	sth r0, 0x0(r4)
/* 000013D0 00001410  80 05 00 00 */	lwz r0, 0x0(r5)
/* 000013D4 00001414  54 00 85 EF */	rlwinm. r0, r0, 16, 23, 23
/* 000013D8 00001418  41 82 00 0C */	beq .L_000013E4
/* 000013DC 0000141C  38 60 02 00 */	li r3, 0x200
/* 000013E0 00001420  48 00 00 08 */	b .L_000013E8
.L_000013E4:
/* 000013E4 00001424  38 60 00 00 */	li r3, 0x0
.L_000013E8:
/* 000013E8 00001428  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 000013EC 0000142C  7C 00 1B 78 */	or r0, r0, r3
/* 000013F0 00001430  B0 04 00 00 */	sth r0, 0x0(r4)
/* 000013F4 00001434  80 05 00 00 */	lwz r0, 0x0(r5)
/* 000013F8 00001438  54 00 86 B5 */	rlwinm. r0, r0, 16, 26, 26
/* 000013FC 0000143C  41 82 00 0C */	beq .L_00001408
/* 00001400 00001440  38 60 04 00 */	li r3, 0x400
/* 00001404 00001444  48 00 00 08 */	b .L_0000140C
.L_00001408:
/* 00001408 00001448  38 60 00 00 */	li r3, 0x0
.L_0000140C:
/* 0000140C 0000144C  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 00001410 00001450  7C 00 1B 78 */	or r0, r0, r3
/* 00001414 00001454  B0 04 00 00 */	sth r0, 0x0(r4)
/* 00001418 00001458  80 05 00 00 */	lwz r0, 0x0(r5)
/* 0000141C 0000145C  54 00 86 F7 */	rlwinm. r0, r0, 16, 27, 27
/* 00001420 00001460  41 82 00 0C */	beq .L_0000142C
/* 00001424 00001464  38 60 08 00 */	li r3, 0x800
/* 00001428 00001468  48 00 00 08 */	b .L_00001430
.L_0000142C:
/* 0000142C 0000146C  38 60 00 00 */	li r3, 0x0
.L_00001430:
/* 00001430 00001470  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 00001434 00001474  7C 00 1B 78 */	or r0, r0, r3
/* 00001438 00001478  B0 04 00 00 */	sth r0, 0x0(r4)
/* 0000143C 0000147C  80 05 00 00 */	lwz r0, 0x0(r5)
/* 00001440 00001480  54 00 85 AD */	rlwinm. r0, r0, 16, 22, 22
/* 00001444 00001484  41 82 00 0C */	beq .L_00001450
/* 00001448 00001488  38 C0 10 00 */	li r6, 0x1000
/* 0000144C 0000148C  48 00 00 08 */	b .L_00001454
.L_00001450:
/* 00001450 00001490  38 C0 00 00 */	li r6, 0x0
.L_00001454:
/* 00001454 00001494  A0 64 00 00 */	lhz r3, 0x0(r4)
/* 00001458 00001498  38 00 00 00 */	li r0, 0x0
/* 0000145C 0000149C  7C 63 33 78 */	or r3, r3, r6
/* 00001460 000014A0  B0 64 00 00 */	sth r3, 0x0(r4)
/* 00001464 000014A4  80 65 00 04 */	lwz r3, 0x4(r5)
/* 00001468 000014A8  54 63 84 3E */	srwi r3, r3, 16
/* 0000146C 000014AC  7C 63 07 74 */	extsb r3, r3
/* 00001470 000014B0  98 64 00 02 */	stb r3, 0x2(r4)
/* 00001474 000014B4  80 65 00 04 */	lwz r3, 0x4(r5)
/* 00001478 000014B8  54 63 46 3E */	srwi r3, r3, 24
/* 0000147C 000014BC  7C 63 07 74 */	extsb r3, r3
/* 00001480 000014C0  98 64 00 03 */	stb r3, 0x3(r4)
/* 00001484 000014C4  80 65 00 04 */	lwz r3, 0x4(r5)
/* 00001488 000014C8  7C 63 07 74 */	extsb r3, r3
/* 0000148C 000014CC  98 64 00 04 */	stb r3, 0x4(r4)
/* 00001490 000014D0  80 65 00 04 */	lwz r3, 0x4(r5)
/* 00001494 000014D4  54 63 C2 3E */	srwi r3, r3, 8
/* 00001498 000014D8  7C 63 07 74 */	extsb r3, r3
/* 0000149C 000014DC  98 64 00 05 */	stb r3, 0x5(r4)
/* 000014A0 000014E0  80 65 00 00 */	lwz r3, 0x0(r5)
/* 000014A4 000014E4  54 63 C6 3E */	extrwi r3, r3, 8, 16
/* 000014A8 000014E8  98 64 00 06 */	stb r3, 0x6(r4)
/* 000014AC 000014EC  80 65 00 00 */	lwz r3, 0x0(r5)
/* 000014B0 000014F0  98 64 00 07 */	stb r3, 0x7(r4)
/* 000014B4 000014F4  98 04 00 08 */	stb r0, 0x8(r4)
/* 000014B8 000014F8  98 04 00 09 */	stb r0, 0x9(r4)
/* 000014BC 000014FC  88 04 00 06 */	lbz r0, 0x6(r4)
/* 000014C0 00001500  28 00 00 AA */	cmplwi r0, 0xaa
/* 000014C4 00001504  41 80 00 10 */	blt .L_000014D4
/* 000014C8 00001508  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 000014CC 0000150C  60 00 00 40 */	ori r0, r0, 0x40
/* 000014D0 00001510  B0 04 00 00 */	sth r0, 0x0(r4)
.L_000014D4:
/* 000014D4 00001514  88 04 00 07 */	lbz r0, 0x7(r4)
/* 000014D8 00001518  28 00 00 AA */	cmplwi r0, 0xaa
/* 000014DC 0000151C  41 80 00 10 */	blt .L_000014EC
/* 000014E0 00001520  A0 04 00 00 */	lhz r0, 0x0(r4)
/* 000014E4 00001524  60 00 00 20 */	ori r0, r0, 0x20
/* 000014E8 00001528  B0 04 00 00 */	sth r0, 0x0(r4)
.L_000014EC:
/* 000014EC 0000152C  88 64 00 02 */	lbz r3, 0x2(r4)
/* 000014F0 00001530  38 03 FF 80 */	subi r0, r3, 0x80
/* 000014F4 00001534  98 04 00 02 */	stb r0, 0x2(r4)
/* 000014F8 00001538  88 64 00 03 */	lbz r3, 0x3(r4)
/* 000014FC 0000153C  38 03 FF 80 */	subi r0, r3, 0x80
/* 00001500 00001540  98 04 00 03 */	stb r0, 0x3(r4)
/* 00001504 00001544  88 64 00 04 */	lbz r3, 0x4(r4)
/* 00001508 00001548  38 03 FF 80 */	subi r0, r3, 0x80
/* 0000150C 0000154C  98 04 00 04 */	stb r0, 0x4(r4)
/* 00001510 00001550  88 64 00 05 */	lbz r3, 0x5(r4)
/* 00001514 00001554  38 03 FF 80 */	subi r0, r3, 0x80
/* 00001518 00001558  98 04 00 05 */	stb r0, 0x5(r4)
/* 0000151C 0000155C  4E 80 00 20 */	blr
.endfn SPEC1_MakeStatus

.fn SPEC2_MakeStatus, global
/* 00001520 00001560  80 05 00 00 */	lwz r0, 0x0(r5)
/* 00001524 00001564  54 00 84 BE */	extrwi r0, r0, 14, 2
/* 00001528 00001568  B0 04 00 00 */	sth r0, 0x0(r4)
/* 0000152C 0000156C  80 05 00 00 */	lwz r0, 0x0(r5)
/* 00001530 00001570  54 00 C2 3E */	srwi r0, r0, 8
/* 00001534 00001574  7C 00 07 74 */	extsb r0, r0
/* 00001538 00001578  98 04 00 02 */	stb r0, 0x2(r4)
/* 0000153C 0000157C  80 05 00 00 */	lwz r0, 0x0(r5)
/* 00001540 00001580  7C 00 07 74 */	extsb r0, r0
/* 00001544 00001584  98 04 00 03 */	stb r0, 0x3(r4)
/* 00001548 00001588  80 00 00 00 */	lwz r0, AnalogMode@sda21(r0)
/* 0000154C 0000158C  54 00 05 6E */	rlwinm r0, r0, 0, 21, 23
/* 00001550 00001590  2C 00 04 00 */	cmpwi r0, 0x400
/* 00001554 00001594  41 82 01 98 */	beq .L_000016EC
/* 00001558 00001598  40 80 00 34 */	bge .L_0000158C
/* 0000155C 0000159C  2C 00 02 00 */	cmpwi r0, 0x200
/* 00001560 000015A0  41 82 00 F8 */	beq .L_00001658
/* 00001564 000015A4  40 80 00 1C */	bge .L_00001580
/* 00001568 000015A8  2C 00 01 00 */	cmpwi r0, 0x100
/* 0000156C 000015AC  41 82 00 98 */	beq .L_00001604
/* 00001570 000015B0  40 80 01 BC */	bge .L_0000172C
/* 00001574 000015B4  2C 00 00 00 */	cmpwi r0, 0x0
/* 00001578 000015B8  41 82 00 38 */	beq .L_000015B0
/* 0000157C 000015BC  48 00 01 B0 */	b .L_0000172C
.L_00001580:
/* 00001580 000015C0  2C 00 03 00 */	cmpwi r0, 0x300
/* 00001584 000015C4  41 82 01 24 */	beq .L_000016A8
/* 00001588 000015C8  48 00 01 A4 */	b .L_0000172C
.L_0000158C:
/* 0000158C 000015CC  2C 00 06 00 */	cmpwi r0, 0x600
/* 00001590 000015D0  41 82 00 20 */	beq .L_000015B0
/* 00001594 000015D4  40 80 00 10 */	bge .L_000015A4
/* 00001598 000015D8  2C 00 05 00 */	cmpwi r0, 0x500
/* 0000159C 000015DC  41 82 00 14 */	beq .L_000015B0
/* 000015A0 000015E0  48 00 01 8C */	b .L_0000172C
.L_000015A4:
/* 000015A4 000015E4  2C 00 07 00 */	cmpwi r0, 0x700
/* 000015A8 000015E8  41 82 00 08 */	beq .L_000015B0
/* 000015AC 000015EC  48 00 01 80 */	b .L_0000172C
.L_000015B0:
/* 000015B0 000015F0  80 05 00 04 */	lwz r0, 0x4(r5)
/* 000015B4 000015F4  54 00 46 3E */	srwi r0, r0, 24
/* 000015B8 000015F8  7C 00 07 74 */	extsb r0, r0
/* 000015BC 000015FC  98 04 00 04 */	stb r0, 0x4(r4)
/* 000015C0 00001600  80 05 00 04 */	lwz r0, 0x4(r5)
/* 000015C4 00001604  54 00 84 3E */	srwi r0, r0, 16
/* 000015C8 00001608  7C 00 07 74 */	extsb r0, r0
/* 000015CC 0000160C  98 04 00 05 */	stb r0, 0x5(r4)
/* 000015D0 00001610  80 05 00 04 */	lwz r0, 0x4(r5)
/* 000015D4 00001614  54 00 C6 36 */	rlwinm r0, r0, 24, 24, 27
/* 000015D8 00001618  98 04 00 06 */	stb r0, 0x6(r4)
/* 000015DC 0000161C  80 05 00 04 */	lwz r0, 0x4(r5)
/* 000015E0 00001620  54 00 E6 36 */	rlwinm r0, r0, 28, 24, 27
/* 000015E4 00001624  98 04 00 07 */	stb r0, 0x7(r4)
/* 000015E8 00001628  80 05 00 04 */	lwz r0, 0x4(r5)
/* 000015EC 0000162C  54 00 06 36 */	rlwinm r0, r0, 0, 24, 27
/* 000015F0 00001630  98 04 00 08 */	stb r0, 0x8(r4)
/* 000015F4 00001634  80 05 00 04 */	lwz r0, 0x4(r5)
/* 000015F8 00001638  54 00 26 36 */	clrlslwi r0, r0, 28, 4
/* 000015FC 0000163C  98 04 00 09 */	stb r0, 0x9(r4)
/* 00001600 00001640  48 00 01 2C */	b .L_0000172C
.L_00001604:
/* 00001604 00001644  80 05 00 04 */	lwz r0, 0x4(r5)
/* 00001608 00001648  54 00 46 36 */	rlwinm r0, r0, 8, 24, 27
/* 0000160C 0000164C  7C 00 07 74 */	extsb r0, r0
/* 00001610 00001650  98 04 00 04 */	stb r0, 0x4(r4)
/* 00001614 00001654  80 05 00 04 */	lwz r0, 0x4(r5)
/* 00001618 00001658  54 00 66 36 */	rlwinm r0, r0, 12, 24, 27
/* 0000161C 0000165C  7C 00 07 74 */	extsb r0, r0
/* 00001620 00001660  98 04 00 05 */	stb r0, 0x5(r4)
/* 00001624 00001664  80 05 00 04 */	lwz r0, 0x4(r5)
/* 00001628 00001668  54 00 86 3E */	extrwi r0, r0, 8, 8
/* 0000162C 0000166C  98 04 00 06 */	stb r0, 0x6(r4)
/* 00001630 00001670  80 05 00 04 */	lwz r0, 0x4(r5)
/* 00001634 00001674  54 00 C6 3E */	extrwi r0, r0, 8, 16
/* 00001638 00001678  98 04 00 07 */	stb r0, 0x7(r4)
/* 0000163C 0000167C  80 05 00 04 */	lwz r0, 0x4(r5)
/* 00001640 00001680  54 00 06 36 */	rlwinm r0, r0, 0, 24, 27
/* 00001644 00001684  98 04 00 08 */	stb r0, 0x8(r4)
/* 00001648 00001688  80 05 00 04 */	lwz r0, 0x4(r5)
/* 0000164C 0000168C  54 00 26 36 */	clrlslwi r0, r0, 28, 4
/* 00001650 00001690  98 04 00 09 */	stb r0, 0x9(r4)
/* 00001654 00001694  48 00 00 D8 */	b .L_0000172C
.L_00001658:
/* 00001658 00001698  80 05 00 04 */	lwz r0, 0x4(r5)
/* 0000165C 0000169C  54 00 46 36 */	rlwinm r0, r0, 8, 24, 27
/* 00001660 000016A0  7C 00 07 74 */	extsb r0, r0
/* 00001664 000016A4  98 04 00 04 */	stb r0, 0x4(r4)
/* 00001668 000016A8  80 05 00 04 */	lwz r0, 0x4(r5)
/* 0000166C 000016AC  54 00 66 36 */	rlwinm r0, r0, 12, 24, 27
/* 00001670 000016B0  7C 00 07 74 */	extsb r0, r0
/* 00001674 000016B4  98 04 00 05 */	stb r0, 0x5(r4)
/* 00001678 000016B8  80 05 00 04 */	lwz r0, 0x4(r5)
/* 0000167C 000016BC  54 00 86 36 */	rlwinm r0, r0, 16, 24, 27
/* 00001680 000016C0  98 04 00 06 */	stb r0, 0x6(r4)
/* 00001684 000016C4  80 05 00 04 */	lwz r0, 0x4(r5)
/* 00001688 000016C8  54 00 A6 36 */	rlwinm r0, r0, 20, 24, 27
/* 0000168C 000016CC  98 04 00 07 */	stb r0, 0x7(r4)
/* 00001690 000016D0  80 05 00 04 */	lwz r0, 0x4(r5)
/* 00001694 000016D4  54 00 C6 3E */	extrwi r0, r0, 8, 16
/* 00001698 000016D8  98 04 00 08 */	stb r0, 0x8(r4)
/* 0000169C 000016DC  80 05 00 04 */	lwz r0, 0x4(r5)
/* 000016A0 000016E0  98 04 00 09 */	stb r0, 0x9(r4)
/* 000016A4 000016E4  48 00 00 88 */	b .L_0000172C
.L_000016A8:
/* 000016A8 000016E8  80 C5 00 04 */	lwz r6, 0x4(r5)
/* 000016AC 000016EC  38 00 00 00 */	li r0, 0x0
/* 000016B0 000016F0  54 C6 46 3E */	srwi r6, r6, 24
/* 000016B4 000016F4  7C C6 07 74 */	extsb r6, r6
/* 000016B8 000016F8  98 C4 00 04 */	stb r6, 0x4(r4)
/* 000016BC 000016FC  80 C5 00 04 */	lwz r6, 0x4(r5)
/* 000016C0 00001700  54 C6 84 3E */	srwi r6, r6, 16
/* 000016C4 00001704  7C C6 07 74 */	extsb r6, r6
/* 000016C8 00001708  98 C4 00 05 */	stb r6, 0x5(r4)
/* 000016CC 0000170C  80 C5 00 04 */	lwz r6, 0x4(r5)
/* 000016D0 00001710  54 C6 C6 3E */	extrwi r6, r6, 8, 16
/* 000016D4 00001714  98 C4 00 06 */	stb r6, 0x6(r4)
/* 000016D8 00001718  80 A5 00 04 */	lwz r5, 0x4(r5)
/* 000016DC 0000171C  98 A4 00 07 */	stb r5, 0x7(r4)
/* 000016E0 00001720  98 04 00 08 */	stb r0, 0x8(r4)
/* 000016E4 00001724  98 04 00 09 */	stb r0, 0x9(r4)
/* 000016E8 00001728  48 00 00 44 */	b .L_0000172C
.L_000016EC:
/* 000016EC 0000172C  80 C5 00 04 */	lwz r6, 0x4(r5)
/* 000016F0 00001730  38 00 00 00 */	li r0, 0x0
/* 000016F4 00001734  54 C6 46 3E */	srwi r6, r6, 24
/* 000016F8 00001738  7C C6 07 74 */	extsb r6, r6
/* 000016FC 0000173C  98 C4 00 04 */	stb r6, 0x4(r4)
/* 00001700 00001740  80 C5 00 04 */	lwz r6, 0x4(r5)
/* 00001704 00001744  54 C6 84 3E */	srwi r6, r6, 16
/* 00001708 00001748  7C C6 07 74 */	extsb r6, r6
/* 0000170C 0000174C  98 C4 00 05 */	stb r6, 0x5(r4)
/* 00001710 00001750  98 04 00 06 */	stb r0, 0x6(r4)
/* 00001714 00001754  98 04 00 07 */	stb r0, 0x7(r4)
/* 00001718 00001758  80 05 00 04 */	lwz r0, 0x4(r5)
/* 0000171C 0000175C  54 00 C6 3E */	extrwi r0, r0, 8, 16
/* 00001720 00001760  98 04 00 08 */	stb r0, 0x8(r4)
/* 00001724 00001764  80 05 00 04 */	lwz r0, 0x4(r5)
/* 00001728 00001768  98 04 00 09 */	stb r0, 0x9(r4)
.L_0000172C:
/* 0000172C 0000176C  88 C4 00 02 */	lbz r6, 0x2(r4)
/* 00001730 00001770  3C A0 00 00 */	lis r5, Origin@ha
/* 00001734 00001774  1C 63 00 0C */	mulli r3, r3, 0xc
/* 00001738 00001778  38 06 FF 80 */	subi r0, r6, 0x80
/* 0000173C 0000177C  98 04 00 02 */	stb r0, 0x2(r4)
/* 00001740 00001780  38 05 00 00 */	addi r0, r5, Origin@l
/* 00001744 00001784  7C 60 1A 14 */	add r3, r0, r3
/* 00001748 00001788  88 A4 00 03 */	lbz r5, 0x3(r4)
/* 0000174C 0000178C  38 05 FF 80 */	subi r0, r5, 0x80
/* 00001750 00001790  98 04 00 03 */	stb r0, 0x3(r4)
/* 00001754 00001794  88 A4 00 04 */	lbz r5, 0x4(r4)
/* 00001758 00001798  38 05 FF 80 */	subi r0, r5, 0x80
/* 0000175C 0000179C  98 04 00 04 */	stb r0, 0x4(r4)
/* 00001760 000017A0  88 A4 00 05 */	lbz r5, 0x5(r4)
/* 00001764 000017A4  38 05 FF 80 */	subi r0, r5, 0x80
/* 00001768 000017A8  98 04 00 05 */	stb r0, 0x5(r4)
/* 0000176C 000017AC  88 E3 00 02 */	lbz r7, 0x2(r3)
/* 00001770 000017B0  88 C4 00 02 */	lbz r6, 0x2(r4)
/* 00001774 000017B4  7C E0 07 75 */	extsb. r0, r7
/* 00001778 000017B8  40 81 00 24 */	ble .L_0000179C
/* 0000177C 000017BC  7C E5 07 74 */	extsb r5, r7
/* 00001780 000017C0  38 05 FF 80 */	subi r0, r5, 0x80
/* 00001784 000017C4  7C 05 07 74 */	extsb r5, r0
/* 00001788 000017C8  7C C0 07 74 */	extsb r0, r6
/* 0000178C 000017CC  7C 00 28 00 */	cmpw r0, r5
/* 00001790 000017D0  40 80 00 30 */	bge .L_000017C0
/* 00001794 000017D4  7C A6 2B 78 */	mr r6, r5
/* 00001798 000017D8  48 00 00 28 */	b .L_000017C0
.L_0000179C:
/* 0000179C 000017DC  7C E0 07 75 */	extsb. r0, r7
/* 000017A0 000017E0  40 80 00 20 */	bge .L_000017C0
/* 000017A4 000017E4  7C E5 07 74 */	extsb r5, r7
/* 000017A8 000017E8  38 05 00 7F */	addi r0, r5, 0x7f
/* 000017AC 000017EC  7C 05 07 74 */	extsb r5, r0
/* 000017B0 000017F0  7C C0 07 74 */	extsb r0, r6
/* 000017B4 000017F4  7C 05 00 00 */	cmpw r5, r0
/* 000017B8 000017F8  40 80 00 08 */	bge .L_000017C0
/* 000017BC 000017FC  7C A6 2B 78 */	mr r6, r5
.L_000017C0:
/* 000017C0 00001800  7C C7 30 50 */	subf r6, r7, r6
/* 000017C4 00001804  98 C4 00 02 */	stb r6, 0x2(r4)
/* 000017C8 00001808  88 E3 00 03 */	lbz r7, 0x3(r3)
/* 000017CC 0000180C  88 C4 00 03 */	lbz r6, 0x3(r4)
/* 000017D0 00001810  7C E0 07 75 */	extsb. r0, r7
/* 000017D4 00001814  40 81 00 24 */	ble .L_000017F8
/* 000017D8 00001818  7C E5 07 74 */	extsb r5, r7
/* 000017DC 0000181C  38 05 FF 80 */	subi r0, r5, 0x80
/* 000017E0 00001820  7C 05 07 74 */	extsb r5, r0
/* 000017E4 00001824  7C C0 07 74 */	extsb r0, r6
/* 000017E8 00001828  7C 00 28 00 */	cmpw r0, r5
/* 000017EC 0000182C  40 80 00 30 */	bge .L_0000181C
/* 000017F0 00001830  7C A6 2B 78 */	mr r6, r5
/* 000017F4 00001834  48 00 00 28 */	b .L_0000181C
.L_000017F8:
/* 000017F8 00001838  7C E0 07 75 */	extsb. r0, r7
/* 000017FC 0000183C  40 80 00 20 */	bge .L_0000181C
/* 00001800 00001840  7C E5 07 74 */	extsb r5, r7
/* 00001804 00001844  38 05 00 7F */	addi r0, r5, 0x7f
/* 00001808 00001848  7C 05 07 74 */	extsb r5, r0
/* 0000180C 0000184C  7C C0 07 74 */	extsb r0, r6
/* 00001810 00001850  7C 05 00 00 */	cmpw r5, r0
/* 00001814 00001854  40 80 00 08 */	bge .L_0000181C
/* 00001818 00001858  7C A6 2B 78 */	mr r6, r5
.L_0000181C:
/* 0000181C 0000185C  7C C7 30 50 */	subf r6, r7, r6
/* 00001820 00001860  98 C4 00 03 */	stb r6, 0x3(r4)
/* 00001824 00001864  88 E3 00 04 */	lbz r7, 0x4(r3)
/* 00001828 00001868  88 C4 00 04 */	lbz r6, 0x4(r4)
/* 0000182C 0000186C  7C E0 07 75 */	extsb. r0, r7
/* 00001830 00001870  40 81 00 24 */	ble .L_00001854
/* 00001834 00001874  7C E5 07 74 */	extsb r5, r7
/* 00001838 00001878  38 05 FF 80 */	subi r0, r5, 0x80
/* 0000183C 0000187C  7C 05 07 74 */	extsb r5, r0
/* 00001840 00001880  7C C0 07 74 */	extsb r0, r6
/* 00001844 00001884  7C 00 28 00 */	cmpw r0, r5
/* 00001848 00001888  40 80 00 30 */	bge .L_00001878
/* 0000184C 0000188C  7C A6 2B 78 */	mr r6, r5
/* 00001850 00001890  48 00 00 28 */	b .L_00001878
.L_00001854:
/* 00001854 00001894  7C E0 07 75 */	extsb. r0, r7
/* 00001858 00001898  40 80 00 20 */	bge .L_00001878
/* 0000185C 0000189C  7C E5 07 74 */	extsb r5, r7
/* 00001860 000018A0  38 05 00 7F */	addi r0, r5, 0x7f
/* 00001864 000018A4  7C 05 07 74 */	extsb r5, r0
/* 00001868 000018A8  7C C0 07 74 */	extsb r0, r6
/* 0000186C 000018AC  7C 05 00 00 */	cmpw r5, r0
/* 00001870 000018B0  40 80 00 08 */	bge .L_00001878
/* 00001874 000018B4  7C A6 2B 78 */	mr r6, r5
.L_00001878:
/* 00001878 000018B8  7C C7 30 50 */	subf r6, r7, r6
/* 0000187C 000018BC  98 C4 00 04 */	stb r6, 0x4(r4)
/* 00001880 000018C0  88 E3 00 05 */	lbz r7, 0x5(r3)
/* 00001884 000018C4  88 C4 00 05 */	lbz r6, 0x5(r4)
/* 00001888 000018C8  7C E0 07 75 */	extsb. r0, r7
/* 0000188C 000018CC  40 81 00 24 */	ble .L_000018B0
/* 00001890 000018D0  7C E5 07 74 */	extsb r5, r7
/* 00001894 000018D4  38 05 FF 80 */	subi r0, r5, 0x80
/* 00001898 000018D8  7C 05 07 74 */	extsb r5, r0
/* 0000189C 000018DC  7C C0 07 74 */	extsb r0, r6
/* 000018A0 000018E0  7C 00 28 00 */	cmpw r0, r5
/* 000018A4 000018E4  40 80 00 30 */	bge .L_000018D4
/* 000018A8 000018E8  7C A6 2B 78 */	mr r6, r5
/* 000018AC 000018EC  48 00 00 28 */	b .L_000018D4
.L_000018B0:
/* 000018B0 000018F0  7C E0 07 75 */	extsb. r0, r7
/* 000018B4 000018F4  40 80 00 20 */	bge .L_000018D4
/* 000018B8 000018F8  7C E5 07 74 */	extsb r5, r7
/* 000018BC 000018FC  38 05 00 7F */	addi r0, r5, 0x7f
/* 000018C0 00001900  7C 05 07 74 */	extsb r5, r0
/* 000018C4 00001904  7C C0 07 74 */	extsb r0, r6
/* 000018C8 00001908  7C 05 00 00 */	cmpw r5, r0
/* 000018CC 0000190C  40 80 00 08 */	bge .L_000018D4
/* 000018D0 00001910  7C A6 2B 78 */	mr r6, r5
.L_000018D4:
/* 000018D4 00001914  7C C7 30 50 */	subf r6, r7, r6
/* 000018D8 00001918  98 C4 00 05 */	stb r6, 0x5(r4)
/* 000018DC 0000191C  88 03 00 06 */	lbz r0, 0x6(r3)
/* 000018E0 00001920  88 A4 00 06 */	lbz r5, 0x6(r4)
/* 000018E4 00001924  7C 05 00 40 */	cmplw r5, r0
/* 000018E8 00001928  40 80 00 08 */	bge .L_000018F0
/* 000018EC 0000192C  7C 05 03 78 */	mr r5, r0
.L_000018F0:
/* 000018F0 00001930  7C A0 28 50 */	subf r5, r0, r5
/* 000018F4 00001934  98 A4 00 06 */	stb r5, 0x6(r4)
/* 000018F8 00001938  88 03 00 07 */	lbz r0, 0x7(r3)
/* 000018FC 0000193C  88 64 00 07 */	lbz r3, 0x7(r4)
/* 00001900 00001940  7C 03 00 40 */	cmplw r3, r0
/* 00001904 00001944  40 80 00 08 */	bge .L_0000190C
/* 00001908 00001948  7C 03 03 78 */	mr r3, r0
.L_0000190C:
/* 0000190C 0000194C  7C 60 18 50 */	subf r3, r0, r3
/* 00001910 00001950  98 64 00 07 */	stb r3, 0x7(r4)
/* 00001914 00001954  4E 80 00 20 */	blr
.endfn SPEC2_MakeStatus

.fn PADOnReset, global
/* 00001918 00001958  7C 08 02 A6 */	mflr r0
/* 0000191C 0000195C  90 01 00 04 */	stw r0, 0x4(r1)
/* 00001920 00001960  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 00001924 00001964  93 E1 00 24 */	stw r31, 0x24(r1)
/* 00001928 00001968  93 C1 00 20 */	stw r30, 0x20(r1)
/* 0000192C 0000196C  3B C3 00 00 */	addi r30, r3, 0x0
/* 00001930 00001970  80 00 00 00 */	lwz r0, SamplingCallback@sda21(r0)
/* 00001934 00001974  28 00 00 00 */	cmplwi r0, 0x0
/* 00001938 00001978  41 82 00 0C */	beq .L_00001944
/* 0000193C 0000197C  38 60 00 00 */	li r3, 0x0
/* 00001940 00001980  48 00 00 01 */	bl PADSetSamplingCallback
.L_00001944:
/* 00001944 00001984  2C 1E 00 00 */	cmpwi r30, 0x0
/* 00001948 00001988  40 82 01 40 */	bne .L_00001A88
/* 0000194C 0000198C  80 00 00 00 */	lwz r0, ResettingBits@sda21(r0)
/* 00001950 00001990  3B C0 00 00 */	li r30, 0x0
/* 00001954 00001994  38 7E 00 00 */	addi r3, r30, 0x0
/* 00001958 00001998  28 00 00 00 */	cmplwi r0, 0x0
/* 0000195C 0000199C  40 82 00 14 */	bne .L_00001970
/* 00001960 000019A0  80 00 00 00 */	lwz r0, ResettingChan@sda21(r0)
/* 00001964 000019A4  2C 00 00 20 */	cmpwi r0, 0x20
/* 00001968 000019A8  40 82 00 08 */	bne .L_00001970
/* 0000196C 000019AC  38 60 00 01 */	li r3, 0x1
.L_00001970:
/* 00001970 000019B0  2C 03 00 00 */	cmpwi r3, 0x0
/* 00001974 000019B4  41 82 00 14 */	beq .L_00001988
/* 00001978 000019B8  48 00 00 01 */	bl SIBusy
/* 0000197C 000019BC  2C 03 00 00 */	cmpwi r3, 0x0
/* 00001980 000019C0  40 82 00 08 */	bne .L_00001988
/* 00001984 000019C4  3B C0 00 01 */	li r30, 0x1
.L_00001988:
/* 00001988 000019C8  80 00 00 00 */	lwz r0, recalibrated@sda21(r0)
/* 0000198C 000019CC  2C 00 00 00 */	cmpwi r0, 0x0
/* 00001990 000019D0  40 82 00 F0 */	bne .L_00001A80
/* 00001994 000019D4  2C 1E 00 00 */	cmpwi r30, 0x0
/* 00001998 000019D8  41 82 00 E8 */	beq .L_00001A80
/* 0000199C 000019DC  3F C0 F0 00 */	lis r30, 0xf000
/* 000019A0 000019E0  48 00 00 01 */	bl OSDisableInterrupts
/* 000019A4 000019E4  80 C0 00 00 */	lwz r6, PendingBits@sda21(r0)
/* 000019A8 000019E8  38 E0 00 00 */	li r7, 0x0
/* 000019AC 000019EC  80 A0 00 00 */	lwz r5, WaitingBits@sda21(r0)
/* 000019B0 000019F0  3C 80 80 00 */	lis r4, 0x8000
/* 000019B4 000019F4  80 00 00 00 */	lwz r0, CheckingBits@sda21(r0)
/* 000019B8 000019F8  7F DE 33 78 */	or r30, r30, r6
/* 000019BC 000019FC  80 C0 00 00 */	lwz r6, ResettingBits@sda21(r0)
/* 000019C0 00001A00  7C A5 03 78 */	or r5, r5, r0
/* 000019C4 00001A04  88 04 30 E3 */	lbz r0, 0x30e3(r4)
/* 000019C8 00001A08  7F DE 28 78 */	andc r30, r30, r5
/* 000019CC 00001A0C  80 A0 00 00 */	lwz r5, EnabledBits@sda21(r0)
/* 000019D0 00001A10  7C C4 F3 78 */	or r4, r6, r30
/* 000019D4 00001A14  90 E0 00 00 */	stw r7, PendingBits@sda21(r0)
/* 000019D8 00001A18  54 00 06 73 */	rlwinm. r0, r0, 0, 25, 25
/* 000019DC 00001A1C  90 80 00 00 */	stw r4, ResettingBits@sda21(r0)
/* 000019E0 00001A20  7C A4 F0 78 */	andc r4, r5, r30
/* 000019E4 00001A24  3B E3 00 00 */	addi r31, r3, 0x0
/* 000019E8 00001A28  80 C0 00 00 */	lwz r6, ResettingBits@sda21(r0)
/* 000019EC 00001A2C  90 80 00 00 */	stw r4, EnabledBits@sda21(r0)
/* 000019F0 00001A30  7C C3 28 38 */	and r3, r6, r5
/* 000019F4 00001A34  40 82 00 10 */	bne .L_00001A04
/* 000019F8 00001A38  80 00 00 00 */	lwz r0, RecalibrateBits@sda21(r0)
/* 000019FC 00001A3C  7C 00 F3 78 */	or r0, r0, r30
/* 00001A00 00001A40  90 00 00 00 */	stw r0, RecalibrateBits@sda21(r0)
.L_00001A04:
/* 00001A04 00001A44  48 00 00 01 */	bl SIDisablePolling
/* 00001A08 00001A48  80 00 00 00 */	lwz r0, ResettingChan@sda21(r0)
/* 00001A0C 00001A4C  2C 00 00 20 */	cmpwi r0, 0x20
/* 00001A10 00001A50  40 82 00 58 */	bne .L_00001A68
/* 00001A14 00001A54  80 A0 00 00 */	lwz r5, ResettingBits@sda21(r0)
/* 00001A18 00001A58  7C A0 00 34 */	cntlzw r0, r5
/* 00001A1C 00001A5C  90 00 00 00 */	stw r0, ResettingChan@sda21(r0)
/* 00001A20 00001A60  80 80 00 00 */	lwz r4, ResettingChan@sda21(r0)
/* 00001A24 00001A64  2C 04 00 20 */	cmpwi r4, 0x20
/* 00001A28 00001A68  41 82 00 40 */	beq .L_00001A68
/* 00001A2C 00001A6C  3C 00 80 00 */	lis r0, 0x8000
/* 00001A30 00001A70  7C 00 24 30 */	srw r0, r0, r4
/* 00001A34 00001A74  7C A0 00 78 */	andc r0, r5, r0
/* 00001A38 00001A78  1C 84 00 0C */	mulli r4, r4, 0xc
/* 00001A3C 00001A7C  90 00 00 00 */	stw r0, ResettingBits@sda21(r0)
/* 00001A40 00001A80  3C 60 00 00 */	lis r3, Origin@ha
/* 00001A44 00001A84  38 03 00 00 */	addi r0, r3, Origin@l
/* 00001A48 00001A88  7C 60 22 14 */	add r3, r0, r4
/* 00001A4C 00001A8C  38 80 00 00 */	li r4, 0x0
/* 00001A50 00001A90  38 A0 00 0C */	li r5, 0xc
/* 00001A54 00001A94  48 00 00 01 */	bl memset
/* 00001A58 00001A98  3C 80 00 00 */	lis r4, PADTypeAndStatusCallback@ha
/* 00001A5C 00001A9C  80 60 00 00 */	lwz r3, ResettingChan@sda21(r0)
/* 00001A60 00001AA0  38 84 00 00 */	addi r4, r4, PADTypeAndStatusCallback@l
/* 00001A64 00001AA4  48 00 00 01 */	bl SIGetTypeAsync
.L_00001A68:
/* 00001A68 00001AA8  7F E3 FB 78 */	mr r3, r31
/* 00001A6C 00001AAC  48 00 00 01 */	bl OSRestoreInterrupts
/* 00001A70 00001AB0  38 00 00 01 */	li r0, 0x1
/* 00001A74 00001AB4  90 00 00 00 */	stw r0, recalibrated@sda21(r0)
/* 00001A78 00001AB8  38 60 00 00 */	li r3, 0x0
/* 00001A7C 00001ABC  48 00 00 18 */	b .L_00001A94
.L_00001A80:
/* 00001A80 00001AC0  7F C3 F3 78 */	mr r3, r30
/* 00001A84 00001AC4  48 00 00 10 */	b .L_00001A94
.L_00001A88:
/* 00001A88 00001AC8  38 00 00 00 */	li r0, 0x0
/* 00001A8C 00001ACC  90 00 00 00 */	stw r0, recalibrated@sda21(r0)
/* 00001A90 00001AD0  38 60 00 01 */	li r3, 0x1
.L_00001A94:
/* 00001A94 00001AD4  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 00001A98 00001AD8  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 00001A9C 00001ADC  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 00001AA0 00001AE0  38 21 00 28 */	addi r1, r1, 0x28
/* 00001AA4 00001AE4  7C 08 03 A6 */	mtlr r0
/* 00001AA8 00001AE8  4E 80 00 20 */	blr
.endfn PADOnReset

.fn SamplingHandler, global
/* 00001AAC 00001AEC  7C 08 02 A6 */	mflr r0
/* 00001AB0 00001AF0  90 01 00 04 */	stw r0, 0x4(r1)
/* 00001AB4 00001AF4  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 00001AB8 00001AF8  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 00001ABC 00001AFC  3B E4 00 00 */	addi r31, r4, 0x0
/* 00001AC0 00001B00  80 00 00 00 */	lwz r0, SamplingCallback@sda21(r0)
/* 00001AC4 00001B04  28 00 00 00 */	cmplwi r0, 0x0
/* 00001AC8 00001B08  41 82 00 30 */	beq .L_00001AF8
/* 00001ACC 00001B0C  38 61 00 10 */	addi r3, r1, 0x10
/* 00001AD0 00001B10  48 00 00 01 */	bl OSClearContext
/* 00001AD4 00001B14  38 61 00 10 */	addi r3, r1, 0x10
/* 00001AD8 00001B18  48 00 00 01 */	bl OSSetCurrentContext
/* 00001ADC 00001B1C  81 80 00 00 */	lwz r12, SamplingCallback@sda21(r0)
/* 00001AE0 00001B20  7D 88 03 A6 */	mtlr r12
/* 00001AE4 00001B24  4E 80 00 21 */	blrl
/* 00001AE8 00001B28  38 61 00 10 */	addi r3, r1, 0x10
/* 00001AEC 00001B2C  48 00 00 01 */	bl OSClearContext
/* 00001AF0 00001B30  7F E3 FB 78 */	mr r3, r31
/* 00001AF4 00001B34  48 00 00 01 */	bl OSSetCurrentContext
.L_00001AF8:
/* 00001AF8 00001B38  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 00001AFC 00001B3C  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 00001B00 00001B40  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 00001B04 00001B44  7C 08 03 A6 */	mtlr r0
/* 00001B08 00001B48  4E 80 00 20 */	blr
.endfn SamplingHandler

.fn PADSetSamplingCallback, global
/* 00001B0C 00001B4C  7C 08 02 A6 */	mflr r0
/* 00001B10 00001B50  28 03 00 00 */	cmplwi r3, 0x0
/* 00001B14 00001B54  90 01 00 04 */	stw r0, 0x4(r1)
/* 00001B18 00001B58  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00001B1C 00001B5C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00001B20 00001B60  83 E0 00 00 */	lwz r31, SamplingCallback@sda21(r0)
/* 00001B24 00001B64  90 60 00 00 */	stw r3, SamplingCallback@sda21(r0)
/* 00001B28 00001B68  41 82 00 14 */	beq .L_00001B3C
/* 00001B2C 00001B6C  3C 60 00 00 */	lis r3, SamplingHandler@ha
/* 00001B30 00001B70  38 63 00 00 */	addi r3, r3, SamplingHandler@l
/* 00001B34 00001B74  48 00 00 01 */	bl SIRegisterPollingHandler
/* 00001B38 00001B78  48 00 00 10 */	b .L_00001B48
.L_00001B3C:
/* 00001B3C 00001B7C  3C 60 00 00 */	lis r3, SamplingHandler@ha
/* 00001B40 00001B80  38 63 00 00 */	addi r3, r3, SamplingHandler@l
/* 00001B44 00001B84  48 00 00 01 */	bl SIUnregisterPollingHandler
.L_00001B48:
/* 00001B48 00001B88  7F E3 FB 78 */	mr r3, r31
/* 00001B4C 00001B8C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00001B50 00001B90  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00001B54 00001B94  38 21 00 18 */	addi r1, r1, 0x18
/* 00001B58 00001B98  7C 08 03 A6 */	mtlr r0
/* 00001B5C 00001B9C  4E 80 00 20 */	blr
.endfn PADSetSamplingCallback

.fn __PADDisableRecalibration, global
/* 00001B60 00001BA0  7C 08 02 A6 */	mflr r0
/* 00001B64 00001BA4  90 01 00 04 */	stw r0, 0x4(r1)
/* 00001B68 00001BA8  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 00001B6C 00001BAC  93 E1 00 14 */	stw r31, 0x14(r1)
/* 00001B70 00001BB0  93 C1 00 10 */	stw r30, 0x10(r1)
/* 00001B74 00001BB4  7C 7E 1B 78 */	mr r30, r3
/* 00001B78 00001BB8  48 00 00 01 */	bl OSDisableInterrupts
/* 00001B7C 00001BBC  3C 80 80 00 */	lis r4, 0x8000
/* 00001B80 00001BC0  88 04 30 E3 */	lbz r0, 0x30e3(r4)
/* 00001B84 00001BC4  54 00 06 73 */	rlwinm. r0, r0, 0, 25, 25
/* 00001B88 00001BC8  41 82 00 0C */	beq .L_00001B94
/* 00001B8C 00001BCC  3B E0 00 01 */	li r31, 0x1
/* 00001B90 00001BD0  48 00 00 08 */	b .L_00001B98
.L_00001B94:
/* 00001B94 00001BD4  3B E0 00 00 */	li r31, 0x0
.L_00001B98:
/* 00001B98 00001BD8  3C 80 80 00 */	lis r4, 0x8000
/* 00001B9C 00001BDC  88 04 30 E3 */	lbz r0, 0x30e3(r4)
/* 00001BA0 00001BE0  70 00 00 BF */	andi. r0, r0, 0xbf
/* 00001BA4 00001BE4  2C 1E 00 00 */	cmpwi r30, 0x0
/* 00001BA8 00001BE8  98 04 30 E3 */	stb r0, 0x30e3(r4)
/* 00001BAC 00001BEC  41 82 00 10 */	beq .L_00001BBC
/* 00001BB0 00001BF0  88 04 30 E3 */	lbz r0, 0x30e3(r4)
/* 00001BB4 00001BF4  60 00 00 40 */	ori r0, r0, 0x40
/* 00001BB8 00001BF8  98 04 30 E3 */	stb r0, 0x30e3(r4)
.L_00001BBC:
/* 00001BBC 00001BFC  48 00 00 01 */	bl OSRestoreInterrupts
/* 00001BC0 00001C00  7F E3 FB 78 */	mr r3, r31
/* 00001BC4 00001C04  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 00001BC8 00001C08  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 00001BCC 00001C0C  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 00001BD0 00001C10  38 21 00 18 */	addi r1, r1, 0x18
/* 00001BD4 00001C14  7C 08 03 A6 */	mtlr r0
/* 00001BD8 00001C18  4E 80 00 20 */	blr
.endfn __PADDisableRecalibration

# 0x00000000 - 0x00000098
.data
.balign 8

.obj ResetFunctionInfo, global
	.4byte PADOnReset
	.4byte 0x0000007F
	.4byte 0x00000000
	.4byte 0x00000000
	.4byte 0x00F60200
	.4byte 0x000E1300
	.4byte 0x001E0900
	.4byte 0x00250700
	.4byte 0x00340500
	.4byte 0x00410400
	.4byte 0x00570300
	.4byte 0x00570300
	.4byte 0x00570300
	.4byte 0x00830200
	.4byte 0x00830200
	.4byte 0x00830200
	.4byte 0x01280200
	.4byte 0x000D1800
	.4byte 0x001A0C00
	.4byte 0x00270800
	.4byte 0x00340600
	.4byte 0x003E0500
	.4byte 0x004E0400
	.4byte 0x00680300
	.4byte 0x00680300
	.4byte 0x00680300
	.4byte 0x00680300
	.4byte 0x009C0200
	.4byte 0x50414453
	.4byte 0x65745361
	.4byte 0x6D706C69
	.4byte 0x6E675261
	.4byte 0x74653A20
	.4byte 0x756E6B6E
	.4byte 0x6F776E20
	.4byte 0x54562066
	.4byte 0x6F726D61
	.4byte 0x74000000
.endobj ResetFunctionInfo

# 0x00000000 - 0x00000050
.section .bss, "wa", @nobits
.balign 8

.obj Type, global
	.skip 0x10
.endobj Type

.obj Origin, global
	.skip 0x40
.endobj Origin

# 0x00000000 - 0x00000028
.section .sdata, "wa"
.balign 8

.obj ResettingChan, global
	.4byte 0x00000020
.endobj ResettingChan

.obj XPatchBits, global
	.4byte 0xF0000000
.endobj XPatchBits

.obj AnalogMode, global
	.4byte 0x00000300
.endobj AnalogMode

.obj Spec, global
	.4byte 0x00000005
.endobj Spec

.obj MakeStatus, global
	.4byte SPEC2_MakeStatus
.endobj MakeStatus

.obj CmdReadOrigin, global
	.4byte 0x41000000
.endobj CmdReadOrigin

.obj CmdCalibrate, global
	.4byte 0x42000000
.endobj CmdCalibrate

.obj PAD_804D5C54, global
	.4byte 0x5061642E
	.4byte 0x63000000
	.4byte 0x00000000
.endobj PAD_804D5C54

# 0x00000000 - 0x00000030
.section .sbss, "wa", @nobits
.balign 8

.obj Initialized, global
	.skip 0x4
.endobj Initialized

.obj EnabledBits, global
	.skip 0x4
.endobj EnabledBits

.obj ResettingBits, global
	.skip 0x4
.endobj ResettingBits

.obj RecalibrateBits, global
	.skip 0x4
.endobj RecalibrateBits

.obj WaitingBits, global
	.skip 0x4
.endobj WaitingBits

.obj CheckingBits, global
	.skip 0x4
.endobj CheckingBits

.obj PendingBits, global
	.skip 0x4
.endobj PendingBits

.obj SamplingRate, global
	.skip 0x4
.endobj SamplingRate

.obj SamplingCallback, global
	.skip 0x4
.endobj SamplingCallback

.obj recalibrated, global
	.skip 0x4
.endobj recalibrated

.obj __PADSpec, global
	.skip 0x8
.endobj __PADSpec
