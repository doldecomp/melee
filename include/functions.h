#ifndef _functions_h_
#define _functions_h_

#include <dolphin/types.h>
#include <dolphin/mtx/mtxtypes.h>

typedef struct _HSD_GObj HSD_GObj;
typedef struct _Fighter Fighter;
typedef struct _Item Item;
typedef struct _Article Article;

/* .init section */
// ? memcpy(?);
// ? TRK_memcpy(?);
// ? TRK_memset(?);
// ? gTRKInterruptVectorTable(?);
// ? func_800051CC(?);
// ? __check_pad3(?);
// ? __start(?);
// ? func_80005340(?);
// ? func_8000535C(?);
// ? func_8000541C(?);
// ? func_8000543C(?);

/* .text section */
// ? Command_Execute(?);
// ? func_80005BB0(?);
// ? func_80005C44(?);
// ? func_80005EBC(?);
// ? func_80005FC0(?);
// ? func_80006094(?);
// ? func_800067F8(?);
// ? func_80006E58(?);
// ? func_800077A0(?);
// ? func_80007AFC(?);
// ? func_80007B78(?);
// ? func_80007BCC(?);
void *HSD_JObjUnkMtxPtr(); // asm/melee/lb/lbcollision.s
// ? func_80007DD8(?);
// ? func_80007ECC(?);
// ? func_8000805C(?);
s32 func_80008248(s32, struct ftHurt *, void *, f32, f32, f32);
// ? func_800083C4(?);
// ? func_80008428(?);
// ? func_80008434(?);
// ? func_80008440(?);
// ? func_800084FC(?);
// ? func_80008688(?);
// ? func_80008820(?);
// ? func_800089B8(?);
// ? func_80008A5C(?);
// ? func_80008D30(?);
// ? func_80008DA4(?);
// ? func_80008FC8(?);
// ? func_800096B4(?);
// ? func_80009DD4(?);
// ? func_80009F54(?);
// ? func_8000A044(?);
// ? func_8000A10C(?);
// ? func_8000A1A8(?);
// ? func_8000A244(?);
// ? func_8000A460(?);
// ? func_8000A584(?);
// ? func_8000A78C(?);
// ? func_8000A95C(?);
// ? func_8000AB2C(?);
// ? func_8000ACFC(?);
// ? lbLang_GetLanguageSetting(?);
// ? lbLang_SetLanguageSetting(?);
// ? lbLang_IsSettingJP(?);
// ? lbLang_IsSettingUS(?);
// ? lbLang_GetSavedLanguage(?);
// ? lbLang_SetSavedLanguage(?);
// ? lbLang_IsSavedLanguageJP(?);
// ? lbLang_IsSavedLanguageUS(?);
// ? func_8000AEC8(?);
// ? func_8000AEE4(?);
// ? func_8000AF24(?);
// ? func_8000AF74(?);
// ? func_8000AFBC(?);
// ? func_8000B028(?);
// ? func_8000B074(?);
// ? func_8000B09C(?);
// ? func_8000B134(?);
void func_8000B1CC(struct _HSD_JObj *, Vec *, Vec *);
// ? func_8000B4FC(?);
// ? func_8000B5DC(?);
// ? func_8000B6A4(?);
// ? func_8000B760(?);
// ? func_8000B804(?);
// ? func_8000BA0C(?);
// ? func_8000BA44(?);
// ? func_8000BB24(?);
// ? func_8000BC04(?);
// ? func_8000BD28(?);
f32 func_8000BDB4(struct _HSD_JObj *);
// ? func_8000BE40(?);
// ? func_8000BECC(?);
// ? func_8000BFF0(?);
// ? func_8000C07C(?);
// ? func_8000C0E8(?);
// ? func_8000C160(?);
void func_8000C1C0(struct _HSD_JObj *, struct _HSD_JObj *);
void func_8000C228(struct _HSD_JObj *, struct _HSD_JObj *);
// ? func_8000C290(?);
// ? func_8000C2F8(?);
// ? func_8000C390(?);
void func_8000C420(struct _HSD_JObj *, u32, f32);
// ? func_8000C490(?);
// ? func_8000C7BC(?);
// ? func_8000C868(?);
// ? func_8000CB60(?);
// ? func_8000CC5C(?);
// ? func_8000CC8C(?);
// ? func_8000CCA4(?);
// ? func_8000CCBC(?);
// ? func_8000CD60(?);
// ? func_8000CD90(?);
// ? func_8000CDA8(?);
// ? func_8000CDC0(?);
// ? func_8000CE30(?);
// ? func_8000CE40(?);
// ? func_8000CE50(?);
// ? func_8000CEE0(?);
// ? func_8000CF74(?);
// ? func_8000D008(?);
s32 func_8000D148(f32, f32, f32, f32, f32, f32, f32);
// ? func_8000D2EC(?);
// ? func_8000D3B0(?);
// ? func_8000D46C(?);
// ? func_8000D4A0(?);
// ? func_8000D4C4(?);
// ? func_8000D4F8(?);
// ? func_8000D530(?);
// ? func_8000D5BC(?);
// ? lbvector_Angle(?);
// ? lbvector_AngleXY(?);
// ? lbvector_RotateAboutUnitAxis(?);
// ? func_8000DB00(?);
// ? lbvector_Mirror(?);
// ? lbvector_CosAngle(?);
// ? lbvector_Lerp(?);
// ? func_8000DE38(?);
// ? lbvector_EulerAnglesFromONB(?);
// ? lbvector_EulerAnglesFromPartialONB(?);
// ? lbvector_ApplyEulerRotation(?);
// ? lbvector_sqrtf_accurate(?);
// ? lbvector_WorldToScreen(?);
// ? lbvector_CreateEulerMatrix(?);
// ? lbvector_8000E838(?);
void func_8000E9F0(Vec *, s32, f32);
void func_8000ED54();
void func_8000EE8C();
// ? func_8000EEE0(?);
// ? func_8000EFEC(?);
// ? func_8000F214(?);
// ? func_8000F38C(?);
// ? func_8000F9F8(?);
// ? func_8000FA94(?);
// ? func_8000FCDC(?);
// ? func_8000FD18(?);
// ? func_8000FD48(?);
// ? func_800100B0(?);
// ? func_800101C8(?);
// ? func_800103B8(?);
// ? func_800103D8(?);
void func_8001044C(void *, void *, s32, f32, s32, s32, s32, s32);
// ? func_800115F4(?);
// ? func_80011710(?);
// ? func_800117F4(?);
void func_800119DC(Vec *, s32, f32, f32, f32);
void func_80011A50(Vec *, s32, f32, f32, f32, f32, f32, f32, f32);
// ? func_80011ABC(?);
// ? func_80011AC4(?);
// ? func_80011B74(?);
// ? func_80011C18(?);
// ? func_80011E24(?);
// ? func_8001204C(?);
// ? func_800121FC(?);
// ? func_800122C8(?);
// ? func_800122F0(?);
// ? func_8001271C(?);
// ? func_8001285C(?);
// ? func_80012994(?);
// ? func_800138CC(?);
// ? func_800138D8(?);
// ? func_800138EC(?);
// ? func_80013B14(?);
// ? func_80014258(?);
// ? func_80014498(?);
// ? func_800144C8(?);
// ? func_80014534(?);
void func_80014574(u8, s32, s32, s32);
void func_800145C0(u8);
// ? func_800145F4(?);
// ? func_80014638(?);
// ? func_80014770(?);
// ? func_800149E0(?);
// ? func_80014ABC(?);
// ? func_80014BD0(?);
// ? func_80014D2C(?);
// ? func_80014E24(?);
// ? func_80014EEC(?);
// ? func_80014F7C(?);
// ? func_80014FC8(?);
// ? func_800150F0(?);
// ? func_8001529C(?);
// ? func_80015320(?);
// ? func_800154BC(?);
// ? func_800154D4(?);
// ? func_800155A4(?);
// ? func_8001564C(?);
// ? func_800158D0(?);
// ? func_800158E8(?);
// ? func_80015900(?);
// ? func_80015BB8(?);
struct _HSD_Archive *func_80015BD0(s32, s32);
// ? func_80015CA8(?);
// ? func_80015D6C(?);
// ? func_80015DF8(?);
// ? func_80015F3C(?);
// ? lbFile_800161A0(?);
// ? func_800161C4(?);
// ? func_80016204(?);
// ? func_8001634C(?);
// ? func_800163D8(?);
// ? func_800164A4(?);
// ? func_80016580(?);
// ? func_8001668C(?);
// ? func_80016760(?);
// ? func_800168A0(?);
// ? lbArchive_InitializeDAT(?);
// ? func_80016AF0(?);
// ? func_80016BE0(?);
void func_80016C64(char *, void **, char *, s32, ...); // from lbarchive.s, vararg may start earlier
void *func_80016DBC(void *, ...);
// ? func_80016EFC(?);
// ? func_80016F80(?);
// ? func_80017040(?);
s32 func_800171CC(void *, ...);
// ? func_80017340(?);
// ? func_800174BC(?);
// ? func_800174E8(?);
// ? func_80017598(?);
// ? func_80017644(?);
// ? func_80017700(?);
// ? func_80017740(?);
// ? func_800178E8(?);
// ? func_80017960(?);
// ? func_80017AB0(?);
// ? func_80017CC4(?);
// ? func_80017E64(?);
// ? func_80017EBC(?);
// ? func_8001819C(?);
// ? func_8001822C(?);
// ? func_8001823C(?);
// ? func_80018254(?);
// ? func_800187F4(?);
// ? func_800189EC(?);
// ? func_80018A2C(?);
// ? func_80018C2C(?);
// ? func_80018C6C(?);
// ? func_80018CF4(?);
// ? func_80018F58(?);
// ? func_80018F68(?);
// ? func_80019230(?);
// ? func_800192A8(?);
// ? func_800195D0(?);
// ? func_80019628(?);
// ? func_80019880(?);
// ? func_80019894(?);
// ? func_800198E0(?);
// ? func_80019900(?);
// ? func_80019A30(?);
// ? func_80019A48(?);
// ? func_80019AAC(?);
// ? func_80019BB8(?);
// ? func_80019C38(?);
// ? func_80019CB0(?);
// ? func_80019EF0(?);
// ? func_8001A184(?);
// ? func_8001A3A4(?);
// ? func_8001A4CC(?);
// ? func_8001A594(?);
// ? func_8001A860(?);
// ? func_8001A8A4(?);
// ? func_8001A9CC(?);
// ? func_8001AAE4(?);
// ? func_8001AC04(?);
// ? func_8001ACEC(?);
// ? func_8001AE38(?);
// ? func_8001AF84(?);
// ? func_8001B068(?);
// ? func_8001B14C(?);
// ? func_8001B614(?);
// ? func_8001B6E0(?);
// ? func_8001B6F8(?);
// ? func_8001B760(?);
// ? func_8001B7E0(?);
// ? func_8001B8C8(?);
// ? func_8001B99C(?);
// ? func_8001BA44(?);
// ? func_8001BB48(?);
// ? func_8001BC18(?);
// ? func_8001BD34(?);
// ? func_8001BE30(?);
// ? func_8001BF04(?);
// ? func_8001BFD8(?);
// ? func_8001C0F4(?);
// ? func_8001C2D8(?);
// ? func_8001C404(?);
// ? func_8001C4A8(?);
// ? func_8001C550(?);
// ? func_8001C5A4(?);
// ? func_8001C5BC(?);
// ? func_8001C600(?);
// ? func_8001C658(?);
// ? func_8001C820(?);
// ? func_8001C87C(?);
// ? func_8001C8BC(?);
// ? func_8001CAF4(?);
// ? func_8001CBAC(?);
// ? func_8001CBBC(?);
// ? func_8001CC4C(?);
// ? func_8001CC84(?);
// ? func_8001CDB4(?);
// ? func_8001CE00(?);
// ? func_8001CF18(?);
// ? func_8001D164(?);
// ? func_8001D1F4(?);
// ? func_8001D21C(?);
// ? func_8001D2BC(?);
// ? func_8001D338(?);
// ? func_8001D350(?);
// ? func_8001D394(?);
// ? func_8001D3B0(?);
// ? func_8001D3CC(?);
// ? func_8001D3E8(?);
// ? func_8001D40C(?);
// ? func_8001D4A4(?);
// ? func_8001D5FC(?);
// ? func_8001D7B0(?);
// ? func_8001DA5C(?);
// ? func_8001DC0C(?);
// ? func_8001DE8C(?);
// ? func_8001DF20(?);
// ? func_8001DF6C(?);
// ? func_8001E058(?);
// ? func_8001E204(?);
// ? func_8001E210(?);
// ? func_8001E218(?);
// ? func_8001E27C(?);
// ? func_8001E290(?);
// ? func_8001E2F8(?);
// ? func_8001E6D8(?);
// ? func_8001E7E8(?);
f32 func_8001E8F8(u32);
// ? func_8001F410(?);
// ? func_8001F578(?);
// ? func_8001F5C4(?);
// ? func_8001F5D4(?);
// ? func_8001F5E4(?);
// ? func_8001F5F4(?);
// ? func_8001F604(?);
// ? func_8001F614(?);
// ? func_8001F624(?);
// ? func_8001F800(?);
// ? func_8001F87C(?);
// ? func_8001F890(?);
// ? func_8001FAA0(?);
// ? func_800205F0(?);
// ? func_8002063C(?);
// ? func_80020688(?);
// ? func_800206D4(?);
// ? func_800208EC(?);
// ? func_800209F4(?);
// ? func_80020E38(?);
// ? func_80021410(?);
// ? func_80021A10(?);
// ? func_80021A18(?);
s32 func_80021C48();
// ? func_8002305C(?);
// ? func_80023090(?);
// ? func_800230C8(?);
// ? func_80023130(?);
// ? func_80023220(?);
// ? func_800233EC(?);
// ? func_80023694(?);
void func_800236B8(s32);
// ? func_800236DC(?);
// ? func_80023710(?);
// ? func_80023730(?);
u32 func_800237A8(u32, u32, u32);
// ? func_80023870(?);
// ? func_8002392C(?);
// ? func_80023968(?);
// ? func_80023A44(?);
// ? func_80023B24(?);
void func_80023F28();
// ? func_80024030(?);
// ? func_800240B4(?);
// ? func_8002411C(?);
// ? func_80024184(?);
// ? func_80024304(?);
void func_8002438C(s32);
// ? func_800243F4(?);
// ? func_800245D4(?);
// ? func_800245F4(?);
// ? func_80024614(?);
// ? func_80024634(?);
void func_80024B1C(s32, s32);
void func_80024B58(s32, s32);
// ? func_80024B94(?);
// ? func_80024BD0(?);
// ? func_80024C08(?);
// ? func_80024C84(?);
// ? func_80024D50(?);
// ? func_80024D78(?);
// ? func_80024DC4(?);
// ? func_80024E50(?);
// ? func_80024E84(?);
// ? func_80024F08(?);
// ? func_80024F6C(?);
// ? func_80024FDC(?);
// ? func_80024FF4(?);
// ? func_8002500C(?);
// ? func_80025038(?);
// ? func_80025064(?);
// ? func_80025098(?);
// ? func_800263E8(?);
// ? func_800264E4(?);
// ? func_80026510(?);
// ? func_800265C4(?);
// ? func_80026E84(?);
// ? func_80026EBC(?);
// ? func_80026F2C(?);
// ? func_8002702C(?);
// ? func_80027168(?);
// ? func_80027648(?);
// ? func_8002785C(?);
// ? func_80027AB0(?);
// ? func_80027DBC(?);
// ? func_80027DF8(?);
// ? func_8002835C(?);
// ? func_8002838C(?);
// ? func_80028690(?);
// ? func_80028B2C(?);
// ? func_80028B4C(?);
// ? func_80028B6C(?);
// ? func_80028B90(?);
// ? func_80028B9C(?);
// ? func_80028F5C(?);
struct _CameraBox *func_80029020();
// ? func_80029044(?);
void func_800290D4();
// ? func_80029124(?);
// ? func_8002928C(?);
// ? func_800293E0(?);
// ? func_8002958C(?);
// ? func_80029AAC(?);
// ? func_80029BC4(?);
// ? func_80029C88(?);
// ? func_80029CF8(?);
// ? func_8002A0C0(?);
void func_8002A278(f32 x, f32 y);
// ? func_8002A28C(?);
// ? func_8002A4AC(?);
// ? func_8002A768(?);
// ? func_8002AF68(?);
// ? func_8002B0E0(?);
// ? func_8002B1F8(?);
// ? func_8002B694(?);
// ? func_8002BA00(?);
// ? func_8002BAA8(?);
// ? func_8002BC78(?);
// ? func_8002BD88(?);
// ? func_8002C010(?);
// ? func_8002C1A8(?);
// ? func_8002C5B4(?);
// ? func_8002CB0C(?);
// ? func_8002DFE4(?);
// ? func_8002E158(?);
// ? func_8002E234(?);
void func_8002E6FC(u8);
// ? func_8002E818(?);
void func_8002E948(u32 (*)(Vec *));
// ? func_8002EA64(?);
void func_8002EB5C(f32);
void func_8002EC7C(f32);
void func_8002ED9C(f32);
void func_8002EEC8(f32);
void func_8002EF14(void);
void func_8002F0E4(s32);
s32 func_8002F260(void);
void func_8002F274(void);
// ? func_8002F3AC(?);
void func_8002F474(void);
// ? func_8002F4D4(?);
// ? func_8002F73C(?);
// ? func_8002F760(?);
// ? func_8002F784(?);
// ? func_8002F7AC(?);
// ? func_8002F8F4(?);
// ? func_8002F9E4(?);
// ? func_8002FC7C(?);
// ? func_8002FE38(?);
// ? func_8002FEEC(?);
// ? func_8003006C(?);
// ? func_800300F0(?);
// ? func_8003010C(?);
// ? func_80030130(?);
// ? func_80030154(?);
// ? func_80030178(?);
// ? func_8003019C(?);
// ? func_80030688(?);
// ? func_80030730(?);
// ? func_80030740(?);
// ? func_80030758(?);
// ? func_80030788(?);
// ? func_800307AC(?);
// ? func_800307D0(?);
void *func_80030A50(void);
// ? func_80030A60(?);
// ? func_80030A78(?);
// ? func_80030A8C(?);
// ? func_80030AA4(?);
// ? func_80030AC4(?);
// ? func_80030AE0(?);
// ? func_80030AF8(?);
// ? func_80030B0C(?);
// ? func_80030B24(?);
// ? func_80030B38(?);
// ? func_80030B50(?);
// ? func_80030B64(?);
// ? func_80030B7C(?);
// ? func_80030B90(?);
// ? func_80030BA8(?);
// ? func_80030BBC(?);
// ? func_80030CD8(?);
BOOL func_80030CFC(struct _CameraBox *, f32);
// ? func_80030DE4(?);
// ? func_80030DF8(?);
// ? func_80030E10(?);
// ? func_80030E34(?);
// ? func_80030E44(?);
// ? func_80031044(?);
// ? func_80031060(?);
// ? func_80031074(?);
// ? func_8003108C(?);
// ? func_800310A0(?);
// ? func_800310B8(?);
// ? func_800310E8(?);
f32 func_80031144();
// ? func_80031154(?);
// ? func_8003118C(?);
// ? func_800311CC(?);
// ? func_800311DC(?);
// ? func_800311EC(?);
// ? func_80031328(?);
// ? func_800313E0(?);
// ? func_800315C8(?);
// ? func_80031618(?);
// ? func_800316B4(?);
// ? Player_GetPtrForSlot(?);
// ? Player_80031790(?);
// ? Player_80031848(?);
// ? Player_80031900(?);
// ? Player_800319C4(?);
// ? Player_80031AD0(?);
// ? Player_80031CB0(?);
// ? Player_80031D2C(?);
// ? Player_80031DA8(?);
// ? Player_80031DC8(?);
// ? Player_80031EBC(?);
// ? Player_80031FB0(?);
// ? Player_80032070(?);
// ? Player_8003219C(?);
// ? Player_8003221C(?);
// ? Player_GetPlayerState(?);
// ? Player_GetPlayerCharacter(?);
// ? Player_SetPlayerCharacter(?);
s32 Player_GetPlayerSlotType(s32);
// ? Player_8003248C(?);
// ? Player_SetSlottype(?);
// ? Player_800325C8(?);
// ? Player_80032610(?);
// ? Player_LoadPlayerCoords(?);
// ? Player_80032768(?);
// ? Player_80032828(?);
// ? Player_800328D4(?);
// ? Player_80032A04(?);
// ? Player_SetPlayerAndEntityFacingDirection(?);
// ? Player_80032BB0(?);
// ? Player_SetScale(?);
// ? Player_GetSpawnPlatformPos(?);
// ? Player_SetSpawnPlatformPos(?);
// ? Player_GetSomePos(?);
// ? Player_SetSomePos(?);
// ? Player_80032F30(?);
// ? Player_80032FA4(?);
// ? Player_GetFacingDirection(?);
// ? Player_SetFacingDirection(?);
// ? Player_SetFacingDirectionConditional(?);
// ? Player_GetCostumeId(?);
// ? Player_SetCostumeId(?);
// ? Player_GetControllerIndex(?);
// ? Player_SetControllerIndex(?);
// ? Player_GetTeam(?);
// ? Player_SetTeam(?);
// ? Player_GetPlayerId(?);
// ? Player_SetPlayerId(?);
// ? Player_GetCpuLevel(?);
// ? Player_SetPlayerAndEntityCpuLevel(?);
// ? Player_GetCpuType(?);
// ? Player_SetPlayerAndEntityCpuType(?);
// ? Player_GetHandicap(?);
// ? Player_SetHandicap(?);
// ? Player_GetUnk50(?);
// ? Player_GetAttackRatio(?);
// ? Player_SetAttackRatio(?);
// ? Player_GetDefenseRatio(?);
// ? Player_SetDefenseRatio(?);
// ? Player_GetModelScale(?);
// ? Player_SetModelScale(?);
// ? Player_80033BB8(?);
// ? Player_GetStocks(?);
// ? Player_GetP1Stock(?);
// ? Player_SetStocks(?);
// ? Player_LoseStock(?);
// ? Player_GetCoins(?);
// ? Player_SetCoins(?);
// ? Player_GetTotalCoins(?);
// ? Player_SetTotalCoins(?);
// ? Player_GetUnk98(?);
// ? Player_SetUnk98(?);
// ? Player_GetUnk9C(?);
// ? Player_SetUnk9C(?);
// ? Player_GetEntity(?);
// ? Player_GetEntityAtIndex(?);
// ? Player_SwapTransformedStates(?);
// ? Player_GetDamage(?);
// ? Player_SetHUDDamage(?);
// ? Player_SetHPByIndex(?);
// ? Player_GetOtherStamina(?);
// ? Player_SetOtherStamina(?);
// ? Player_GetRemainingHP(?);
// ? Player_GetMoreFlagsBit2(?);
// ? Player_SetMoreFlagsBit2(?);
// ? Player_GetMoreFlagsBit3(?);
// ? Player_SetMoreFlagsBit3(?);
// ? Player_SetMoreFlagsBit4(?);
// ? Player_GetMoreFlagsBit4(?);
// ? Player_GetMoreFlagsBit5(?);
// ? Player_SetMoreFlagsBit5(?);
// ? Player_GetMoreFlagsBit6(?);
// ? Player_SetMoreFlagsBit6(?);
// ? Player_GetFlagsAEBit0(?);
// ? Player_SetFlagsAEBit0(?);
// ? Player_GetRemainingHPByIndex(?);
// ? Player_GetFalls(?);
// ? Player_GetFallsByIndex(?);
// ? Player_SetFalls(?);
// ? Player_SetFallsByIndex(?);
// ? Player_GetKOsByPlayerIndex(?);
// ? Player_UpdateKOsBySlot(?);
// ? Player_GetMatchFrameCount(?);
// ? Player_UpdateMatchFrameCount(?);
// ? Player_GetSuicideCount(?);
// ? Player_SetSuicideCount(?);
// ? Player_IncSuicideCount(?);
// ? Player_800353BC(?);
// ? Player_8003544C(?);
// ? Player_SetFlagsBit0(?);
// ? Player_GetNametagSlotID(?);
// ? Player_SetNametagSlotID(?);
// ? Player_GetFlagsBit1(?);
// ? Player_SetFlagsBit1(?);
// ? Player_UnsetFlagsBit1(?);
// ? Player_GetFlagsBit3(?);
// ? Player_SetFlagsBit3(?);
// ? Player_GetFlagsBit4(?);
// ? Player_GetFlagsBit5(?);
// ? Player_SetFlagsBit5(?);
// ? Player_GetFlagsBit6(?);
// ? Player_SetFlagsBit6(?);
// ? Player_GetFlagsBit7(?);
// ? Player_SetFlagsBit7(?);
// ? Player_GetMoreFlagsBit0(?);
// ? Player_GetMoreFlagsBit1(?);
// ? Player_SetMoreFlagsBit1(?);
// ? Player_GetUnk4D(?);
// ? Player_SetUnk4D(?);
// ? Player_GetFlagsAEBit1(?);
// ? Player_SetFlagsAEBit1(?);
// ? Player_GetUnk4C(?);
// ? Player_SetUnk4C(?);
// ? Player_80036058(?);
// ? Player_800360D8(?);
// ? Player_SetStructFunc(?);
// ? Player_GetTotalAttackCountPtr(?);
// ? Player_GetStaleMoveTableIndexPtr(?);
// ? Player_GetUnk6A8Ptr(?);
// ? Player_GetStaleMoveTableIndexPtr2(?);
// ? Player_80036394(?);
// ? Player_80036428(?);
// ? Player_SetUnk45(?);
// ? Player_GetUnk45(?);
// ? Player_UpdateJoystickCountByIndex(?);
// ? Player_GetJoystickCountByIndex(?);
// ? Player_800366DC(?);
// ? Player_80036790(?);
// ? Player_80036844(?);
// ? Player_800368F8(?);
// ? Player_80036978(?);
// ? Player_InitOrResetPlayer(?);
// ? Player_80036CF0(?);
// ? Player_80036D24(?);
// ? Player_InitAllPlayers(?);
// ? Player_80036DA4(?);
// ? Player_80036DD8(?);
// ? Player_80036E20(?);
// ? Player_80036EA0(?);
// ? Player_80036F34(?);
// ? Player_80037054(?);
// ? func_8003715C(?);
// ? func_80037168(?);
// ? func_80037208(?);
// ? func_8003722C(?);
// ? func_800373CC(?);
// ? func_80037590(?);
// ? func_8003759C(?);
// ? func_80037B08(?);
// ? func_80037B2C(?);
// ? func_80037BC0(?);
void func_80037C60();
// ? func_80037DF4(?);
// ? func_80037ECC(?);
// ? func_80037F00(?);
// ? func_80038144(?);
// ? func_800384DC(?);
// ? func_80038628(?);
// ? func_800386D8(?);
// ? func_800386E8(?);
// ? func_80038700(?);
// ? func_80038788(?);
// ? func_80038824(?);
// ? func_80038898(?);
// ? func_80038914(?);
// ? func_8003891C(?);
// ? func_80038F10(?);
// ? func_80038FB8(?);
// ? func_8003906C(?);
// ? func_80039238(?);
// ? func_80039418(?);
// ? func_80039450(?);
// ? func_80039618(?);
// ? func_8003B044(?);
// ? func_8003B9A4(?);
// ? func_8003BD60(?);
// ? func_8003C340(?);
// ? func_8003CC84(?);
// ? func_8003D2EC(?);
// ? func_8003D514(?);
// ? func_8003D60C(?);
// ? func_8003D644(?);
// ? func_8003DF44(?);
// ? func_8003DFF4(?);
void func_8003E058(s32, s32, s32, s32);
// ? func_8003E0E8(?);
// ? func_8003E114(?);
// ? func_8003E150(?);
// ? func_8003E17C(?);
// ? func_8003E2CC(?);
// ? func_8003E334(?);
// ? func_8003E39C(?);
// ? func_8003E420(?);
// ? func_8003E4A4(?);
// ? func_8003E70C(?);
// ? func_8003E7D4(?);
// ? func_8003E854(?);
// ? func_8003E978(?);
// ? func_8003E998(?);
// ? func_8003EA08(?);
// ? func_8003EA40(?);
// ? func_8003EA74(?);
// ? func_8003EAAC(?);
// ? func_8003EB30(?);
// ? func_8003EC30(?);
void func_8003EC9C(s32, s32, f32, f32);
// ? func_8003ED0C(?);
// ? func_8003EE2C(?);
// ? func_8003F294(?);
// ? func_8003F53C(?);
// ? func_8003F654(?);
void func_8003FAA8(s32 slot, s32 index, Vec *pos, Vec *prevPos);
// ? func_8003FBFC(?);
// ? func_8003FC20(?);
// ? func_8003FC44(?);
// ? func_8003FC88(?);
// ? func_8003FDA0(?);
// ? func_8003FDC8(?);
// ? func_8003FDF4(?);
void func_8003FE1C();
// ? func_8003FE40(?);
// ? func_8003FE64(?);
// ? func_8003FED0(?);
// ? func_8003FF44(?);
void func_8003FFDC(u8, s32, u8, s32, s32);
void func_80040048(u8, s32);
// ? func_80040120(?);
// ? func_800401F0(?);
// ? func_80040270(?);
// ? func_800402D0(?);
void func_80040330();
// ? func_80040374(?);
// ? func_800403C0(?);
// ? func_800403FC(?);
// ? func_80040460(?);
// ? func_8004049C(?);
// ? func_80040614(?);
// ? func_8004065C(?);
// ? func_80040688(?);
// ? func_800407C8(?);
// ? func_80040870(?);
// ? func_80040894(?);
// ? func_800408B8(?);
// ? func_800408DC(?);
// ? func_80040900(?);
// ? func_80040924(?);
// ? func_80040948(?);
// ? func_80040A04(?);
// ? func_80040A30(?);
// ? func_80040A54(?);
// ? func_80040A78(?);
// ? func_80040A9C(?);
// ? func_80040AF0(?);
// ? func_80040B18(?);
// ? func_80040B3C(?);
// ? func_80040B64(?);
void func_80040B8C();
// ? func_80040BD8(?);
// ? func_80040BFC(?);
// ? func_80040C24(?);
// ? func_80040C48(?);
// ? func_80040C6C(?);
// ? func_80040C90(?);
// ? func_80040CB4(?);
// ? func_80040CD8(?);
// ? func_80040CFC(?);
// ? func_80040D20(?);
// ? func_80040D44(?);
// ? func_80040D68(?);
// ? func_80040D8C(?);
// ? func_80040DB8(?);
// ? func_80040DDC(?);
// ? func_80040ED4(?);
// ? func_80040FBC(?);
// ? func_800410F4(?);
void func_800411C4();
void func_80041280();
// ? func_800412D0(?);
// ? func_80041300(?);
// ? func_8004134C(?);
// ? func_8004138C(?);
// ? func_800414C0(?);
// ? func_80041524(?);
// ? func_800415B0(?);
// ? func_80041720(?);
// ? func_80041744(?);
// ? func_80041770(?);
// ? func_8004182C(?);
// ? func_800418F4(?);
// ? func_800419AC(?);
// ? func_80041B08(?);
// ? func_80041BC8(?);
// ? func_80041BFC(?);
// ? func_80041C78(?);
// ? func_80041C8C(?);
// ? func_80041DD0(?);
// ? func_80041EE4(?);
// ? func_80042078(?);
// ? func_8004220C(?);
// ? func_80042374(?);
// ? func_80042384(?);
// ? func_800424DC(?);
// ? func_8004293C(?);
// ? func_80042C58(?);
// ? func_80042D24(?);
// ? func_80042DB0(?);
// ? func_80043268(?);
// ? func_80043324(?);
// ? func_80043558(?);
// ? func_80043670(?);
// ? func_80043680(?);
// ? func_800436D8(?);
// ? func_800436E4(?);
// ? func_80043754(?);
// ? func_800439FC(?);
// ? func_80043ADC(?);
// ? func_80043BBC(?);
// ? func_80043C6C(?);
// ? func_80043E90(?);
// ? func_80043F40(?);
// ? func_80044164(?);
// ? func_800443C4(?);
// ? func_80044628(?);
// ? func_80044838(?);
// ? func_80044948(?);
// ? func_80044AD8(?);
// ? func_80044C74(?);
// ? func_80044E10(?);
// ? func_800454A4(?);
// ? func_80045B74(?);
// ? func_80046224(?);
// ? func_80046904(?);
// ? func_800471F8(?);
// ? func_8004730C(?);
// ? func_800473CC(?);
// ? func_800474E0(?);
// ? func_800475F4(?);
// ? func_800476B4(?);
// ? func_800477E0(?);
// ? func_800478F4(?);
// ? func_80047A08(?);
// ? func_80047AC8(?);
// ? func_80047BF4(?);
// ? func_80047D20(?);
// ? func_80047E14(?);
// ? func_80047F40(?);
// ? func_8004806C(?);
// ? func_80048160(?);
// ? func_80048274(?);
// ? func_80048388(?);
// ? func_80048464(?);
// ? func_80048578(?);
// ? func_80048654(?);
// ? func_80048768(?);
// ? func_80048844(?);
// ? func_800488F4(?);
// ? func_80048AB0(?);
// ? func_800491C8(?);
// ? func_80049778(?);
// ? func_80049EAC(?);
// ? func_8004A45C(?);
// ? func_8004A678(?);
// ? func_8004A908(?);
// ? func_8004AB80(?);
// ? func_8004B108(?);
// ? func_8004B21C(?);
// ? func_8004B2DC(?);
// ? func_8004B3F0(?);
// ? func_8004B4B0(?);
// ? func_8004B5C4(?);
// ? func_8004B6D8(?);
// ? func_8004B894(?);
// ? func_8004BDD4(?);
// ? func_8004C328(?);
// ? func_8004C750(?);
// ? func_8004C864(?);
// ? func_8004C91C(?);
// ? func_8004CA6C(?);
// ? func_8004CAA0(?);
// ? func_8004CAE8(?);
// ? func_8004CB30(?);
// ? func_8004CB78(?);
// ? func_8004CBC0(?);
// ? func_8004CBE8(?);
void func_8004CBF4(struct _CollData *);
// ? func_8004CC00(?);
// ? func_8004D024(?);
// ? func_8004D164(?);
// ? func_8004D16C(?);
// ? func_8004D174(?);
// ? func_8004D17C(?);
// ? func_8004D184(?);
// ? func_8004D288(?);
// ? func_8004DB78(?);
// ? func_8004DC04(?);
// ? func_8004DC90(?);
// ? func_8004DD90(?);
// ? func_8004E090(?);
// ? func_8004E398(?);
// ? func_8004E684(?);
// ? func_8004E97C(?);
// ? func_8004EBF8(?);
// ? func_8004ED5C(?);
// ? func_8004F008(?);
// ? func_8004F400(?);
// ? func_8004F8A4(?);
// ? func_8004FC2C(?);
// ? func_80050068(?);
// ? func_800501CC(?);
// ? func_8005057C(?);
// ? func_800509B8(?);
// ? func_80050D68(?);
// ? func_800511A4(?);
// ? func_800515A0(?);
// ? func_8005199C(?);
// ? func_80051BA8(?);
s32 func_80051EC8(Vec *, s32, s32, s32, s32, s32, s32, f32, f32, f32, f32);
// ? func_800524DC(?);
// ? func_80052508(?);
// ? func_80052534(?);
// ? func_80052700(?);
// ? func_800528CC(?);
// ? func_80052A98(?);
// ? func_80052C64(?);
// ? func_80052E30(?);
// ? func_80052FFC(?);
// ? func_800531C8(?);
// ? func_80053394(?);
// ? func_80053448(?);
// ? func_800534FC(?);
// ? func_800536CC(?);
// ? func_8005389C(?);
// ? func_80053950(?);
// ? func_80053A04(?);
// ? func_80053BD4(?);
void func_80053DA4(u32, f32 *);
void func_80053ECC(u32, f32 *);
void func_80053FF4(s32, Vec *);
void func_80054158(s32, Vec *);
// ? func_800542BC(?);
// ? func_80054420(?);
// ? func_80054584(?);
// ? func_800546E8(?);
// ? func_8005484C(?);
// ? func_800549B0(?);
// ? func_80054B14(?);
// ? func_80054BC0(?);
// ? func_80054C6C(?);
// ? func_80054CEC(?);
// ? func_80054D68(?);
// ? func_80054DFC(?);
// ? func_80054ED8(?);
// ? func_80054F68(?);
// ? func_800552B0(?);
// ? func_8005541C(?);
// ? func_800557D0(?);
// ? func_80055C5C(?);
// ? func_80055E24(?);
// ? func_80055E9C(?);
// ? func_800565DC(?);
// ? func_8005667C(?);
// ? func_800566D8(?);
// ? func_800566F8(?);
// ? func_80056710(?);
// ? func_80056758(?);
s32 func_800567C0(s32 /*wallID?*/, Vec * /*ecb_side_vertex?*/, Vec *result);
// ? func_800569EC(?);
// ? func_80056A1C(?);
// ? func_80056A54(?);
// ? func_80056A8C(?);
// ? func_80056AC4(?);
// ? func_80056AFC(?);
// ? func_80056B34(?);
// ? func_80056B6C(?);
// ? func_80056C54(?);
// ? func_80057424(?);
// ? func_80057528(?);
// ? func_800575B0(?);
// ? func_80057638(?);
// ? func_80057B4C(?);
// ? func_80057BC0(?);
// ? func_80057FDC(?);
// ? func_80058044(?);
// ? func_800580AC(?);
// ? func_800580C8(?);
// ? func_800580E0(?);
// ? func_800580FC(?);
// ? func_8005811C(?);
// ? func_800581A4(?);
// ? func_800581BC(?);
// ? func_800581DC(?);
// ? func_80058560(?);
// ? func_80058614(?);
// ? func_80058820(?);
// ? func_800588C8(?);
// ? func_800588D0(?);
// ? func_80058970(?);
// ? func_800589D0(?);
// ? func_80058AA0(?);
// ? func_80058ACC(?);
// ? func_80058B5C(?);
// ? func_800590F4(?);
// ? func_80059404(?);
// ? func_80059554(?);
// ? func_80059E60(?);
// ? func_80059FE0(?);
// ? func_8005A220(?);
// ? func_8005A2DC(?);
// ? func_8005A340(?);
// ? func_8005A6F8(?);
// ? func_8005A728(?);
// ? func_8005AB54(?);
// ? func_8005AC14(?);
// ? func_8005AC8C(?);
// ? func_8005ACE8(?);
// ? func_8005AE1C(?);
// ? func_8005B004(?);
// ? func_8005B334(?);
// ? func_8005B4B8(?);
// ? func_8005B704(?);
// ? func_8005B780(?);
// ? efLib_DestroyAll(?);
// ? func_8005BBB4(?);
// ? func_8005BE88(?);
// ? func_8005C1B4(?);
// ? func_8005C2BC(?);
// ? func_8005C3DC(?);
// ? func_8005C5C4(?);
// ? func_8005C6F4(?);
// ? func_8005C814(?);
// ? func_8005C9A4(?);
// ? func_8005C9FC(?);
// ? func_8005CAB0(?);
// ? func_8005CB34(?);
// ? func_8005CC2C(?);
// ? func_8005CC84(?);
// ? func_8005CD2C(?);
// ? func_8005CE48(?);
// ? func_8005CF40(?);
// ? func_8005D044(?);
// ? func_8005D174(?);
// ? func_8005F774(?);
// ? func_8005F864(?);
// ? func_8005F990(?);
// ? func_8005FCD8(?);
// ? ef_Spawn(?);
// ? func_80061D70(?);
// ? func_80063930(?);
// ? func_8006729C(?);
// ? func_8006730C(?);
void func_8006737C(s8);
// ? func_8006744C(?);
void func_80067624();
void func_80067688(void *);
void efAsync_Spawn(struct _HSD_GObj *, void *, u32, u32, void *, ...);
// ? func_80067980(?);
// ? Fighter_800679B0(?);
// ? Fighter_FirstInitialize_80067A84(?);
// ? Fighter_LoadCommonData(?);
// void Fighter_UpdateModelScale(HSD_GObj* fighterObj);
// ? Fighter_UnkInitReset_80067C98(?);
void Fighter_UnkProcessDeath_80068354(struct _HSD_GObj *);
// ? Fighter_UnkUpdateCostumeJoint_800686E4(?);
// ? Fighter_UnkUpdateVecFromBones_8006876C(?);
// ? Fighter_ResetInputData_80068854(?);
// ? Fighter_UnkInitLoad_80068914(?);
u32 Fighter_NewSpawn_80068E40();
// ? Fighter_80068E64(?);
// void Fighter_80068E98();
void Fighter_ActionStateChange_800693AC(struct _HSD_GObj *fighterObj, s32 newAction, s32 flags, struct _HSD_GObj *otherObj, f32 animStart, f32 animSpeed, f32 animBlend);
// ? Fighter_UnkIncrementCounters_8006ABEC(?);
// ? func_8006C0F0(?);
// ? Fighter_UnkTakeDamage_8006CC30(?);
// void Fighter_TakeDamage_8006CC7C(f32, struct _Fighter*);
// ? Fighter_8006CDA4(?);
// ? Fighter_8006CF5C(?);
// ? Fighter_UnkSetFlag_8006CFBC(?);
// ? Fighter_8006CFE0(?);
// ? Fighter_UnkRecursiveFunc_8006D044(?);
// ? Fighter_8006D10C(?);
// ? func_8006DBF4(?);
// ? func_8006DCF4(?);
// ? func_8006DE00(?);
// ? func_8006DF0C(?);
// ? func_8006E054(?);
// ? func_8006E7B8(?);
void func_8006E9B4();
void func_8006EBA4(struct _HSD_GObj *);
void func_8006EBE8(struct _HSD_GObj *fighterObj, f32, f32, f32);
// ? func_8006EDD0(?);
// ? func_8006EED4(?);
void func_8006F0FC(struct _HSD_GObj *fighterObj, f32);
void ftAnim_SetAnimRate(struct _HSD_GObj *, f32);
BOOL ftAnim_IsFramesRemaining(struct _HSD_GObj *);
// ? func_8006F368(?);
// ? func_8006F3DC(?);
f32 func_8006F484(void *);
// ? func_8006F4C8(?);
// ? func_8006F628(?);
// ? func_8006F7C8(?);
// ? func_8006F954(?);
// ? func_8006F994(?);
// ? func_8006FA58(?);
// ? func_8006FB88(?);
// ? func_8006FCE4(?);
// ? func_8006FE08(?);
void func_8006FE48();
// ? func_8006FE9C(?);
// ? func_8006FF74(?);
// ? func_80070010(?);
// ? func_80070108(?);
// ? func_80070200(?);
void func_80070308();
// ? func_80070458(?);
void func_800704F0(struct _HSD_GObj *, s32, f32);
// ? func_800705E0(?);
void func_80070654();
// ? func_80070710(?);
// ? func_80070734(?);
void func_80070758();
void func_8007077C();
// ? func_800707B0(?);
// ? func_80070904(?);
// ? func_80070A10(?);
void ftAnim_ApplyPartAnim(struct _HSD_GObj *, s32, s32, f32);
void func_80070C48(struct _HSD_GObj *, s32);
void func_80070CC4(struct _HSD_GObj *, s32);
void func_80070E74();
void func_80070F28();
void func_80070FB4(struct _HSD_GObj *, s32, s32);
s32 func_80070FD0(struct _Fighter *);
// ? func_80071028(?);
// ? func_800711DC(?);
// ? func_800715EC(?);
// ? func_80071B50(?);
// ? func_80071CA4(?);
// ? func_800730B8(?);
// ? func_80073108(?);
void func_80073240();
void func_80073354();
void func_8007349C();
void func_80073758();
// ? func_80073830(?);
// ? func_800739B8(?);
// ? func_80073CA8(?);
void func_80074148();
void func_80074170();
// ? func_80074194(?);
void func_800743E0();
// ? func_8007462C(?);
// ? func_8007482C(?);
// ? func_8007487C(?);
void func_800749CC();
void func_80074A4C(struct _HSD_GObj *, u32, s32);
// ? func_80074A74(?);
void func_80074A8C();
// ? func_80074ACC(?);
// ? func_80074B0C(?);
// ? func_80074B6C(?);
// ? func_80074CA0(?);
// ? func_80074D7C(?);
void func_80074E58();
s32 func_8007500C(struct _Fighter *, s32);
// ? func_80075028(?);
// ? func_8007506C(?);
// ? func_800750C8(?);
// ? func_80075240(?);
// ? func_80075304(?);
// ? func_800753D4(?);
// ? func_800755E8(?);
// ? func_80075650(?);
void func_8007584C();
void func_8007592C(struct _Fighter *, s32, f32);
void func_80075AF0(struct _Fighter *, s32, f32);
void func_80075CB4(struct _Fighter *, s32, f32);
// ? func_80075E78(?);
// ? func_80075F48(?);
// ? func_80076018(?);
void func_80076064(struct _Fighter *);
// ? func_800761C8(?);
// ? func_800762F4(?);
// ? func_80076320(?);
// ? func_800763C0(?);
// ? func_80076444(?);
// ? func_8007646C(?);
void func_800764DC();
void func_80076528(struct _HSD_GObj *);
void func_800765AC();
void func_800765E0();
// ? func_800765F0(?);
// ? func_80076640(?);
// ? func_80076764(?);
// ? func_80076808(?);
// ? func_800768A0(?);
// ? func_8007699C(?);
// ? func_80076CBC(?);
// ? func_80076ED8(?);
// ? func_80077464(?);
// ? func_80077688(?);
// ? func_80077970(?);
// ? func_80077C60(?);
// ? func_80078384(?);
// ? func_80078488(?);
// ? func_800784B4(?);
// ? func_80078538(?);
// ? func_8007861C(?);
// ? func_80078710(?);
void func_80078754();
// ? func_800787B4(?);
// ? func_800788D4(?);
// ? func_8007891C(?);
// ? func_80078998(?);
void func_80078A2C();
void func_80078C70();
void func_8007925C();
// ? func_80079AB0(?);
// ? func_80079C70(?);
// ? func_80079EA8(?);
// ? func_8007A06C(?);
void func_8007AB48();
void func_8007AB80();
void func_8007ABD0(struct _Hitbox *, u32 damageAmount, struct _HSD_GObj *);
// ? func_8007AC68(?);
// ? func_8007AC9C(?);
// ? func_8007AD18(?);
void func_8007AE80();
void func_8007AEE0(struct _HSD_GObj *);
// ? func_8007AEF8(?);
// ? func_8007AF10(?);
void func_8007AF28(struct _HSD_GObj *fighterObj);
// ? func_8007AF60(?);
// ? func_8007AFC8(?);
void func_8007AFF8(struct _HSD_GObj *);
// ? func_8007B064(?);
void func_8007B0C0(struct _HSD_GObj *, s32);
// ? func_8007B128(?);
void func_8007B1B8(struct _HSD_GObj *, f32 *, void (*)(struct _HSD_GObj *));
// ? ftColl_CreateReflectHit(?);
// ? ftColl_CreateAbsorbHit(?);
void func_8007B320();
void func_8007B4E0();
// ? func_8007B5AC(?);
void func_8007B62C();
// ? func_8007B6A0(?);
void func_8007B6EC();
void func_8007B760();
// ? func_8007B7A4(?);
// ? func_8007B7FC(?);
// ? func_8007B868(?);
// ? func_8007B8A8(?);
void func_8007B8CC();
void func_8007B8E8();
void func_getWindOffsetVec_8007B924(struct _HSD_GObj *, Vec *out_wind);
void func_8007BA0C();
void func_8007BAC0();
f32 func_8007BBCC(struct _HSD_GObj *);
void func_8007BC90();
void func_8007BE3C(struct _HSD_GObj *);
void func_8007C114();
void func_8007C17C(struct _HSD_GObj *);
void func_8007C224();
// ? func_8007C2E0(?);
void func_8007C4BC();
void func_8007C630(struct _HSD_GObj *);
void func_8007C6DC();
void func_8007C77C();
void func_8007C930(struct _Fighter *, f32);
// ? func_8007C98C(?);
// ? func_8007CA80(?);
// ? func_8007CADC(?);
void func_8007CB74(struct _HSD_GObj *);
// ? func_8007CC1C(?);
void func_8007CC78(struct _Fighter *, f32);
void func_8007CCA0(struct _Fighter *, f32);
// ? func_8007CCE8(?);
f32 func_8007CD6C(f32 value, f32 decrement);
f32 func_8007CDA4(struct _Fighter *);
f32 func_8007CDF8(struct _Fighter *);
void func_8007CE4C(struct _Fighter *, f32);
void func_8007CE94(struct _Fighter *, f32);
// ? func_8007CEF4(?);
BOOL func_8007CF58(struct _Fighter *);
// ? func_8007D050(?);
// ? func_8007D140(?);
// ? func_8007D174(?);
// ? func_8007D268(?);
// ? func_8007D28C(?);
// ? func_8007D2E8(?);
void func_8007D344(struct _Fighter *, f32, f32, f32);
// ? func_8007D3A8(?);
// ? func_8007D440(?);
// ? func_8007D468(?);
void func_8007D494(struct _Fighter *, f32, f32);
void func_8007D4B8(struct _Fighter *);
// ? func_8007D4E4(?);
// ? ftComm_ClampFalllSpeed(?);
// ? func_8007D508(?);
// ? func_8007D528(?);
void func_8007D5BC();
void func_8007D5D4(struct _Fighter *);
// ? func_8007D60C(?);
// ? func_8007D698(?);
void func_8007D6A4(struct _Fighter *);
void func_8007D780(struct _Fighter *);
void func_8007D7FC(struct _Fighter *);
void func_8007D92C(struct _HSD_GObj *);
// ? func_8007D964(?);
// ? func_8007D99C(?);
// ? func_8007D9D4(?);
void func_8007D9FC(struct _Fighter *);
// ? func_8007DA24(?);
f32 func_8007DA74(s32, u32, f32);
void func_8007DB24();
void func_8007DB58();
// void func_8007DBCC(Fighter*, s32);
// ? func_8007DC08(?);
// ? func_8007DD7C(?);
// ? func_8007DFD0(?);
void func_8007E0E4();
void func_8007E2A4();
void func_8007E2D0(struct _Fighter *, s16, void (*)(struct _HSD_GObj *), void (*)(struct _HSD_GObj *), void (*)(struct _HSD_GObj *, struct _HSD_GObj *));
void func_8007E2F4(struct _Fighter *, s16);
void func_8007E2FC(struct _HSD_GObj *);
// ? func_8007E358(?);
// ? func_8007E3EC(?);
// ? func_8007E5AC(?);
// ? func_8007E620(?);
// ? func_8007E690(?);
// ? func_8007E6DC(?);
// ? func_8007E79C(?);
// ? func_8007E7E4(?);
// ? func_8007E82C(?);
void func_8007E83C(struct _HSD_GObj *, s32, f32 div);
s32 ftGetParasolStatus(struct _HSD_GObj *);
void func_8007EA90(struct _Fighter *, s32);
void func_8007EBAC(struct _Fighter *, u32, u32);
// ? func_8007EC30(?);
void func_8007ECD4();
// ? func_8007ED2C(?);
void func_8007ED50(struct _Fighter *, s32);
void func_8007EE0C();
// ? func_8007EEC8(?);
// ? func_8007EF5C(?);
void func_8007EFC0(struct _Fighter *, u32);
// ? func_8007EFC8(?);
void func_8007F578();
// ? func_8007F5CC(?);
f32 Fighter_GetModelScale(struct _Fighter *); // ftcommon.s
// ? func_8007F6A4(?);
// ? func_8007F804(?);
// ? func_8007F824(?);
// ? func_8007F86C(?);
// ? func_8007F8B4(?);
void func_8007F8E8();
// ? func_8007F948(?);
void func_8007F9B4();
// ? func_8007FA00(?);
// ? func_8007FA58(?);
void func_8007FC7C(struct _HSD_GObj *, f32);
// ? func_8007FDA0(?);
void func_8007FE84(struct _HSD_GObj *, struct _HSD_GObj *, s32, f32);
void func_8007FF74();
BOOL func_8007FFD8(struct _Fighter *, f32);
// ? func_80080144(?);
// ? func_80080174(?);
void func_8008021C();
void func_8008031C();
// ? func_80080460(?);
// ? func_80080474(?);
// ? func_80080484(?);
// ? func_800804A0(?);
f32 func_800804EC(struct _Fighter *); // DataOffset_PlayerScale_MultiplyBySomething, returns fighter->x40*fighter->x34
void func_800804FC();
// ? func_8008051C(?);
// ? func_800805C8(?);
// ? func_80080C28(?);
void func_80080E18();
// ? func_80081118(?);
// ? func_80081140(?);
// ? func_80081168(?);
// ? func_80081200(?);
// ? func_80081298(?);
// ? func_80081370(?);
// ? func_80081544(?);
// ? func_800815E4(?);
// ? func_8008169C(?);
void func_80081938(struct _HSD_GObj *);
void func_800819A8();
// ? func_80081A00(?);
void func_80081B38(struct _HSD_GObj *);
void func_80081C88(struct _HSD_GObj *, f32);
s32 func_80081D0C(struct _HSD_GObj *);
// ? func_80081DD4(?);
// ? func_80081F2C(?);
// ? func_80082084(?);
s32 func_800821DC();
s32 func_8008239C(HSD_GObj *, s32, f32 *);
// ? func_800824A0(?);
// ? func_80082578(?);
// ? func_80082638(?);
s32 func_80082708(struct _HSD_GObj *);
s32 func_800827A0(struct _HSD_GObj *);
// ? func_80082838(?);
// ? func_80082888(?);
// ? func_80082978(?);
s32 func_80082A68(struct _HSD_GObj *);
void func_80082B1C(struct _HSD_GObj *); /* extern */
// ? func_80082B78(?);
// ? func_80082C74(?);
// ? func_80082D40(?);
struct _HSD_GObj *func_80082E3C(struct _HSD_GObj *);
// ? func_80082F28(?);
// ? func_80083090(?);
void func_800831CC(struct _HSD_GObj *, s32 (*)(struct _HSD_GObj *), void (*)(struct _HSD_GObj *));
// ? func_80083318(?);
// ? func_80083464(?);
// ? func_800835B0(?);
// ? func_8008370C(?);
// ? func_80083844(?);
// ? func_80083910(?);
// ? func_80083A48(?);
void func_80083B68(struct _HSD_GObj *);
// ? func_80083C00(?);
// ? func_80083CE4(?);
// ? func_80083DCC(?);
// ? func_80083E64(?);
void func_80083F88(struct _HSD_GObj *);
// ? func_8008403C(?);
void func_80084104(struct _HSD_GObj *);
// ? func_800841B8(?);
// ? func_80084280(?);
// ? func_800843FC(?);
// ? func_800844EC(?);
// ? func_800845B4(?);
// ? func_800846B0(?);
// ? func_800847D0(?);
// ? func_800848DC(?);
// ? func_800849EC(?);
// ? func_80084A18(?);
f32 func_80084A40(struct _Fighter *); // Stage_GetGroundFrictionMultiplier very short function
// ? func_80084A80(?);
// ? func_80084BFC(?);
// ? func_80084C38(?);
// ? func_80084C74(?);
// ? func_80084CB0(?);
// ? func_80084CE4(?);
// ? func_80084DB0(?);
// ? func_80084E1C(?);
void func_80084EEC(struct _HSD_GObj *);
void func_80084F3C(struct _HSD_GObj *);
void func_80084FA8(struct _HSD_GObj *);
// ? func_80085004(?);
// ? func_80085030(?);
// ? func_80085088(?);
// ? func_800850B4(?);
// ? func_800850E0(?);
void func_80085134(struct _HSD_GObj *);
void func_80085154(struct _HSD_GObj *);
// ? func_800851C0(?);
// ? func_800851D0(?);
void func_80085204(struct _HSD_GObj *);
// ? func_8008521C(?);
void func_800852B0();
void func_8008549C();
// ? func_80085560(?);
void func_800855C8();
void func_8008572C(u32);
void func_8008578C();
void func_800857E0(u32);
void func_80085820();
// ? func_800858E4(?);
void func_800859A8();
void func_80085A14(u32);
void func_80085B10();
// ? func_80085B98(?);
void func_80085CD8();
u32 func_80085E50(void *, u32);
// ? func_80085FD4(?);
// ? func_80086060(?);
// ? func_800860C4(?);
// ? func_800860E8(?);
// ? func_80086140(?);
// ? func_80086198(?);
struct _HSD_GObj *func_8008627C(Vec *, struct _HSD_GObj *);
// ? func_80086368(?);
// ? func_800864A8(?);
// ? func_800865C0(?);
// ? func_800865CC(?);
// ? func_800865D8(?);
// ? func_800865F0(?);
// ? func_80086630(?);
// ? func_80086644(?);
// ? func_80086664(?);
// ? func_80086684(?);
// ? ftData_SetScale(?);
void func_800866DC(struct _HSD_GObj *, Vec *);
// ? func_80086724(?);
// ? func_80086764(?);
// ? func_80086794(?);
// ? func_800867A0(?);
// ? func_800867CC(?);
// ? func_800867D8(?);
void func_800867E8();
// ? func_80086824(?);
void func_8008688C();
// ? func_800868A4(?);
// ? func_800868D4(?);
// ? func_80086960(?);
// ? func_80086984(?);
// ? func_80086990(?);
// ? func_800869D4(?);
// ? func_800869F8(?);
// ? func_80086A0C(?);
// ? func_80086A18(?);
// ? func_80086A4C(?);
// ? func_80086A58(?);
// ? func_80086A8C(?);
// ? func_80086B64(?);
// ? func_80086B74(?);
// ? func_80086B80(?);
// ? func_80086B90(?);
// ? func_80086BB4(?);
s32 func_80086BE0(struct _HSD_GObj *);
// ? func_80086BEC(?);
// ? func_80086C0C(?);
// ? func_80086C18(?);
// ? func_80086C9C(?);
// ? func_80086D40(?);
// ? func_80086DC4(?);
// ? func_80086E68(?);
// ? func_80086EB4(?);
// ? func_80086EC0(?);
// ? func_80086ED0(?);
// ? func_80086F4C(?);
// ? func_80086F80(?);
// ? func_80086FA8(?);
// ? func_80086FD4(?);
// ? func_8008701C(?);
// ? func_8008702C(?);
// ? func_80087050(?);
// ? func_80087074(?);
// ? func_800870BC(?);
// ? func_800870F0(?);
s32 func_80087120(struct _HSD_GObj *);
// ? func_80087140(?);
// ? func_800871A8(?);
// ? func_80087284(?);
s32 func_800872A4(struct _HSD_GObj *);
// ? func_800872B0(?);
// ? func_800872BC(?);
// ? func_80087300(?);
// ? func_8008730C(?);
// ? func_8008731C(?);
// ? func_8008732C(?);
// ? func_80087354(?);
// ? func_8008737C(?);
// ? func_800873A4(?);
// ? func_800873CC(?);
// ? func_800873F4(?);
// ? func_8008741C(?);
// ? func_80087454(?);
// ? func_80087460(?);
// ? func_8008746C(?);
// ? func_800874BC(?);
// ? func_800874CC(?);
// ? func_80087508(?);
// ? func_80087574(?);
// ? func_80087610(?);
// ? func_800876B4(?);
// ? func_800876D4(?);
// ? func_800876F4(?);
// ? func_80087700(?);
// ? func_8008770C(?);
// ? func_80087744(?);
// ? func_8008777C(?);
// ? func_800877D4(?);
// ? func_800877F8(?);
// ? func_80087818(?);
// ? func_80087838(?);
// ? func_80087858(?);
// ? func_80087878(?);
// ? func_800878BC(?);
// ? func_80087900(?);
// ? func_80087944(?);
// ? func_80087988(?);
// ? func_800879D8(?);
// ? func_800879F8(?);
// ? func_80087A18(?);
// ? func_80087A80(?);
// ? func_80087A8C(?);
// ? func_80087A98(?);
// ? func_80087AA4(?);
// ? func_80087AB4(?);
// ? func_80087AC0(?);
// ? func_80087AEC(?);
// ? func_80087B34(?);
// ? func_80087BAC(?);
// ? func_80087BC0(?);
// ? func_80087BEC(?);
// ? func_80087C1C(?);
// ? func_80087C58(?);
// ? func_80087C64(?);
// ? func_80087C70(?);
// ? func_80087D0C(?);
// ? func_8008805C(?);
// ? func_80088080(?);
// ? func_800880AC(?);
void func_800880D8();
// ? func_80088110(?);
void func_80088148(struct _Fighter *, u32, u32, u32);
void func_800881D8(struct _Fighter *, u32, u32, u32);
// ? func_80088328(?);
// ? func_80088478(?);
// ? func_80088510(?);
// ? func_800885A8(?);
void func_80088640();
// ? func_800886D8(?);
// ? func_80088770(?);
void func_800887CC();
// ? func_80088828(?);
void func_80088884();
void func_800888E0();
// ? func_8008893C(?);
// ? func_80088998(?);
// ? func_800889F4(?);
void func_80088A50(struct _Fighter *);
void func_80088C5C();
void func_800890BC(struct _Fighter *);
void func_800890D0();
// ? func_80089118(?);
// ? func_80089228(?);
void func_800892A0(struct _HSD_GObj *);
void func_800892D4(struct _Fighter *);
// ? func_80089460(?);
void func_800895E0();
// ? func_80089768(?);
void func_80089824(struct _HSD_GObj *);
// ? func_80089884(?);
// ? func_80089890(?);
// ? func_8008989C(?);
// ? func_800898A8(?);
// ? func_800898B4(?);
// ? func_800898C0(?);
// ? func_80089914(?);
// ? func_8008998C(?);
void func_80089B08(struct _HSD_GObj *pPlayerEntityStruct);
// ? func_8008A1B8(?);
// ? func_8008A1FC(?);
// ? func_8008A244(?);
void func_8008A2BC(struct _HSD_GObj *gobj);
// ? func_8008A324(?);
// ? func_8008A348(?);
// ? func_8008A4D4(?);
// ? func_8008A698(?);
// ? func_8008A6D8(?);
// ? func_8008A7A8(?);
// s32 func_8008A9F8(HSD_GObj*);
// ? func_8008AB84(?);
// ? func_8008ABC0(?);
// ? func_8008ACD8(?);
// ? func_8008AE30(?);
// ? func_8008AF0C(?);
// ? func_8008B194(?);
// ? func_8008B248(?);
// ? func_8008B3E4(?);
// ? func_8008B498(?);
// ? func_8008B4D4(?);
// ? func_8008B548(?);
// ? func_8008B584(?);
// ? func_8008B5AC(?);
// ? func_8008B658(?);
// ? func_8008B788(?);
// ? func_8008B980(?);
// ? func_8008BA38(?);
// ? func_8008BB44(?);
// ? func_8008BC34(?);
// ? func_8008BC70(?);
// ? func_8008BFC4(?);
// ? func_8008C114(?);
// ? func_8008C22C(?);
// ? func_8008C348(?);
// ? func_8008C3E0(?);
// ? func_8008C520(?);
// ? func_8008C7F0(?);
// ? func_8008C810(?);
// ? func_8008C830(?);
// ? func_8008C948(?);
// ? func_8008CA38(?);
// ? func_8008CB44(?);
// ? func_8008CC5C(?);
// ? func_8008CD68(?);
// ? func_8008CE0C(?);
// ? func_8008CE68(?);
// ? func_8008CF70(?);
// ? func_8008CFAC(?);
// ? func_8008D010(?);
// ? func_8008D08C(?);
// ? func_8008D29C(?);
// ? func_8008D3A4(?);
// ? func_8008D708(?);
f32 func_8008D7F0(struct _Fighter *);
f32 scaleBy154_8008D8D8(f32);
s32 func_8008D8E8(f32);
void func_8008D930();
// ? func_8008DA4C(?);
// ? func_8008DB10(?);
// ? func_8008DC0C(?);
void func_8008DCE0(HSD_GObj *, s32, f32);
// ? func_8008E498(?);
// ? func_8008E5A4(?);
void func_8008E908(struct _HSD_GObj *, f32);
s32 func_8008E984(struct _Fighter *);
void func_8008E9D0();
void func_8008EB58();
void func_8008EC90();
// ? func_8008F744(?);
// ? func_8008F938(?);
// ? func_8008FB18(?);
// ? func_8008FC94(?);
// ? func_8008FCB8(?);
// ? func_8008FD98(?);
// ? func_8008FF48(?);
// ? func_80090184(?);
// ? func_80090574(?);
void func_80090594();
u32 func_80090690(struct _Fighter *, struct _Vec2 *);
void func_80090718();
// ? func_80090780(?);
// ? func_80090828(?);
// ? func_800909D0(?);
// ? func_80090AC0(?);
// ? func_80090B60(?);
// ? func_80091030(?);
// ? func_800914A4(?);
// ? func_80091620(?);
// ? func_80091854(?);
// ? func_80091A2C(?);
// ? func_80091A4C(?);
// ? func_80091AD8(?);
// ? func_80091B90(?);
// ? func_80091B9C(?);
// ? func_80091BC4(?);
// ? func_80091D58(?);
// ? func_80091E78(?);
// ? func_80092158(?);
// ? func_800921DC(?);
// ? func_800923B4(?);
// ? func_80092450(?);
// ? func_800924C0(?);
// ? func_800925A4(?);
// ? func_80092870(?);
// ? func_800928AC(?);
// ? func_800928CC(?);
// ? func_80092908(?);
// ? func_80092B70(?);
// ? func_80092BAC(?);
// ? func_80092BCC(?);
// ? func_80092BE8(?);
// ? func_80092C54(?);
// ? func_80092E10(?);
// ? func_80092E30(?);
f32 func_80092ED8(s32, void *, f32);
// ? func_80092F2C(?);
// ? func_80093628(?);
// ? func_8009365C(?);
// ? func_80093694(?);
// ? func_8009370C(?);
// ? func_80093850(?);
// ? func_8009388C(?);
// ? func_800939B4(?);
// ? func_80093A50(?);
// ? func_80093BC0(?);
// ? func_80093EC0(?);
// ? func_8009403C(?);
// ? func_80094078(?);
// ? func_80094098(?);
// ? func_80094138(?);
// ? func_80094150(?);
// ? func_800942A0(?);
// ? func_8009447C(?);
// ? func_80094694(?);
// ? func_80094790(?);
// ? func_80094818(?);
// ? func_800948A8(?);
// ? func_80094B6C(?);
// ? func_80094E54(?);
// ? func_80094EA4(?);
// ? func_8009515C(?);
// ? func_800951D0(?);
// ? func_80095254(?);
// ? func_800952DC(?);
// ? func_80095328(?);
// ? func_8009563C(?);
// ? func_80095700(?);
void func_80095744();
// ? func_800957F4(?);
// ? func_800958FC(?);
// ? func_80095A30(?);
// ? func_80095D5C(?);
// ? func_80095EFC(?);
s32 func_800964FC(struct _Fighter *);
// ? func_80096540(?);
// ? func_800965DC(?);
// ? func_8009665C(?);
void func_800968C8();
void func_80096900(struct _HSD_GObj *, s32, s32, s32, f32, f32);
// ? func_800969D8(?);
// ? func_80096D9C(?);
// ? func_80096EF8(?);
// ? func_80096F48(?);
// ? func_800970E0(?);
// ? func_80097130(?);
// ? func_800971B0(?);
void func_8009750C(HSD_GObj *);
// ? func_80097570(?);
// ? func_80097630(?);
// ? func_800976A4(?);
// ? func_800978D4(?);
// ? func_8009794C(?);
// ? func_80097AF4(?);
// ? func_80097D40(?);
// ? func_80097D88(?);
// ? func_80097E8C(?);
// ? func_80097F38(?);
// ? func_800980BC(?);
// ? func_80098160(?);
// ? func_80098214(?);
// ? func_80098324(?);
// ? func_80098400(?);
// ? func_800984D4(?);
// ? func_8009856C(?);
// ? func_80098634(?);
// ? func_800986B0(?);
// ? func_8009872C(?);
// ? func_800987D0(?);
// ? func_80098928(?);
// ? func_800989D4(?);
void func_80098B20();
void func_80098C9C();
// ? func_80098D90(?);
// ? func_80098F3C(?);
// ? func_80099010(?);
// ? func_8009917C(?);
// ? func_80099264(?);
// ? func_800992A8(?);
// ? func_80099314(?);
// ? func_80099390(?);
// ? func_80099438(?);
// ? func_80099794(?);
// ? func_8009980C(?);
// ? func_80099894(?);
// ? func_800998EC(?);
// ? func_80099954(?);
// ? func_80099A58(?);
// ? func_80099A9C(?);
void func_80099D9C();
// ? func_80099E44(?);
// ? func_80099F1C(?);
// ? func_80099F9C(?);
// ? func_8009A080(?);
// ? func_8009A134(?);
// ? func_8009A184(?);
// ? func_8009A228(?);
// ? func_8009A3C8(?);
// ? func_8009A410(?);
// ? func_8009A4A4(?);
// ? func_8009A6B8(?);
void func_8009A804(struct _HSD_GObj *);
// ? func_8009A9AC(?);
// ? func_8009AA0C(?);
// ? func_8009AAFC(?);
// ? func_8009AB9C(?);
// ? func_8009AC68(?);
// ? func_8009ACA8(?);
// ? func_8009ADA4(?);
// ? func_8009AE14(?);
// ? func_8009AE38(?);
// ? func_8009AEA4(?);
// ? func_8009AFD4(?);
// ? func_8009B040(?);
// ? func_8009B170(?);
// ? func_8009B1B8(?);
// ? func_8009B2F8(?);
// ? func_8009B390(?);
// ? func_8009B4D0(?);
// ? func_8009B518(?);
// ? func_8009B56C(?);
// ? func_8009B654(?);
// ? func_8009B67C(?);
// ? func_8009B6C8(?);
// ? func_8009B818(?);
// ? func_8009B860(?);
// ? func_8009B9C8(?);
// ? func_8009BB1C(?);
// ? func_8009BB64(?);
// ? func_8009BC58(?);
// ? func_8009BD24(?);
// ? func_8009BF3C(?);
// ? func_8009C02C(?);
// ? func_8009C4F8(?);
// ? func_8009C540(?);
// ? func_8009C5A4(?);
// ? func_8009C640(?);
// ? func_8009C744(?);
// ? func_8009CB40(?);
void func_8009CF84();
// ? func_8009D074(?);
// ? func_8009D18C(?);
// ? func_8009D2A4(?);
// ? func_8009D3BC(?);
// ? func_8009D4D4(?);
// ? func_8009D5EC(?);
// ? func_8009D704(?);
// ? func_8009D81C(?);
// ? func_8009D920(?);
// ? func_8009DA38(?);
// ? func_8009DB50(?);
// ? func_8009DC54(?);
// ? func_8009DD94(?);
void func_8009E0A8();
void func_8009E0D4();
// ? func_8009E140(?);
// ? func_8009E1D4(?);
// ? func_8009E318(?);
// ? func_8009E4A8(?);
// ? func_8009E614(?);
// ? func_8009E714(?);
void func_8009E7B4();
// ? func_8009EB18(?);
// ? func_8009EC70(?);
// ? func_8009EDA4(?);
// ? func_8009EE30(?);
s32 func_8009EF68(struct _HSD_GObj *);
// ? func_8009EFA4(?);
// ? func_8009F0F0(?);
// ? func_8009F184(?);
// ? func_8009F39C(?);
void func_8009F4A4();
void func_8009F578();
// ? func_8009F5AC(?);
// ? func_8009F75C(?);
// ? func_8009F7F8(?);
// ? func_8009F834(?);
// ? func_800A0098(?);
// ? func_800A0148(?);
// ? func_800A0384(?);
// ? func_800A0508(?);
// ? func_800A05F4(?);
// ? func_800A0798(?);
// ? func_800A08F0(?);
// ? func_800A0AF4(?);
// ? func_800A0C8C(?);
// ? func_800A0CB0(?);
void func_800A0DA4();
// ? func_800A0F00(?);
// ? func_800A0FB0(?);
void func_800A101C(struct _Fighter *, s8, s8, s32);
f32 func_800A17E4(struct _Fighter *);
f32 func_800A1874(struct _Fighter *);
f32 func_800A1904(struct _Fighter *);
f32 func_800A1948(struct _Fighter *);
s32 func_800A198C(struct _Fighter *);
f32 func_800A1994(struct _Fighter *);
f32 func_800A1A24(struct _Fighter *);
// ? func_800A1AB4(?);
// ? func_800A1B38(?);
// ? func_800A1BA8(?);
// ? func_800A1C44(?);
// ? func_800A1CA8(?);
// ? func_800A1CC4(?);
// ? func_800A1F3C(?);
// ? func_800A1F98(?);
s32 func_800A2040();
// ? func_800A20A0(?);
// ? func_800A2170(?);
// ? func_800A21FC(?);
// ? func_800A229C(?);
// ? func_800A2718(?);
// ? func_800A28D0(?);
// ? func_800A2998(?);
// ? func_800A2A70(?);
// ? func_800A2BD4(?);
// ? func_800A2C08(?);
// ? func_800A2C80(?);
// ? func_800A3134(?);
// ? func_800A3180(?);
// ? func_800A3200(?);
// ? func_800A3234(?);
// ? func_800A3498(?);
// ? func_800A3554(?);
// ? func_800A3710(?);
// ? func_800A3844(?);
// ? func_800A3908(?);
// ? func_800A4038(?);
// ? func_800A4768(?);
// ? func_800A49B4(?);
// ? func_800A4A40(?);
// ? func_800A4BEC(?);
// ? func_800A4E8C(?);
// ? func_800A50D4(?);
// ? func_800A5294(?);
// ? func_800A53DC(?);
// ? func_800A589C(?);
// ? func_800A5908(?);
// ? func_800A5944(?);
// ? func_800A5980(?);
// ? func_800A59C0(?);
// ? func_800A59E4(?);
// ? func_800A5A28(?);
// ? func_800A5A5C(?);
// ? func_800A5A90(?);
// ? func_800A5ACC(?);
// ? func_800A5CE0(?);
// ? func_800A5F4C(?);
// ? func_800A61D8(?);
// ? func_800A648C(?);
// ? func_800A6700(?);
// ? func_800A6A98(?);
// ? func_800A6D2C(?);
// ? func_800A6FC4(?);
// ? func_800A75DC(?);
// ? func_800A7AAC(?);
// ? func_800A80E4(?);
// ? func_800A8210(?);
// ? func_800A866C(?);
// ? func_800A8940(?);
// ? func_800A8DE4(?);
// ? func_800A8EB0(?);
// ? func_800A92CC(?);
// ? func_800A949C(?);
// ? func_800A963C(?);
// ? func_800A96B8(?);
// ? func_800A9904(?);
// ? func_800A9CB4(?);
// ? func_800AA320(?);
// ? func_800AA42C(?);
// ? func_800AA844(?);
// ? func_800AABC8(?);
// ? func_800AACD0(?);
// ? func_800AAF48(?);
// ? func_800AB224(?);
// ? func_800ABA34(?);
// ? func_800ABBA8(?);
// ? func_800AC30C(?);
// ? func_800AC434(?);
// ? func_800AC5A0(?);
// ? func_800AC7D4(?);
// ? func_800ACB44(?);
// ? func_800ACD5C(?);
// ? func_800AD42C(?);
// ? func_800AD54C(?);
// ? func_800AD7FC(?);
// ? func_800ADC28(?);
// ? func_800ADE48(?);
// ? func_800AE7AC(?);
// ? func_800AEA8C(?);
// ? func_800AECF0(?);
// ? func_800AEFB8(?);
// ? func_800AF290(?);
// ? func_800AF78C(?);
// ? func_800AFC40(?);
// ? func_800AFE3C(?);
// ? func_800B00F8(?);
// ? func_800B04DC(?);
// ? func_800B0760(?);
// ? func_800B0918(?);
// ? func_800B0AF4(?);
// ? func_800B0CA8(?);
// ? func_800B0E98(?);
// ? func_800B101C(?);
// ? func_800B126C(?);
// ? func_800B1478(?);
// ? func_800B17D0(?);
// ? func_800B1AB8(?);
// ? func_800B1DA0(?);
// ? func_800B1EF0(?);
// ? func_800B21C8(?);
// ? func_800B24B8(?);
// ? func_800B2790(?);
// ? func_800B2AFC(?);
// ? func_800B33B0(?);
void func_800B3900();
// ? func_800B395C(?);
// ? func_800B3E04(?);
// ? func_800B462C(?);
// ? func_800B463C(?);
// ? func_800B46B8(?);
// ? func_800B4778(?);
// ? func_800B4880(?);
// ? func_800B49F4(?);
// ? func_800B4A78(?);
// ? func_800B4AB0(?);
// ? func_800B52AC(?);
// ? func_800B5AB0(?);
// ? func_800B6208(?);
// ? func_800B630C(?);
// ? func_800B63D8(?);
// ? func_800B658C(?);
// ? func_800B683C(?);
// ? func_800B7180(?);
// ? func_800B732C(?);
// ? func_800B7638(?);
// ? func_800B77E8(?);
// ? func_800B885C(?);
// ? func_800B89CC(?);
// ? func_800B8A9C(?);
// ? func_800B9020(?);
// ? func_800B920C(?);
// ? func_800B92D4(?);
// ? func_800B9340(?);
// ? func_800B9504(?);
// ? func_800B9704(?);
// ? func_800B9790(?);
// ? func_800B98C8(?);
// ? func_800B9A04(?);
// ? func_800B9CBC(?);
// ? func_800B9F6C(?);
// ? func_800B9F90(?);
// ? func_800BA080(?);
// ? func_800BA160(?);
// ? func_800BA224(?);
// ? func_800BA2E8(?);
// ? func_800BA674(?);
// ? func_800BA9A0(?);
// ? func_800BB104(?);
// ? func_800BB220(?);
// ? func_800BB768(?);
// ? func_800BB9B4(?);
// ? func_800BBC88(?);
// ? func_800BBED4(?);
// ? func_800BC458(?);
// ? func_800BC4A8(?);
// ? func_800BC9C8(?);
// ? func_800BCAF4(?);
// ? func_800BCC20(?);
// ? func_800BCD00(?);
// ? func_800BCDE0(?);
// ? func_800BCE64(?);
// ? func_800BD0E8(?);
// ? func_800BD19C(?);
// ? func_800BD620(?);
// ? func_800BD6EC(?);
// ? func_800BD9E0(?);
// ? func_800BDA50(?);
// ? func_800BDA74(?);
// ? func_800BDB58(?);
// ? func_800BE000(?);
// ? func_800BE494(?);
// ? func_800BE7E0(?);
// ? func_800BEB28(?);
// ? func_800BEB60(?);
// ? func_800BEC08(?);
// ? func_SetEntityFacingDirection(?);
// ? func_800BF228(?);
// ? func_800BF534(?);
// ? func_800BF6BC(?);
// ? func_800BFB4C(?);
void func_800BFD04();
// ? func_800BFD9C(?);
void func_800BFFAC(struct _Fighter *);
void func_800BFFD0(struct _Fighter *, s32, s32);
void func_800C0074(struct _Fighter *);
// ? func_800C0098(?);
void func_800C0134();
void func_800C0200();
// ? func_800C0358(?);
void func_800C0408();
// ? func_800C0658(?);
// ? func_800C0674(?);
s32 func_800C0694();
// ? func_800C06B4(?);
// ? func_800C06C0(?);
// ? func_800C06E8(?);
// ? func_800C0764(?);
// ? func_800C07F8(?);
// ? func_800C0874(?);
// ? func_800C08A0(?);
void func_800C09B4(struct _HSD_GObj *);
// ? func_800C0A28(?);
void func_800C0A98(struct _HSD_GObj *fighterObj);
// ? func_800C0B20(?);
// ? func_800C0C88(?);
// ? func_800C0CB8(?);
// ? func_800C0D0C(?);
// ? func_800C0FCC(?);
// ? func_800C124C(?);
// ? func_800C13BC(?);
// ? func_800C15F4(?);
// ? func_800C1718(?);
// ? func_800C17CC(?);
// ? func_800C18A8(?);
// ? func_800C1D38(?);
// ? func_800C1E0C(?);
void func_800C1E64(struct _HSD_GObj *pPlayerEntityStruct, s32, s32, u8, f32); // UnclePunch Map file: AS_203_PassiveWalljump_Walljump
// ? func_800C23A0(?);
// ? func_800C23FC(?);
// ? func_800C2600(?);
void func_800C2FD8();
// ? func_800C318C(?);
// ? func_800C3390(?);
// ? func_800C3480(?);
// ? func_800C3538(?);
// ? func_800C3598(?);
// ? func_800C36DC(?);
void func_800C37A0();
// ? func_800C3A14(?);
// ? func_800C3B10(?);
// ? func_800C3BE8(?);
// ? func_800C3CC0(?);
// ? func_800C44CC(?);
// ? func_800C4550(?);
// ? func_800C4724(?);
// ? func_800C4A38(?);
// ? func_800C4E4C(?);
// ? func_800C4E94(?);
// ? func_800C4ED8(?);
// ? func_800C4F64(?);
// ? func_800C5074(?);
// ? func_800C50F4(?);
void func_800C511C();
// ? func_800C5240(?);
// ? func_800C5284(?);
// ? func_800C52F4(?);
// ? func_800C53E4(?);
// ? func_800C5408(?);
// ? func_800C544C(?);
// ? func_800C548C(?);
// ? func_800C54C4(?);
// ? func_800C5500(?);
// ? func_800C554C(?);
// ? func_800C555C(?);
// ? func_800C5588(?);
// ? func_800C55CC(?);
// ? func_800C5614(?);
// ? func_800C576C(?);
// ? func_800C57B4(?);
// ? func_800C5A50(?);
// ? func_800C5A98(?);
// ? func_800C5B88(?);
// ? func_800C5CD4(?);
// ? func_800C5D34(?);
// ? func_800C5DDC(?);
// ? func_800C5E94(?);
// ? func_800C5F60(?);
// ? func_800C5F88(?);
// ? func_800C60C8(?);
// ? func_800C6110(?);
void func_800C61B0();
// ? func_800C6408(?);
// ? func_800C6AFC(?);
// ? func_800C6B6C(?);
// ? func_800C703C(?);
// ? func_800C7070(?);
// ? func_800C74F4(?);
// ? func_800C7590(?);
// ? func_800C7800(?);
// ? func_800C7A30(?);
// ? func_800C7B0C(?);
// ? func_800C7C60(?);
// ? func_800C7CA0(?);
// ? func_800C7DC4(?);
void func_800C8064();
// ? func_800C80A4(?);
// ? func_800C8170(?);
void func_800C8348(struct _HSD_GObj *, s32, s32);
void func_800C8438(struct _HSD_GObj *);
void func_800C8540();
// ? func_800C85B8(?);
void func_800C884C();
void func_800C88A0(struct _Fighter *);
// ? func_800C88D4(?);
void func_800C89A0(struct _HSD_GObj *);
void func_800C8A64();
// ? func_800C8AF0(?);
// ? func_800C8B1C(?);
s32 func_800C8B2C();
// ? func_800C8B60(?);
// ? func_800C8B74(?);
void func_800C8C84();
void func_800C8D00();
// ? func_800C8E40(?);
// ? func_800C8E74(?);
void func_800C8F6C();
void func_800C8FC4(struct _HSD_GObj *);
void func_800C9034();
// ? func_800C9198(?);
// ? func_800C92E4(?);
// ? func_800C9468(?);
// ? func_800C94B4(?);
// ? func_800C9528(?);
// ? func_800C97A8(?);
// ? func_800C97DC(?);
void func_800C9840(HSD_GObj *, s32, s32, f32, f32, f32);
// ? func_800C98AC(?);
// ? func_800C9924(?);
// ? func_800C9C2C(?);
// ? func_800C9C74(?);
// ? func_800C9CEC(?);
// ? func_800C9D40(?);
// ? func_800C9D94(?);
// ? func_800CA094(?);
// ? func_800CA120(?);
// ? func_800CA5F0(?);
// ? func_800CA644(?);
// ? func_800CA698(?);
// ? func_800CA6F4(?);
// ? func_800CA71C(?);
// ? func_800CA77C(?);
// ? func_800CA95C(?);
// ? func_800CAA2C(?);
// ? func_800CABC4(?);
// ? func_800CAC18(?);
s32 func_800CAE80();
// ? func_800CAED0(?);
// ? func_800CAF78(?);
// ? func_800CB024(?);
void func_800CB110(HSD_GObj *, s32, f32);
// ? func_800CB250(?);
// ? func_800CB334(?);
// ? func_800CB438(?);
// ? func_800CB4E0(?);
// ? func_800CB59C(?);
// ? func_800CB6EC(?);
// ? func_800CB804(?);
// ? func_800CB870(?);
// ? func_800CB8E0(?);
// ? func_800CB950(?);
// ? func_800CBAC4(?);
// ? func_800CBBC0(?);
// ? func_800CBD18(?);
// ? func_800CBE98(?);
// ? func_800CC0E8(?);
// ? func_800CC238(?);
// ? func_800CC4F8(?);
// ? func_800CC6C8(?);
void func_800CC730(struct _HSD_GObj *);
// ? func_800CC830(?);
// ? func_800CC8DC(?);
// ? func_800CC988(?);
// ? func_800CCAAC(?);
// ? func_800CCBE0(?);
// ? func_800CCDA8(?);
// ? func_800CCF58(?);
// ? func_800CD140(?);
// ? func_800CD1BC(?);
// ? func_800CD204(?);
// ? func_800CD278(?);
// ? func_800CD2C4(?);
// ? func_800CD350(?);
// ? func_800CD418(?);
// ? func_800CD4E0(?);
// ? func_800CD5A8(?);
// ? func_800CD82C(?);
// ? func_800CDAB4(?);
// ? func_800CDD14(?);
// ? func_800CDDA0(?);
// ? func_800CDE18(?);
// ? func_800CDE54(?);
// ? func_800CDE74(?);
// ? func_800CDE94(?);
// ? func_800CDF5C(?);
// ? func_800CE010(?);
// ? func_800CE3E0(?);
// ? func_800CE480(?);
// ? func_800CECE8(?);
// ? func_800CED30(?);
// ? func_800CEE70(?);
// ? func_800CEF08(?);
// ? func_800CEFE0(?);
// ? func_800CF1A0(?);
// ? func_800CF280(?);
// ? func_800CF3C8(?);
// ? func_800CF4DC(?);
// ? func_800CF594(?);
// ? func_800CF6E8(?);
// ? func_800D0CBC(?);
// ? func_800D0EC8(?);
void func_800D0FA0();
void func_800D105C(struct _HSD_GObj *);
void func_800D14E4();
// ? func_800D15D0(?);
// ? func_800D170C(?);
// ? func_800D18CC(?);
void func_800D1A8C();
// ? func_800D1B04(?);
// ? func_800D1BA0(?);
// ? func_800D1D10(?);
void func_800D1E80();
// ? func_800D1F6C(?);
// ? func_800D1FFC(?);
// ? func_800D21BC(?);
void func_800D237C();
// ? func_800D23F4(?);
// ? func_800D2490(?);
// ? func_800D2600(?);
// ? func_800D2770(?);
// ? func_800D27C4(?);
// ? func_800D2818(?);
// ? func_800D2890(?);
// ? func_800D290C(?);
// ? func_800D299C(?);
// ? func_800D2A3C(?);
// ? func_800D2AD8(?);
// ? func_800D2B04(?);
// ? func_800D2B30(?);
// ? func_800D2BF8(?);
// ? func_800D2CA0(?);
// ? func_800D2CD4(?);
// ? func_800D2D0C(?);
// ? func_800D2D50(?);
// ? func_800D2E7C(?);
// ? func_800D2FA4(?);
// ? func_800D3004(?);
void func_800D3158(struct _HSD_GObj *fighterObj);
// ? func_800D331C(?);
// ? func_800D34E0(?);
// ? func_800D35FC(?);
// ? func_800D3680(?);
// ? func_800D38B8(?);
// ? func_800D3950(?);
// ? func_800D3BC8(?);
// ? func_800D3E40(?);
// ? func_800D40B8(?);
// ? func_800D41C4(?);
// ? func_800D4580(?);
// ? func_800D4780(?);
// ? func_800D47B8(?);
// ? func_800D481C(?);
// ? func_800D4E50(?);
void func_800D4F24(struct _HSD_GObj *, s32);
// ? func_800D4FF4(?);
// ? func_800D5600(?);
void func_800D5AEC(HSD_GObj *, s32, s32, s32, Fighter *, f32, f32);
// ? func_800D5BF8(?);
void func_800D5CB0(struct _HSD_GObj *, s32, f32);
// ? func_800D5D3C(?);
// ? func_800D5F18(?);
// ? func_800D5F38(?);
// ? func_800D5F58(?);
// ? func_800D5F84(?);
// ? func_800D5FB0(?);
// ? func_800D600C(?);
// ? func_800D627C(?);
// ? func_800D62C4(?);
// ? func_800D638C(?);
// ? func_800D65D8(?);
// ? func_800D6620(?);
s32 func_800D67C4(struct _Fighter *);
// ? func_800D6824(?);
s32 func_800D688C(struct _Fighter *);
// ? func_800D68C0(?);
s32 func_800D6928(struct _Fighter *);
// ? func_800D695C(?);
// ? func_800D69C4(?);
// ? func_800D6A50(?);
// ? func_800D6AC4(?);
// ? func_800D6B00(?);
// ? func_800D6B8C(?);
// ? func_800D6C60(?);
// ? func_800D6E34(?);
// ? func_800D6E70(?);
// ? func_800D6F58(?);
// ? func_800D705C(?);
// ? func_800D7100(?);
void func_800D71D8();
// ? func_800D7268(?);
// ? func_800D72A0(?);
// ? func_800D730C(?);
// ? func_800D74A4(?);
// ? func_800D769C(?);
// ? func_800D76B8(?);
// ? func_800D7770(?);
// ? func_800D79B4(?);
// ? func_800D83AC(?);
// ? func_800D84D4(?);
// ? func_800D86E0(?);
// ? func_800D874C(?);
// ? func_800D8990(?);
// ? func_800D8A38(?);
// ? func_800D8AE0(?);
// ? func_800D8B9C(?);
// ? func_800D8C54(?);
// ? func_800D8E94(?);
// ? func_800D8EC8(?);
// ? func_800D9228(?);
// ? func_800D949C(?);
void func_800D94D8(HSD_GObj *);
// ? func_800D952C(?);
// ? func_800D9558(?);
// ? func_800D9930(?);
// ? func_800D9C64(?);
// ? func_800D9C98(?);
// ? func_800DA054(?);
// ? func_800DA1D8(?);
// ? func_800DA2B0(?);
// ? func_800DA4C0(?);
// ? func_800DA4FC(?);
// ? func_800DA698(?);
void func_800DA824(Fighter *);
// ? func_800DA8E4(?);
// ? func_800DAA40(?);
// ? func_800DAC78(?);
// ? func_800DAD18(?);
// ? func_800DAEEC(?);
void func_800DB368(Fighter *, Fighter *);
void func_800DB464(HSD_GObj *);
// ? func_800DB500(?);
// ? func_800DB5D8(?);
// ? func_800DB6C8(?);
// ? func_800DB790(?);
// ? func_800DB8A4(?);
// ? func_800DB908(?);
// ? func_800DBAE4(?);
// ? func_800DBBF8(?);
// ? func_800DC014(?);
// ? func_800DC044(?);
// ? func_800DC070(?);
// ? func_800DC284(?);
// ? func_800DC3A4(?);
// ? func_800DC404(?);
void func_800DC750(HSD_GObj *);
// ? func_800DC920(?);
// ? func_800DCE34(?);
// ? func_800DCFD4(?);
// ? func_800DD100(?);
void func_800DD168(HSD_GObj *);
// ? func_800DD1E4(?);
// ? func_800DD398(?);
// ? func_800DD4B0(?);
// ? func_800DD724(?);
// ? func_800DD92C(?);
// ? func_800DD930(?);
// ? func_800DDA10(?);
// ? func_800DDA5C(?);
// ? func_800DDA60(?);
// ? func_800DDB40(?);
// ? func_800DDB8C(?);
// ? func_800DDB90(?);
// ? func_800DDCB4(?);
// ? func_800DDD00(?);
// ? func_800DDD04(?);
// ? func_800DDDE4(?);
void func_800DE2A8(HSD_GObj *, HSD_GObj *);
// ? func_800DE2CC(?);
// ? func_800DE2F0(?);
// ? func_800DE3FC(?);
void func_800DE508(HSD_GObj *);
// ? func_800DE5A4(?);
void func_800DE7C0(struct _HSD_GObj *, s32, s32);
// ? func_800DE854(?);
// ? func_800DE920(?);
// ? func_800DE974(?);
// ? func_800DE9B8(?);
// ? func_800DE9D8(?);
// ? func_800DEA28(?);
// ? func_800DEAE8(?);
// ? func_800DEBD0(?);
// ? func_800DED30(?);
// ? func_800DEE84(?);
void func_800DEEA8(struct _HSD_GObj *fighterObj);
// ? func_800DEEB8(?);
u32 func_800DEEE8(struct _Fighter *, struct _Vec2 *);
void func_800DEF38();
void func_800DF0D0();
// ? func_800DF1C8(?);
// ? func_800DF21C(?);
// ? func_800DF2D8(?);
// ? func_800DF30C(?);
// ? func_800DF3A8(?);
// ? func_800DF3DC(?);
// ? func_800DF478(?);
// ? func_800DF50C(?);
// ? func_800DF608(?);
// ? func_800DF644(?);
// ? func_800DF678(?);
// ? func_800DF6F8(?);
// ? func_800DF72C(?);
// ? func_800DF79C(?);
// ? func_800DF7F4(?);
// ? func_800DF844(?);
// ? func_800DF878(?);
// ? func_800DF8B0(?);
// ? func_800DF8E8(?);
// ? func_800DF910(?);
// ? ftDonkey_800DF938(?);
// ? ftDonkey_800DF980(?);
// ? ftDonkey_800DFA70(?);
// ? ftDonkey_800DFA98(?);
// ? ftDonkey_800DFAE4(?);
// ? ftWalkCommon_GetWalkType_800DFBF8(?);
// ? ftWalkCommon_800DFC70(?);
// ? ftWalkCommon_800DFCA4(?);
// ? ftWalkCommon_800DFDDC(?);
// ? ftWalkCommon_800DFEC8(?);
// ? ftWalkCommon_800E0060(?);
// ? ftDonkey_800E0134(?);
// ? ftDonkey_800E017C(?);
// ? ftDonkey_800E0294(?);
// ? ftDonkey_800E0350(?);
// ? ftDonkey_800E0378(?);
// ? ftDonkey_800E03C0(?);
// ? ftDonkey_800E04A4(?);
// ? ftDonkey_800E06D8(?);
// ? ftDonkey_800E0750(?);
// ? ftDonkey_800E07B0(?);
// ? ftMario_OnLoadForDrMario(?);
// ? ftMario_LoadSpecialAttrs(?);
// ? func_800E0D1C(?);
// ? func_800E1178(?);
// ? func_800E11E0(?);
// ? func_800E132C(?);
// ? func_800E1368(?);
// ? func_800E13F8(?);
// ? func_800E1428(?);
// ? func_800E18B8(?);
// ? func_800E198C(?);
void ftCaptain_OnLoadForGanon(struct _Fighter *); // UnclePunch map file: FighterOnLoad_Ganondorf
void ftCFalcon_LoadSpecialAttrs(struct _HSD_GObj *);
// ? ftCaptain_SpecialS_RemoveGFX(?);
// ? func_800E3EAC(?);
// ? func_800E4D7C(?);
// ? func_800E526C(?);
// ? func_800E5534(?);
// ? ftFox_OnLoadForFalco(?);
void ftFox_LoadSpecialAttrs(struct _HSD_GObj *);
// ? ftFox_AppealS_CheckIfUsed(?);
// ? ftFox_AppealS_CheckInput(?);
// ? ftFox_AppealS_Action(?);
// ? ftFox_FtGetHoldJoint(?);
// ? ftFox_ItGetHoldJoint(?);
// ? ftFox_CheckRemoveBlaster(?);
// ? ftFox_GetBlasterAction(?);
// ? ftFox_CheckBlasterAction(?);
// ? ftFox_ClearBlaster(?);
void ftFox_RemoveBlaster(struct _HSD_GObj *);
// ? ftFox_Throw_Anim(?);
// ? ftFox_SpecialHiHold_GroundToAir(?);
// ? ftFox_SpecialHiHoldAir_AirToGround(?);
// ? ftFox_SpecialHi_GroundToAir(?);
// ? ftFox_SpecialAirHi_AirToGround(?);
// ? ftFox_SpecialAirHi_Action(?);
// ? ftFox_SpecialHiFall_Action(?);
// ? ftFox_SpecialHiFall_AirToGround(?);
// ? ftFox_SpecialHiLanding_GroundToAir(?);
// ? ftFox_SpecialHiBound_Action(?);
// ? ftFox_SpecialLwStart_CheckPass(?);
// ? ftFox_SpecialLwStart_Pass(?);
// ? ftFox_SpecialLwStart_GroundToAir(?);
// ? ftFox_SpecialAirLwStart_AirToGround(?);
// ? ftFox_SpecialLwLoop_CheckPass(?);
// ? ftFox_SpecialLwLoop_Pass(?);
// ? ftFox_SpecialLwLoop_GroundToAir(?);
// ? ftFox_SpecialAirLwLoop_AirToGround(?);
// ? ftFox_SpecialLw_CreateReflectHit(?);
// ? ftFox_SpecialLwLoop_Action(?);
// ? ftFox_SpecialAirLwLoop_Action(?);
// ? ftFox_SpecialLw_Turn(?);
// ? ftFox_SpecialLwTurn_GroundToAir(?);
// ? ftFox_SpecialAirLwTurn_GroundToAir(?);
// ? ftFox_SpecialLwTurn_Check(?);
// ? ftFox_SpecialLwHit_Check(?);
// ? ftFox_SpecialLwHit_GroundToAir(?);
// ? ftFox_SpecialAirLwHit_AirToGround(?);
// ? ftFox_SpecialLwHit_SetCall(?);
// ? ftFox_SpecialLwEnd_GroundToAir(?);
// ? ftFox_SpecialAirLwEnd_AirToGround(?);
// ? ftFox_SpecialLwEnd_Action(?);
// ? ftFox_SpecialAirLwEnd_Action(?);
// ? ftFox_SpecialS_CheckGhostRemove(?);
// ? ftFox_SpecialS_GetCmdVar2(?);
// ? ftFox_SpecialS_CopyGhostPosIndexed(?);
// ? ftFox_SpecialS_ReturnFloatVarIndexed(?);
// ? ftFox_SpecialSStart_GroundToAir(?);
// ? ftFox_SpecialAirSStart_AirToGround(?);
// ? ftFox_SpecialS_GroundToAir(?);
// ? ftFox_SpecialAirS_AirToGround(?);
// ? ftFox_SpecialS_Action(?);
// ? ftFox_SpecialAirS_Action(?);
// ? ftFox_SpecialSEnd_Action(?);
// ? ftFox_SpecialAirSEnd_Action(?);
// ? func_800EAD64(?);
// ? ftLink_OnLoadForCLink(?);
// void ftLink_OnItemPickup(HSD_GObj*, int);
// ? func_800EB1FC(?);
// ? ftLink_LoadSpecialAttrs(?);
// ? func_800EB3BC(?);
// ? func_800EB42C(?);
// ? func_800EB618(?);
// ? func_800EB75C(?);
// ? func_800EBE64(?);
// ? func_800EBEC4(?);
// ? func_800EBEEC(?);
// ? func_800EBF20(?);
// ? func_800EBFCC(?);
// ? func_800EBFDC(?);
// ? func_800EC00C(?);
// ? func_800EC03C(?);
void func_800EC06C();
// ? func_800EC0C4(?);
// ? func_800EC4B4(?);
// ? func_800ECBC4(?);
// ? func_800ECC0C(?);
// ? func_800ECC6C(?);
// ? func_800ECCCC(?);
void func_800ECD04(HSD_GObj *);
void func_800ECD58(HSD_GObj *);
// ? func_800EEB00(?);
// ? func_800EEB1C(?);
// ? func_800EEC34(?);
void func_800EED50(s32, s32);
// ? func_800EEEC4(?);
// ? func_800EF040(?);
// ? func_800EF0E4(?);
// ? func_800EF35C(?);
// ? func_800EF438(?);
// ? func_800EF69C(?);
// ? func_800F1420(?);
// ? func_800F16D0(?);
// ? func_800F190C(?);
// ? func_800F19AC(?);
// ? func_800F1A8C(?);
// ? func_800F1BAC(?);
// ? func_800F1CD8(?);
void func_800F1D24();
// ? func_800F1DAC(?);
// ? func_800F1F1C(?);
// ? func_800F1F68(?);
// ? func_800F21C0(?);
// ? func_800F22D4(?);
// ? func_800F331C(?);
// ? func_800F346C(?);
// ? func_800F3570(?);
// ? func_800F36DC(?);
// ? func_800F37EC(?);
// ? func_800F3B28(?);
// ? func_800F5318(?);
// ? func_800F539C(?);
// ? func_800F5524(?);
// ? func_800F5800(?);
// ? func_800F5820(?);
// ? func_800F5874(?);
// ? func_800F5898(?);
// ? func_800F58AC(?);
// ? func_800F58D8(?);
// ? func_800F5954(?);
// ? func_800F597C(?);
// ? func_800F598C(?);
// ? func_800F5A04(?);
// ? func_800F5A38(?);
// ? func_800F5A60(?);
// ? func_800F5A70(?);
// ? func_800F5A88(?);
// ? func_800F5A98(?);
// ? func_800F5AB0(?);
// ? func_800F5AC0(?);
// ? func_800F5AD8(?);
// ? func_800F5AF0(?);
// ? func_800F5B00(?);
// ? func_800F5B10(?);
// ? func_800F5B20(?);
// ? func_800F5B3C(?);
// ? func_800F5B4C(?);
// ? func_800F5B5C(?);
void func_800F5BA4();
void func_800F5C34();
// ? func_800F5D04(?);
// ? func_800F5DE8(?);
// ? func_800F5EA8(?);
// ? func_800F5F68(?);
// ? func_800F6070(?);
// ? func_800F6388(?);
// ? func_800F63EC(?);
// ? func_800F6BB0(?);
// ? func_800F9070(?);
// ? func_800F9090(?);
// ? func_800F951C(?);
// ? func_800F9598(?);
// ? func_800FA588(?);
// ? func_800FA7D4(?);
// ? func_800FA83C(?);
// ? func_800FA878(?);
// ? func_800FB394(?);
// ? func_800FB418(?);
// ? func_800FB444(?);
// ? func_800FB470(?);
// ? func_800FB500(?);
// ? func_800FB5F4(?);
// ? func_800FB6DC(?);
// ? func_800FB800(?);
// ? func_800FB840(?);
// ? func_800FCC14(?);
// ? func_800FCC6C(?);
// ? func_800FCCBC(?);
// ? func_800FCD04(?);
// ? func_800FCD60(?);
// ? func_800FCDE0(?);
// ? func_800FDC00(?);
// ? func_800FDC70(?);
// ? func_800FDD14(?);
// ? func_800FDD4C(?);
// ? func_800FDDF4(?);
// ? func_800FDEB4(?);
// ? func_800FDEE0(?);
// ? func_800FDF30(?);
// ? func_800FEC78(?);
// ? func_800FECBC(?);
// ? func_800FECE8(?);
// ? func_80100DE0(?);
// ? func_80100F94(?);
// ? func_801010D4(?);
// ? func_8010131C(?);
// ? func_8010140C(?);
// ? func_80105E8C(?);
// ? func_80105F3C(?);
// ? func_80105FF0(?);
// ? func_80106020(?);
// ? func_8010603C(?);
// ? func_80106F44(?);
// ? func_80106F9C(?);
// ? func_80106FEC(?);
// ? func_80107040(?);
// ? func_8010709C(?);
// ? func_80107130(?);
// ? func_801071FC(?);
// ? func_80107410(?);
// ? func_80108CE8(?);
// ? func_80108D04(?);
// ? func_80109238(?);
// ? func_80109260(?);
// ? func_80109290(?);
// ? func_8010929C(?);
// ? func_801092AC(?);
// ? func_801092BC(?);
// ? func_801092CC(?);
// ? func_801092DC(?);
// ? func_801092F4(?);
// ? func_8010930C(?);
// ? func_80109324(?);
// ? func_8010933C(?);
// ? func_80109354(?);
// ? func_80109380(?);
// ? func_801093A0(?);
// ? func_801093B4(?);
// ? func_8010A8BC(?);
// ? func_8010AA2C(?);
// ? func_8010AC78(?);
// ? func_8010B868(?);
// ? func_8010B8E0(?);
// ? func_8010BB50(?);
// ? func_8010BBC8(?);
// ? func_8010BC40(?);
// ? func_8010BC90(?);
// ? func_8010BF90(?);
// ? func_8010C06C(?);
// ? func_8010C148(?);
// ? func_8010C1E8(?);
// ? func_8010C3C0(?);
// ? func_8010C3F4(?);
// ? func_8010C47C(?);
// ? func_8010C4AC(?);
// ? func_8010C8D8(?);
// ? func_8010C9CC(?);
// ? func_8010CC6C(?);
// ? func_8010CCD4(?);
// ? func_8010CD44(?);
// ? func_8010D074(?);
// ? func_8010D0A8(?);
// ? func_8010D130(?);
// ? func_8010D160(?);
// ? func_8010D580(?);
// ? func_8010D5F0(?);
// ? func_8010D660(?);
// ? func_8010D6D0(?);
// ? ftDonkey_8010DE88(?);
// ? ftDonkey_8010DFF8(?);
// ? ftDonkey_8010E464(?);
// ? ftDonkey_8010E4EC(?);
// ? ftDonkey_DestroyAllEffectsPlus(?);
// ? ftDonkey_DestroyAllEffects_SpecialHi(?);
// ? func_80110490(?);
// ? func_80110610(?);
// ? func_80110788(?);
// ? func_80110980(?);
// ? func_80110A80(?);
// ? func_80110AEC(?);
// ? func_80110BCC(?);
// ? func_80110E4C(?);
// ? func_80110E88(?);
// ? func_80110F18(?);
// ? func_80110F58(?);
// ? func_80110F64(?);
// ? func_80110F70(?);
// ? func_801110E8(?);
// ? func_80111440(?);
// ? func_801114E4(?);
// ? func_80111830(?);
// ? func_80111988(?);
// ? func_80111CB0(?);
// ? func_80111D54(?);
// ? func_80111DF8(?);
// ? func_80111EB4(?);
// ? func_80111F70(?);
// ? func_80111FA0(?);
// ? func_80111FBC(?);
// ? func_801120D4(?);
// ? func_80112F48(?);
// ? func_80112FA8(?);
// ? func_80113324(?);
// ? func_80113390(?);
// ? func_8011374C(?);
// ? func_801137C8(?);
// ? func_80113838(?);
// ? func_80113A30(?);
// ? func_80113E40(?);
// ? func_80113EAC(?);
// ? func_80113F68(?);
// ? func_8011444C(?);
// ? func_801144B8(?);
// ? func_80114680(?);
// ? func_801146EC(?);
// ? func_ftNess_GetAbsorbHeal(?);
// ? ftNess_AttackS4_Action(?);
// ? ftNess_CheckNessBatRemove(?);
void ftNess_ItemNessBatRemove(struct _HSD_GObj *);
// ? ftNess_ItemNessBatSetNULL(?);
// ? ftNess_YoyoCheckTimedRehit(?);
// ? ftNess_YoyoApplyDamage(?);
// ? ftNess_YoyoCheckEnvColl(?);
// ? ftNess_YoyoSetUnkPos(?);
// ? ftNess_YoyoSetHitPos(?);
// ? ftNess_YoyoSetHitPosUnk(?);
// ? ftNess_YoyoCheckNoObstruct(?);
// ? ftNess_YoyoSetVarAll(?);
// ? ftNess_YoyoApplySmash(?);
// ? ftNess_YoyoSetChargeDamage(?);
// ? ftNess_YoyoThink_IsRemove(?);
// ? ftNess_YoyoSetUnkRate(?);
// ? ftNess_YoyoCreateItem(?);
// ? ftNess_YoyoItemSetFlag(?);
void ftNess_YoyoItemDespawn(struct _HSD_GObj *);
// ? ftNess_YoyoItemSetUnk2(?);
// ? ftNess_AttackHi4_Action(?);
// ? ftNess_AttackHi4_Charge_Action(?);
// ? ftNess_AttackHi4_Release_Action(?);
// ? ftNess_AttackLw4_Action(?);
// ? ftNess_AttackLw4_Charge_Action(?);
// ? ftNess_AttackLw4_Release_Action(?);
// ? ftNess_CheckSpecialNHold(?);
// ? ftNess_SpecialNSetNULL(?);
void ftNess_ItemPKFlushSetNULL(struct _HSD_GObj *);
// ? ftNess_SpecialHiStopGFX(?);
// ? ftNess_ItemPKThunder_CheckNessCollide(?);
// ? ftNess_CheckSpecialHiHold(?);
// ? ftNess_ItemPKThunderRemove(?);
void ftNess_SpecialHiTakeDamage(struct _HSD_GObj *);
// ? ftNess_ItemPKThunderCheckOwn(?);
// ? ftNess_SpecialAirHi_CollisionModVel(?);
// ? ftNess_SpecialHi_Action(?);
// ? ftNess_SpecialAirHi_Action(?);
// ? ftNess_SpecialLwStart_GroundToAir(?);
// ? ftNess_SpecialAirLwStart_AirToGround(?);
// ? ftNess_SpecialLwHold_GroundToAir(?);
// ? ftNess_SpecialAirLwHold_AirToGround(?);
// ? ftNess_SpecialLwHold_Action(?);
// ? ftNess_SpecialAirLwHold_Action(?);
// ? ftNess_SpecialLwTurn_GroundToAir(?);
// ? ftNess_SpecialAirLwTurn_AirToGround(?);
// ? ftNess_SpecialLwHold_GroundOrAir(?);
// ? ftNess_SpecialLwHit_GroundToAir(?);
// ? ftNess_SpecialAirLwHit_AirToGround(?);
// ? ftNess_AbsorbThink_DecideAction(?);
// ? ftNess_SpecialLwEnd_GroundToAir(?);
// ? ftNess_SpecialAirLwEnd_AirToGround(?);
// ? ftNess_SpecialLwEnd_Action(?);
// ? ftNess_SpecialAirLwEnd_Action(?);
// ? ftIceClimber_OnLoadForNana(?);
// ? func_8011F16C(?);
// ? func_8011F190(?);
// ? func_8011F68C(?);
// ? func_8011F6FC(?);
// ? func_8011F720(?);
// ? func_8011F964(?);
// ? func_80120E68(?);
// ? func_80120FE0(?);
// ? func_801210C8(?);
// ? func_8012114C(?);
// ? func_80121164(?);
// ? func_801217EC(?);
// ? func_8012184C(?);
// ? func_801218AC(?);
// ? func_801218F8(?);
// ? func_80121CE0(?);
// ? func_80121D40(?);
// ? func_80121DA0(?);
// ? func_80121DD8(?);
// ? func_80121FD8(?);
// ? func_80122038(?);
// ? func_80122098(?);
// ? func_801220D4(?);
// ? func_801222E8(?);
// ? func_80122348(?);
// ? func_80122380(?);
// ? func_801227AC(?);
// ? func_8012280C(?);
// ? func_80122898(?);
// ? ftIceClimber_SpecialLw_StartAction(?);
// ? func_8012300C(?);
// ? func_8012309C(?);
// ? func_801230D0(?);
// ? func_801232A4(?);
// ? func_801233F8(?);
// ? func_80123720(?);
// ? func_8012378C(?);
// ? func_801237F8(?);
// ? func_801238E4(?);
// ? func_80123954(?);
// ? func_80123B10(?);
// ? func_80123B3C(?);
// ? func_80123BF0(?);
// ? Pika_CopyAttributes_801243AC(?);
void ftPikachu_LoadSpecialAttrs(struct _HSD_GObj *);
// ? ftPikachu_ActionChange_801250FC(?);
// ? ftPikachu_ActionChange_8012515C(?);
// ? ftPikachu_ActionChange_80125414(?);
// ? ftPikachu_ActionChange_80125474(?);
// ? ftPikachu_ActionChange_801254D4(?);
// ? ftPikachu_ActionChange_80125528(?);
// ? ftPikachu_ActionChange_80125774(?);
// ? ftPikachu_ActionChange_801257D4(?);
// ? ftPikachu_ActionChange_80125834(?);
// ? ftPikachu_ActionChange_801258A0(?);
// ? ftPikachu_ActionChange_80125A54(?);
// ? ftPikachu_ActionChange_80125CD0(?);
// ? ftPikachu_ActionChange_80125D28(?);
// ? ftPikachu_ActionChange_80126084(?);
// ? ftPikachu_ActionChange_801260E4(?);
// ? ftPikachu_8012642C(?);
// ? ftPikachu_ActionChange_80126A2C(?);
// ? ftPikachu_ActionChange_80126AA4(?);
// ? ftPikachu_80126C0C(?);
// ? ftPikachu_80126E1C(?);
// ? ftPikachu_80127064(?);
// ? ftPikachu_ActionChange_8012744C(?);
// ? ftPikachu_ActionChangeUpdateVel_801274AC(?);
// ? ftPikachu_ActionChangeUpdateVel_80127534(?);
// ? ftPikachu_CheckProperty_801275CC(?);
// ? ftPikachu_80127608(?);
// ? ftPikachu_SetState_8012764C(?);
// ? ftPikachu_8012765C(?);
// ? ftSamus_801287C4(?);
// ? ftSamus_80128944(?);
// ? ftSamus_80128A1C(?);
f32 ftSamus_80128AC8(HSD_GObj *fighterObj, f32 farg1, f32 farg2);
void ftSamus_80128B1C(HSD_GObj *, f32, f32, f32);
// ? ftSamus_80129048(?);
// ? ftSamus_801290A4(?);
// ? ftSamus_80129100(?);
// ? ftSamus_80129158(?);
// ? ftSamus_801291A8(?);
// ? ftSamus_801291F0(?);
// ? ftSamus_80129258(?);
// ? ftSamus_801292E4(?);
// ? ftSamus_801293BC(?);
// ? ftSamus_8012A068(?);
// ? ftSamus_8012A168(?);
// ? ftSamus_8012A640(?);
// ? ftSamus_8012AEBC(?);
// ? ftSamus_8012AF38(?);
// ? ftSamus_8012B570(?);
// ? ftSamus_8012B5F0(?);
// ? ftSamus_8012B668(?);
// ? func_8012B6E8(?);
// ? func_8012B804(?);
// ? func_8012B8A4(?);
// ? func_8012B918(?);
// ? ftYoshi_8012BAC0(?);
// ? func_8012BDA0(?);
// ? func_8012BE3C(?);
// ? func_8012BECC(?);
// ? func_8012C1D4(?);
// ? func_8012C49C(?);
// ? func_8012C600(?);
// ? func_8012C850(?);
// ? func_8012C914(?);
// ? func_8012CC1C(?);
// ? func_8012CC6C(?);
// ? func_8012CC94(?);
// ? func_8012CCC4(?);
// ? func_8012CCD0(?);
// ? func_8012CCE0(?);
// ? func_8012CCF0(?);
// ? func_8012CD00(?);
// ? func_8012CD10(?);
// ? func_8012CD28(?);
// ? func_8012CD40(?);
// ? func_8012CD58(?);
// ? func_8012CD70(?);
// ? func_8012CD88(?);
// ? func_8012CDB4(?);
// ? func_8012CDD4(?);
// ? func_8012DF00(?);
// ? func_8012DF18(?);
// ? func_8012DF8C(?);
// ? func_8012E270(?);
// ? func_8012E944(?);
// ? func_8012EA04(?);
// ? func_8012EAD8(?);
// ? func_8012EB48(?);
// ? func_8012F0DC(?);
// ? func_8012F35C(?);
// ? func_80132A64(?);
// ? ftKoopa_OnLoadForGKoopa(?);
// ? ftKoopa_LoadSpecialAttrs(?);
// ? func_80132DC0(?);
// ? func_80132DD0(?);
// ? func_80132DE0(?);
// ? func_80132DF0(?);
// ? func_80132E00(?);
// ? func_80132E10(?);
// ? func_80132E20(?);
// ? func_80132E30(?);
// ? func_801348C0(?);
// ? func_80134988(?);
// ? func_80134A5C(?);
// ? func_80134ACC(?);
// ? func_80134D78(?);
// ? func_80134DE0(?);
// ? func_80134E1C(?);
// ? func_80135780(?);
// ? func_80135C08(?);
void ftMars_OnLoadForRoy(struct _Fighter *);
void ftMars_LoadSpecialAttrs(struct _HSD_GObj *);
// ? func_80136A1C(?);
// ? func_80136A7C(?);
// ? func_80136DB4(?);
// ? func_80136E14(?);
// ? func_80136E74(?);
// ? func_80136EAC(?);
// ? func_801371FC(?);
// ? func_801372A8(?);
// ? func_80137354(?);
// ? func_801373B8(?);
// ? func_801376E8(?);
// ? func_80137748(?);
// ? func_80137940(?);
// ? func_801379D0(?);
// ? func_80137A9C(?);
// ? func_80137CBC(?);
// ? func_80137D60(?);
// ? func_80137E0C(?);
// ? func_80137FF8(?);
// ? func_8013809C(?);
// ? func_80138148(?);
// ? func_80138D38(?);
// ? func_80138DD0(?);
// ? func_80139080(?);
// ? func_801390E0(?);
// ? ftZelda_801395C8(?);
// ? func_801396E0(?);
// ? func_80139B44(?);
// ? func_80139BB0(?);
// ? func_80139F6C(?);
// ? func_80139FE8(?);
// ? func_8013A058(?);
// ? func_8013A244(?);
// ? func_8013A648(?);
// ? func_8013A6A8(?);
// ? func_8013A764(?);
// ? func_8013AC88(?);
// ? func_8013AD1C(?);
// ? func_8013B1CC(?);
// ? func_8013B238(?);
// ? func_8013B400(?);
// ? func_8013B46C(?);
// ? func_8013B540(?);
// ? func_8013B574(?);
// ? func_8013B5C4(?);
// ? func_8013B5EC(?);
// ? func_8013C360(?);
// ? func_8013C494(?);
// ? func_8013CD34(?);
// ? func_8013CDD8(?);
// ? func_8013D104(?);
// ? func_8013D19C(?);
// ? func_8013D590(?);
// ? func_8013D5F0(?);
// ? func_8013D8E4(?);
// ? func_8013DA24(?);
// ? func_8013DC64(?);
// ? func_8013DD54(?);
// ? ftLuigi_SpecialSStart_GroundToAir(?);
// ? ftLuigi_SpecialAirSStart_AirToGround(?);
// ? ftLuigi_SpecialSHold_GroundToAir(?);
// ? ftLuigi_SpecialAirSHold_AirToGround(?);
// ? ftLuigi_SpecialSHold_Action(?);
// ? ftLuigi_SpecialAirSHold_Action(?);
// ? ftLuigi_SpecialSLaunch_GroundToAir(?);
// ? ftLuigi_SpecialAirSLaunch_AirToGround(?);
// ? ftLuigi_SpecialSLaunch_Action(?);
// ? ftLuigi_SpecialAirSLaunch_Action(?);
// ? ftLuigi_SpecialSMisfire_GroundToAir(?);
// ? ftLuigi_SpecialAirSMisfire_AirToGround(?);
// ? ftLuigi_SpecialSMisfire_Action(?);
// ? ftLuigi_SpecialAirSMisfire_Action(?);
// ? ftLuigi_SpecialSFly_Action(?);
// ? ftLuigi_SpecialSEnd_Action(?);
// ? ftLuigi_SpecialAirSEnd_Action(?);
// ? func_801450D4(?);
// ? func_8014547C(?);
// ? func_801454E8(?);
// ? func_801458A4(?);
// ? func_80145920(?);
// ? func_80145990(?);
// ? func_80145B94(?);
// ? func_80145FB0(?);
// ? func_80146010(?);
// ? func_801460CC(?);
// ? func_80146198(?);
// ? func_801461A8(?);
// ? func_80146CCC(?);
// ? func_80146D24(?);
// ? func_80146D74(?);
// ? func_80146DC8(?);
// ? func_80146E30(?);
// ? func_80146ED0(?);
// ? func_80146FA8(?);
// ? func_801471C8(?);
// ? func_80148B78(?);
// ? ftCLink_OnItemPickup(?);
// ? func_80149018(?);
// ? func_8014919C(?);
// ? func_8014920C(?);
void func_80149268(HSD_GObj *);
// ? func_801492C4(?);
// ? func_801492F4(?);
// ? func_80149318(?);
// ? func_801497CC(?);
// ? func_80149844(?);
// ? func_801498A0(?);
// ? func_801498EC(?);
// ? func_80149910(?);
// ? ftGameWatch_OnDamage(?);
// ? ftGameWatch_8014A538(?);
// ? ftGameWatch_8014A7F4(?);
// ? ftGameWatch_8014A814(?);
// ? ftGameWatch_ItemTorchSetFlag(?);
// ? ftGameWatch_ItemTorchOnDamage(?);
// ? ftGameWatch_ItemTorchExitHitlag(?);
// ? ftGameWatch_ItemCheckTorchRemove(?);
// ? ftGameWatch_AttackS4_Action(?);
// ? ftGameWatch_ItemManholeRemove(?);
// ? ftGameWatch_ItemManholeOnDamage(?);
// ? ftGameWatch_ItemManholeExitHitlag(?);
// ? ftGameWatch_ItemCheckManholeRemove(?);
// ? ftGameWatch_AttackLw3_Action(?);
// ? ftGameWatch_ItemParachuteOnLand(?);
// ? ftGameWatch_ItemParachuteSetFlag(?);
// ? ftGameWatch_ItemParachuteRemove(?);
// ? ftGameWatch_ItemCheckParachuteRemove(?);
// ? ftGameWatch_ItemTurtleOnLand(?);
// ? ftGameWatch_ItemTurtleSetFlag(?);
// ? ftGameWatch_ItemTurtleRemove(?);
// ? ftGameWatch_ItemCheckTurtleRemove(?);
// ? ftGameWatch_ItemSparkyOnLand(?);
// ? ftGameWatch_ItemSparkySetFlag(?);
// ? ftGameWatch_ItemSparkyRemove(?);
// ? ftGameWatch_AttackAir_ExitItemHitlag(?);
// ? ftGameWatch_ItemCheckSparkyRemove(?);
// ? ftGameWatch_AttackAir_DecideAction(?);
// ? ftGameWatch_AttackAirN_Action(?);
// ? ftGameWatch_AttackAirB_Action(?);
// ? ftGameWatch_AttackAirHi_Action(?);
// ? ftGameWatch_LandingAirN_Init(?);
// ? ftGameWatch_LandingAirB_Init(?);
// ? ftGameWatch_LandingAirHi_Init(?);
// ? ftGameWatch_Attack11_DecideAction(?);
// ? ftGameWatch_ItemGreenhouseSetFlag(?);
// ? ftGameWatch_ItemGreenhouseRemove(?);
// ? ftGameWatch_ItemGreenhouseExitHitlag(?);
// ? ftGameWatch_ItemGreenhouse_CheckAll(?);
// ? ftGameWatch_ItemGreenhouse_CheckAttack11(?);
// ? ftGameWatch_Attack11_Action(?);
// ? ftGameWatch_Attack100Start_Action(?);
// ? ftGameWatch_Attack100Loop_Action(?);
// ? ftGameWatch_ItemJudgementSetFlag(?);
// ? ftGameWatch_ItemJudgementRemove(?);
// ? ftGameWatch_ItemJudgementExitHitlag(?);
// ? ftGameWatch_ItemCheckJudgementRemove(?);
// ? ftGameWatch_SpecialS_GetRandomInt(?);
// ? ftGameWatch_SpecialS_GroundToAir(?);
// ? ftGameWatch_SpecialAirS_AirToGround(?);
// ? ftGameWatch_ItemPanicSetFlag(?);
// ? ftGameWatch_ItemPanicRemove(?);
// ? ftGameWatch_ItemPanicExitHitlag(?);
// ? ftGameWatch_ItemCheckPanicRemove(?);
// ? ftGameWatch_SpecialLw_UpdateBucketModel(?);
// ? ftGameWatch_SpecialLw_GroundToAir(?);
// ? ftGameWatch_SpecialAirLw_AirToGround(?);
// ? ftGameWatch_SpecialLw_UpdateAction(?);
// ? ftGameWatch_SpecialAirLw_UpdateAction(?);
// ? ftGameWatch_SpecialLwCatch_GroundToAir(?);
// ? ftGameWatch_SpecialAirLwCatch_AirToGround(?);
// ? ftGameWatch_AbsorbThink_DecideAction(?);
// ? ftGameWatch_SpecialLwShoot_GroundToAir(?);
// ? ftGameWatch_SpecialAirLwShoot_AirToGround(?);
// ? ftGameWatch_SpecialLwShoot_ReleaseOil(?);
// ? ftGameWatch_SpecialAirLwShoot_ReleaseOil(?);
// ? ftGameWatch_ItemCheckRescueRemove(?);
// ? ftGameWatch_ItemRescueSetNULL(?);
// ? ftGameWatch_ItemRescueRemove(?);
// ? ftGameWatch_SpecialAirHi_Anim(?);
// ? ftGameWatch_SpecialAirHi_IASA(?);
// ? ftGameWatch_SpecialAirHi_Phys(?);
// ? ftGameWatch_SpecialAirHi_Coll(?);
// ? func_8014EA3C(?);
// ? func_8014EAAC(?);
// ? func_8014EB1C(?);
// ? func_8014EB8C(?);
// ? func_8014FA30(?);
// ? func_8014FBA4(?);
void func_8014FE10();
void func_8014FE58();
// ? func_8014FE5C(?);
// ? func_8014FF1C(?);
void func_80150144(struct _HSD_GObj *);
// ? func_80150894(?);
void func_80150C8C(struct _HSD_GObj *);
void func_80150D28(struct _HSD_GObj *);
void func_80150DC4(struct _HSD_GObj *, void *, Vec *);
void func_80151018(struct _HSD_GObj *gobj);
void func_801510B0(struct _HSD_GObj *);
// ? func_80151484(?);
void func_80151918(struct _HSD_GObj *);
void func_80151AC8(struct _HSD_GObj *);
void func_80151CA8(struct _HSD_GObj *);
void func_80151EB4(struct _HSD_GObj *);
void func_801520D8(struct _HSD_GObj *);
void func_8015247C(struct _HSD_GObj *);
void func_801525E0(struct _HSD_GObj *);
void func_80152880(struct _HSD_GObj *);
void func_80152CD8(struct _HSD_GObj *);
void func_80152F80(struct _HSD_GObj *);
void func_801530A4(struct _HSD_GObj *);
void func_801533CC(struct _HSD_GObj *);
void func_8015364C(struct _HSD_GObj *, struct _HSD_JObj *, f32, f32);
void func_80153730(struct _HSD_GObj *);
void func_80153820(struct _HSD_GObj *);
void func_80153910(struct _HSD_GObj *);
void func_80153A64(struct _HSD_GObj *);
void func_801541C8(struct _HSD_GObj *, void *);
void func_801542E0(struct _HSD_GObj *);
void func_801545A0(struct _HSD_GObj *);
void func_801546D8(HSD_GObj *);
// ? func_8015483C(?);
void func_80154A78(HSD_GObj *);
void func_80154C78(struct _HSD_GObj *);
void func_80154CF8(struct _HSD_GObj *, struct _Fighter *);
void func_80154E78(struct _HSD_GObj *);
void func_80155014(struct _HSD_GObj *);
void func_80155818(HSD_GObj *);
void func_80155B80(struct _HSD_GObj *);
// ? func_80155C94(?);
void func_80155D1C(struct _HSD_GObj *);
void func_80155D6C(HSD_GObj *, s32);
void func_80155FCC();
void func_80156014();
// ? func_80156018(?);
// ? func_801560D8(?);
// ? func_80156310(?);
// ? func_80156AD8(?);
// ? func_80157170(?);
// ? func_8015737C(?);
// ? func_8015764C(?);
// ? func_801577F8(?);
// ? func_801579F4(?);
// ? func_80157B58(?);
// ? func_80157DF8(?);
// ? func_801583E4(?);
// ? func_8015868C(?);
// ? func_80158B3C(?);
// ? func_80158DFC(?);
// ? func_80158F34(?);
// ? func_80159098(?);
// ? func_801592D4(?);
// ? func_801594D4(?);
// ? func_80159670(?);
// ? func_801597F0(?);
// ? func_80159F40(?);
// ? func_8015A030(?);
// ? func_8015A184(?);
void func_8015A2B0(HSD_GObj *);
void func_8015A3F4(HSD_GObj *);
// ? func_8015A560(?);
// ? func_8015A888(?);
// ? func_8015ABD0(?);
// ? func_8015AC50(?);
// ? func_8015ADD0(?);
// ? func_8015B174(?);
// ? func_8015B670(?);
// ? func_8015B778(?);
// ? func_8015B800(?);
// ? func_8015B850(?);
// ? func_8015B8FC(?);
// ? func_8015B998(?);
// ? func_8015BA34(?);
// ? func_8015BC88(?);
void func_8015BD20(struct _HSD_GObj *);
void func_8015BD24(s32, f32 *, f32, s32, s32, s32);
void func_8015BDB4(struct _HSD_GObj *);
void func_8015BE40(struct _HSD_GObj *gobj, Vec *, f32 *, f32, f32);
void func_8015BF74(struct _HSD_GObj *, f32);
void func_8015C010(struct _HSD_GObj *, f32);
void func_8015C09C(struct _HSD_GObj *, f32);
void func_8015C190(struct _HSD_GObj *);
void func_8015C208(struct _HSD_GObj *, Vec *);
struct _HSD_GObj *func_8015C244(struct _HSD_GObj *, Vec *);
// ? func_8015C270(?);
// ? func_8015C2A8(?);
// ? func_8015C2E0(?);
BOOL func_8015C31C(void);
// ? func_8015C358(?);
BOOL func_8015C3A0(void);
struct _HSD_GObj *func_8015C3E8(s32);
s32 func_8015C44C(s32);
s32 func_8015C4C4(void);
// ? func_8015C530(?);
void func_8015C5F8(struct _HSD_GObj *);
// ? func_8015C6BC(?);
// ? func_8015C74C(?);
// ? func_8015C7EC(?);
// ? func_8015C88C(?);
// ? func_8015C92C(?);
// ? func_8015C9CC(?);
// ? func_8015CA6C(?);
// ? func_8015CB7C(?);
// ? func_8015CB9C(?);
// ? func_8015CC14(?);
// ? func_8015CC34(?);
// ? func_8015CC40(?);
// ? func_8015CC4C(?);
// ? func_8015CC58(?);
// ? func_8015CC64(?);
// ? func_8015CC78(?);
// ? func_8015CC84(?);
// ? func_8015CC90(?);
// ? func_8015CC9C(?);
// ? func_8015CCE4(?);
// ? func_8015CCF0(?);
// ? func_8015CCFC(?);
// ? func_8015CD08(?);
// ? func_8015CD14(?);
// ? func_8015CD20(?);
// ? func_8015CD2C(?);
// ? func_8015CD38(?);
// ? func_8015CD44(?);
// ? func_8015CD50(?);
// ? func_8015CD5C(?);
// ? func_8015CD68(?);
// ? func_8015CD74(?);
// ? func_8015CD80(?);
// ? func_8015CD8C(?);
// ? func_8015CD98(?);
// ? func_8015CDA4(?);
// ? func_8015CDB0(?);
// ? func_8015CDBC(?);
// ? func_8015CDC8(?);
// ? func_8015CDD4(?);
// ? func_8015CDE0(?);
// ? func_8015CDEC(?);
s8 *func_8015CE44(s32, s32);
// ? func_8015CEB4(?);
// ? func_8015CEFC(?);
// ? func_8015CF5C(?);
// ? func_8015CF70(?);
// ? func_8015CF84(?);
// ? func_8015CFB4(?);
// ? func_8015CFCC(?);
// ? func_8015D00C(?);
// ? func_8015D06C(?);
// ? func_8015D084(?);
// ? func_8015D0C0(?);
// ? func_8015D0D8(?);
// ? func_8015D0F4(?);
// ? func_8015D134(?);
// ? func_8015D194(?);
// ? func_8015D1AC(?);
// ? func_8015D1C8(?);
// ? func_8015D1E8(?);
// ? func_8015D200(?);
// ? func_8015D21C(?);
// ? func_8015D25C(?);
// ? func_8015D2BC(?);
// ? func_8015D2D4(?);
// ? func_8015D2F0(?);
// ? func_8015D310(?);
// ? func_8015D328(?);
// ? func_8015D344(?);
// ? func_8015D384(?);
// ? func_8015D3E4(?);
// ? func_8015D3FC(?);
// ? func_8015D418(?);
// ? func_8015D438(?);
// ? func_8015D450(?);
// ? func_8015D48C(?);
// ? func_8015D4A8(?);
// ? func_8015D4E8(?);
// ? func_8015D5DC(?);
// ? func_8015D640(?);
// ? func_8015D6A4(?);
// ? func_8015D6BC(?);
// ? func_8015D6D8(?);
// ? func_8015D6F8(?);
// ? func_8015D710(?);
// ? func_8015D72C(?);
// ? func_8015D74C(?);
// ? func_8015D764(?);
// ? func_8015D780(?);
// ? func_8015D7A4(?);
// ? func_8015D7BC(?);
// ? func_8015D7D4(?);
// ? func_8015D7EC(?);
// ? func_8015D804(?);
// ? func_8015D818(?);
void func_8015D888(u32);
// ? func_8015D8B0(?);
// ? func_8015D8D8(?);
void func_8015D8FC(u32);
// ? func_8015D924(?);
s32 func_8015D94C(u32);
// ? func_8015D970(?);
// ? func_8015D984(?);
// ? func_8015D9F4(?);
// ? func_8015DA1C(?);
// ? func_8015DA40(?);
// ? func_8015DA68(?);
// ? func_8015DA90(?);
// ? func_8015DAB4(?);
// ? func_8015DADC(?);
// ? func_8015DB00(?);
// ? func_8015DB0C(?);
// ? func_8015DB18(?);
// ? func_8015DB2C(?);
// ? func_8015DB6C(?);
// ? func_8015DB80(?);
// ? func_8015DBF4(?);
// ? func_8015EA80(?);
// ? func_8015ECB0(?);
// ? func_8015ECBC(?);
// ? func_8015ED30(?);
// ? func_8015ED3C(?);
// ? func_8015ED4C(?);
// ? func_8015ED5C(?);
// ? func_8015ED68(?);
// ? func_8015ED74(?);
// ? func_8015ED80(?);
// ? func_8015ED8C(?);
// ? func_8015ED98(?);
// ? func_8015EDA4(?);
// ? func_8015EDB0(?);
// ? func_8015EDBC(?);
// ? func_8015EDC8(?);
// ? func_8015EDD4(?);
// ? func_8015EDE4(?);
// ? func_8015EDF8(?);
// ? func_8015EE0C(?);
// ? func_8015EE1C(?);
// ? func_8015EE30(?);
// ? func_8015EE44(?);
// ? func_8015EE54(?);
// ? func_8015EE68(?);
// ? func_8015EE90(?);
// ? func_8015EEA0(?);
// ? func_8015EEB4(?);
// ? func_8015EEC8(?);
// ? func_8015EF30(?);
// ? func_8015EF84(?);
// ? func_8015F150(?);
// ? func_8015F260(?);
// ? func_8015F464(?);
// ? func_8015F490(?);
// ? func_8015F4BC(?);
// ? func_8015F4E8(?);
// ? func_8015F4F4(?);
// ? func_8015F500(?);
// ? func_8015F588(?);
// ? func_8015F600(?);
// ? func_8015FA34(?);
// ? func_8015FB68(?);
// ? func_8015FBA4(?);
// ? func_8015FC74(?);
// ? func_8015FCC0(?);
// ? func_8015FDA4(?);
// ? main(?);
// ? func_801601C4(?);
// ? func_80160244(?);
// ? func_801602C0(?);
// ? func_801603B0(?);
// ? func_80160400(?);
// ? func_80160438(?);
// ? func_80160474(?);
// ? func_801604DC(?);
// ? func_80160564(?);
// ? func_801605EC(?);
// ? func_80160638(?);
// ? func_801606A8(?);
// ? func_80160710(?);
// ? func_8016075C(?);
// ? func_801607A8(?);
// ? func_801607F4(?);
// ? func_80160840(?);
// ? func_80160854(?);
// ? func_80160968(?);
// ? func_80160980(?);
// ? func_801609E0(?);
// ? func_80160A60(?);
// ? func_80160B40(?);
// ? func_80160C90(?);
// ? func_80160DE8(?);
// ? func_80160F58(?);
// ? func_80161004(?);
// ? func_80161154(?);
// ? func_80161C90(?);
// ? func_80162068(?);
// ? func_80162170(?);
// ? func_801623A4(?);
// ? func_801623D8(?);
// ? func_801623FC(?);
// ? func_8016247C(?);
// ? func_80162574(?);
// ? func_8016260C(?);
// ? func_8016279C(?);
// ? func_80162800(?);
// ? func_801628C4(?);
// ? func_80162968(?);
// ? func_801629B4(?);
// ? func_80162A00(?);
// ? func_80162A4C(?);
// ? func_80162A98(?);
// ? func_80162B4C(?);
// ? func_80162B98(?);
// ? func_80162BD8(?);
// ? func_80162BFC(?);
// ? func_80162C48(?);
// ? func_80162CCC(?);
// ? func_80162D1C(?);
// ? func_80162D6C(?);
// ? func_80162DD4(?);
// ? func_80162DF8(?);
// ? func_80162E44(?);
// ? func_80162EC8(?);
// ? func_80162F18(?);
// ? func_80162F68(?);
// ? func_80162FD0(?);
// ? func_80162FF4(?);
// ? func_80163040(?);
// ? func_80163114(?);
// ? func_80163164(?);
// ? func_801631CC(?);
// ? func_801631F0(?);
// ? func_80163274(?);
// ? func_80163298(?);
// ? func_8016332C(?);
// ? func_80163374(?);
// ? func_801634D4(?);
// ? func_8016365C(?);
// ? func_80163690(?);
// ? func_801636D8(?);
// ? func_80163838(?);
// ? func_801639C0(?);
// ? func_801639F4(?);
// ? func_80163A3C(?);
// ? func_80163B9C(?);
// ? func_80163DC4(?);
// ? func_80163DE8(?);
// ? func_80163E3C(?);
// ? func_80163E60(?);
// ? func_80163EB4(?);
// ? func_80163ED8(?);
// ? func_80163F2C(?);
// ? func_80163F50(?);
// ? func_80163FA4(?);
// ? func_8016400C(?);
// ? func_80164024(?);
// ? func_8016403C(?);
// ? func_801640B0(?);
// ? func_8016419C(?);
// ? func_801641B4(?);
// ? func_801641CC(?);
// ? func_801641E4(?);
// ? func_80164250(?);
// ? func_801642A0(?);
// ? func_80164330(?);
// ? func_80164430(?);
// ? func_80164504(?);
// ? func_80164600(?);
// ? func_8016468C(?);
// ? func_801647D0(?);
// ? func_801647F8(?);
BOOL func_80164840(u8);
// ? func_80164910(?);
// ? func_80164A0C(?);
// ? func_80164ABC(?);
// ? func_80164B48(?);
// ? func_80164F18(?);
// ? func_8016505C(?);
// ? func_80165084(?);
// ? func_801650E8(?);
// ? func_80165108(?);
// ? func_80165190(?);
// ? func_801651FC(?);
// ? func_801652B0(?);
// ? func_80165388(?);
// ? func_801653C8(?);
// ? func_801653E8(?);
// ? func_80165418(?);
// ? func_801654A0(?);
// ? func_80165548(?);
// ? func_801656A8(?);
// ? func_8016588C(?);
// ? func_80165AC0(?);
// ? func_80165D60(?);
// ? func_80165E7C(?);
// ? func_80165FA4(?);
// ? func_801661E0(?);
// ? func_80166378(?);
// ? func_80166A8C(?);
// ? func_80166A98(?);
// ? func_80166CBC(?);
// ? func_80166CCC(?);
// ? func_80167140(?);
// ? func_80167194(?);
// ? func_8016719C(?);
// ? func_80167320(?);
// ? func_80167470(?);
// ? func_801674C4(?);
// ? func_8016758C(?);
// ? func_80167638(?);
// ? func_801677C0(?);
// ? func_801677E8(?);
// ? func_801677F0(?);
// ? func_801677F8(?);
// ? func_80167858(?);
// ? func_801678F8(?);
// ? func_8016795C(?);
// ? func_80167A14(?);
// ? func_80167A64(?);
// ? func_80167B50(?);
// ? func_80167BC8(?);
// ? func_80167FC4(?);
// ? func_801685D4(?);
// ? func_80168638(?);
// ? func_80168710(?);
// ? func_801688AC(?);
// ? func_80168940(?);
// ? func_8016895C(?);
// ? func_801689E4(?);
// ? func_80168A6C(?);
// ? func_80168B34(?);
// ? func_80168BF8(?);
// ? func_80168C5C(?);
// ? func_80168E54(?);
// ? func_80168F2C(?);
// ? func_80168F7C(?);
// ? func_80168F88(?);
// ? func_80168FC4(?);
// ? func_80169000(?);
// ? func_80169238(?);
// ? func_80169264(?);
// ? func_80169290(?);
// ? func_801692BC(?);
// ? func_801692E8(?);
// ? func_80169364(?);
// ? func_80169370(?);
// ? func_80169384(?);
// ? func_80169394(?);
// ? func_801693A8(?);
// ? func_801693BC(?);
// ? func_80169434(?);
// ? func_80169444(?);
// ? func_801694A0(?);
// ? func_80169520(?);
// ? func_80169530(?);
// ? func_80169540(?);
// ? func_80169550(?);
// ? func_80169574(?);
// ? func_801695BC(?);
// ? func_801697FC(?);
// ? func_8016989C(?);
// ? func_80169900(?);
// ? func_80169A84(?);
// ? func_80169C54(?);
// ? func_80169F50(?);
// ? func_8016A09C(?);
// ? func_8016A164(?);
// ? func_8016A1E4(?);
// ? func_8016A1F8(?);
// ? func_8016A21C(?);
// ? func_8016A22C(?);
// ? func_8016A404(?);
// ? func_8016A414(?);
// ? func_8016A424(?);
// ? func_8016A434(?);
// ? func_8016A450(?);
// ? func_8016A46C(?);
// ? func_8016A4C8(?);
// ? func_8016A92C(?);
// ? func_8016A944(?);
// ? func_8016A97C(?);
// ? func_8016A98C(?);
// ? func_8016A998(?);
// ? func_8016A9E8(?);
// ? func_8016AC44(?);
// ? func_8016AE38(?);
// ? func_8016AE44(?);
// ? func_8016AE50(?);
// ? func_8016AE60(?);
// ? func_8016AE80(?);
// ? func_8016AE94(?);
// ? func_8016AEA4(?);
// ? func_8016AEB8(?);
// ? func_8016AEC8(?);
s32 func_8016AEDC(void);
// ? func_8016AEEC(?);
// ? func_8016AEFC(?);
// ? func_8016AF0C(?);
// ? func_8016AF88(?);
// ? func_8016B004(?);
// ? func_8016B014(?);
// ? func_8016B094(?);
// ? func_8016B0B4(?);
// ? func_8016B0D4(?);
// ? func_8016B0E8(?);
s32 func_8016B0FC();
// ? func_8016B110(?);
// ? func_8016B124(?);
// ? func_8016B138(?);
// ? func_8016B14C(?);
// ? func_8016B168(?);
// ? func_8016B184(?);
// ? func_8016B1A8(?);
s32 func_8016B1C4();
// ? func_8016B1D8(?);
// ? func_8016B1EC(?);
// ? func_8016B204(?);
s32 func_8016B238(void);
// ? func_8016B248(?);
// ? func_8016B258(?);
// ? func_8016B274(?);
// ? func_8016B2C8(?);
// ? func_8016B328(?);
// ? func_8016B33C(?);
// ? func_8016B350(?);
// ? func_8016B364(?);
// ? func_8016B378(?);
// ? func_8016B388(?);
s32 func_8016B3A0(void);
// ? func_8016B3D8(?);
s32 func_8016B41C();
// ? func_8016B498(?);
// ? func_8016B4BC(?);
// ? func_8016B510(?);
// ? func_8016B558(?);
// ? func_8016B5B0(?);
// ? func_8016B6E8(?);
// ? func_8016B728(?);
// ? func_8016B738(?);
// ? func_8016B774(?);
// ? func_8016B8D4(?);
// ? func_8016B918(?);
// ? func_8016BC74(?);
// ? func_8016BF74(?);
// ? func_8016C0C8(?);
// ? func_8016C35C(?);
// ? func_8016C46C(?);
// ? func_8016C4F4(?);
// ? func_8016C5C0(?);
// ? func_8016C658(?);
// ? func_8016C6C0(?);
// ? func_8016C75C(?);
// ? func_8016C7F0(?);
// ? func_8016CA68(?);
// ? func_8016CBE8(?);
// ? func_8016CD98(?);
// ? func_8016CF4C(?);
// ? func_8016CFE0(?);
// ? func_8016D538(?);
// ? func_8016D634(?);
// ? func_8016D8AC(?);
// ? func_8016DCC0(?);
// ? func_8016DEEC(?);
// ? func_8016E124(?);
// ? func_8016E2BC(?);
// ? func_8016E5C0(?);
// ? func_8016E730(?);
// ? func_8016ECE8(?);
// ? func_8016EDDC(?);
// ? func_8016EF98(?);
// ? func_8016F00C(?);
// ? func_8016F030(?);
// ? func_8016F088(?);
// ? func_8016F120(?);
// ? func_8016F140(?);
// ? func_8016F160(?);
// ? func_8016F180(?);
// ? func_8016F1B8(?);
// ? func_8016F1F0(?);
// ? func_8016F208(?);
// ? func_8016F280(?);
// ? func_8016F2F8(?);
// ? func_8016F344(?);
// ? func_8016F39C(?);
// ? func_8016F548(?);
// ? func_8016F740(?);
// ? func_8016F870(?);
// ? func_8016F9A8(?);
// ? func_8016FAD4(?);
// ? func_8016FFD4(?);
// ? func_80170110(?);
// ? func_801701A0(?);
// ? func_801701AC(?);
// ? func_801701B8(?);
// ? func_801701C0(?);
// ? func_80171A88(?);
// ? func_80171AD4(?);
// ? func_80171B00(?);
// ? func_80171B2C(?);
// ? func_80171B64(?);
// ? func_80171BA4(?);
// ? func_80171DC4(?);
// ? func_801720B4(?);
// ? func_801720F8(?);
// ? func_80172140(?);
// ? func_80172174(?);
// ? func_8017219C(?);
// ? func_801721EC(?);
// ? func_8017279C(?);
// ? func_8017280C(?);
// ? func_80172898(?);
// ? func_8017297C(?);
// ? func_801729EC(?);
// ? func_80172BC4(?);
// ? func_80172C04(?);
// ? func_80172C44(?);
// ? func_80172C78(?);
// ? func_80172CC0(?);
// ? func_80172D78(?);
// ? func_80172DD4(?);
// ? func_80172E74(?);
// ? func_80172F00(?);
// ? func_80172FAC(?);
// ? func_80173098(?);
// ? func_80173224(?);
// ? func_801732D8(?);
// ? func_8017335C(?);
// ? func_801733D8(?);
// ? func_8017341C(?);
// ? func_80173460(?);
// ? func_80173498(?);
// ? func_801734D0(?);
// ? func_801736DC(?);
// ? func_801736E8(?);
// ? func_80173754(?);
// ? func_801737D8(?);
// ? func_80173834(?);
// ? func_8017390C(?);
// ? func_80173AA4(?);
// ? func_80173B30(?);
// ? func_80173BC4(?);
// ? func_80173C70(?);
// ? func_80173D3C(?);
// ? func_80173DE4(?);
// ? func_80173EEC(?);
// ? func_80174180(?);
// ? func_801741FC(?);
// ? func_80174238(?);
// ? func_80174274(?);
// ? func_80174284(?);
// ? func_80174338(?);
// ? func_8017435C(?);
// ? func_80174380(?);
// ? func_801743A4(?);
// ? func_801743C4(?);
// ? func_80174468(?);
// ? func_801748EC(?);
// ? func_80174920(?);
// ? func_80174A60(?);
// ? func_80174B4C(?);
// ? func_80174FD0(?);
// ? func_8017507C(?);
// ? func_80175240(?);
// ? func_8017556C(?);
// ? func_801756E0(?);
// ? func_80175880(?);
// ? func_80175A94(?);
// ? func_80175C5C(?);
// ? func_80175D34(?);
// ? func_80175DC8(?);
// ? func_80176A6C(?);
// ? func_80176BF0(?);
// ? func_80176D3C(?);
// ? func_80176F60(?);
// ? func_801771C0(?);
// ? func_80177724(?);
// ? func_80177748(?);
// ? func_80177920(?);
// ? func_80177B7C(?);
// ? func_80177DD0(?);
// ? func_80178050(?);
// ? func_801785B0(?);
// ? func_80178BB4(?);
// ? func_801791E4(?);
// ? func_801795D4(?);
// ? func_801796F0(?);
// ? func_80179854(?);
// ? func_80179990(?);
// ? func_80179F6C(?);
// ? func_80179F84(?);
// ? func_8017A004(?);
// ? func_8017A078(?);
// ? func_8017A318(?);
// ? func_8017A67C(?);
// ? func_8017A9B4(?);
// ? func_8017AA78(?);
// ? func_8017AD04(?);
// ? func_8017AD28(?);
// ? func_8017AD48(?);
// ? func_8017AD78(?);
// ? func_8017ADA8(?);
// ? func_8017AE0C(?);
// ? func_8017B010(?);
// ? func_8017B21C(?);
// ? func_8017BE84(?);
// ? func_8017BE8C(?);
// ? func_8017BEC8(?);
// ? func_8017C0C8(?);
// ? func_8017C984(?);
// ? func_8017C9A8(?);
// ? func_8017CA38(?);
// ? func_8017CBAC(?);
// ? func_8017CD94(?);
// ? func_8017CE34(?);
// ? func_8017D7AC(?);
// ? func_8017D9C0(?);
// ? func_8017DB58(?);
// ? func_8017DB6C(?);
// ? func_8017DB78(?);
// ? func_8017DB88(?);
// ? func_8017DD7C(?);
// ? func_8017DE54(?);
// ? func_8017DEC8(?);
// ? func_8017DF28(?);
// ? func_8017DF90(?);
// ? func_8017DFF4(?);
// ? func_8017E068(?);
// ? func_8017E0E4(?);
// ? func_8017E160(?);
// ? func_8017E21C(?);
// ? func_8017E280(?);
// ? func_8017E318(?);
// ? func_8017E3C8(?);
// ? func_8017E424(?);
// ? func_8017E430(?);
// ? func_8017E440(?);
// ? func_8017E48C(?);
// ? func_8017E4C4(?);
// ? func_8017E7E0(?);
// ? func_8017E8A4(?);
// ? func_8017EB30(?);
// ? func_8017EDDC(?);
// ? func_8017EE40(?);
// ? func_8017F008(?);
// ? func_8017F09C(?);
// ? func_8017F14C(?);
// ? func_8017F1B8(?);
// ? func_8017F294(?);
// ? func_8017F2A4(?);
// ? func_8017F47C(?);
// ? func_8017F608(?);
// ? func_8017FA1C(?);
// ? func_8017FBA4(?);
// ? func_801803FC(?);
// ? func_80180630(?);
// ? func_80180AC0(?);
// ? func_80180AE4(?);
// ? func_80180AF4(?);
// ? func_80180B18(?);
// ? func_80180BA0(?);
// ? func_80181708(?);
// ? func_80181A00(?);
// ? func_80181A14(?);
// ? func_80181A24(?);
// ? func_80181A34(?);
// ? func_80181A44(?);
// ? func_80181AC8(?);
// ? func_80181B64(?);
// ? func_80181BFC(?);
// ? func_80181C80(?);
// ? func_80182510(?);
// ? func_80182554(?);
// ? func_80182578(?);
// ? func_80182B5C(?);
// ? func_80182DF0(?);
// ? func_8018325C(?);
// ? func_80184138(?);
// ? func_801851C0(?);
// ? func_80185408(?);
// ? func_801855BC(?);
// ? func_80185A0C(?);
// ? func_80185D64(?);
// ? func_80185E34(?);
// ? func_80185F5C(?);
// ? func_80186080(?);
// ? func_801861B8(?);
// ? func_80186400(?);
// ? func_80186634(?);
// ? func_801873F0(?);
// ? func_801874FC(?);
// ? func_80187714(?);
// ? func_801883C0(?);
// ? func_8018841C(?);
// ? func_80188454(?);
// ? func_8018846C(?);
// ? func_801884F8(?);
// ? func_80188550(?);
// ? func_80188644(?);
// ? func_80188738(?);
// ? func_80188910(?);
// ? func_80188B3C(?);
// ? func_80188D3C(?);
// ? func_80189B88(?);
// ? func_80189CDC(?);
// ? func_8018A000(?);
// ? func_8018A188(?);
// ? func_8018A1D8(?);
// ? func_8018A228(?);
// ? func_8018A364(?);
// ? func_8018A514(?);
// ? func_8018A970(?);
// ? func_8018AA74(?);
// ? func_8018C8D4(?);
// ? func_8018D50C(?);
// ? func_8018DC18(?);
// ? func_8018DF68(?);
// ? func_8018E618(?);
// ? func_8018E85C(?);
// ? func_8018EC48(?);
// ? func_8018EC7C(?);
// ? func_8018ECA8(?);
// ? func_8018F00C(?);
// ? func_8018F1B0(?);
// ? func_8018F310(?);
// ? func_8018F3BC(?);
// ? func_8018F3D0(?);
// ? func_8018F410(?);
// ? func_8018F4A0(?);
// ? func_8018F508(?);
// ? func_8018F5F0(?);
// ? func_8018F62C(?);
// ? func_8018F634(?);
// ? func_8018F640(?);
// ? func_8018F674(?);
// ? func_8018F6A8(?);
// ? func_8018F6DC(?);
// ? func_8018F6FC(?);
// ? func_8018F71C(?);
// ? func_8018F74C(?);
// ? func_8018F808(?);
// ? func_8018F888(?);
// ? func_8018FA24(?);
// ? func_8018FBD8(?);
// ? func_8018FBE0(?);
// ? func_8018FDC4(?);
// ? func_8018FF9C(?);
// ? func_80190174(?);
// ? func_801901F8(?);
// ? func_8019027C(?);
// ? func_801902F0(?);
// ? func_8019035C(?);
// ? func_8019044C(?);
// ? func_80190480(?);
// ? func_801904D0(?);
// ? func_80190520(?);
// ? func_801905F0(?);
// ? func_80190ABC(?);
// ? func_80190EA4(?);
// ? func_80190FE4(?);
// ? func_80192938(?);
// ? func_80192BB0(?);
// ? func_80192E6C(?);
// ? func_80193230(?);
// ? func_80193308(?);
// ? func_801935B8(?);
// ? func_80196510(?);
// ? func_8019655C(?);
// ? func_80196564(?);
// ? func_80196594(?);
// ? func_801965C4(?);
// ? func_80196684(?);
// ? func_801967E0(?);
// ? func_80196CF8(?);
// ? func_80198BA0(?);
// ? func_80198C60(?);
// ? func_80198D18(?);
// ? func_80198EBC(?);
// ? func_80199AF0(?);
// ? func_8019A158(?);
// ? func_8019A71C(?);
// ? func_8019A828(?);
// ? func_8019A86C(?);
// ? func_8019AF50(?);
// ? func_8019B458(?);
// ? func_8019B81C(?);
// ? func_8019B860(?);
// ? func_8019BA04(?);
// ? func_8019BA08(?);
// ? func_8019D1BC(?);
// ? func_8019DD60(?);
// ? func_8019E634(?);
// ? func_8019EE80(?);
// ? func_8019EF08(?);
// ? func_8019EFC4(?);
// ? func_8019F1D0(?);
// ? func_8019F2D4(?);
// ? func_8019F9C4(?);
// ? func_801A0FEC(?);
// ? func_801A10FC(?);
// ? func_801A1134(?);
// ? func_801A12C4(?);
// ? func_801A165C(?);
// ? func_801A185C(?);
// ? func_801A1944(?);
// ? func_801A19AC(?);
// ? func_801A1A3C(?);
// ? func_801A1AC0(?);
// ? func_801A1D38(?);
// ? func_801A2224(?);
// ? func_801A2334(?);
// ? func_801A253C(?);
// ? func_801A25C8(?);
// ? func_801A2640(?);
// ? func_801A2650(?);
// ? func_801A3048(?);
// ? func_801A33BC(?);
// ? func_801A3680(?);
// ? func_801A36A0(?);
// ? func_801A36C0(?);
// ? func_801A36E0(?);
// ? func_801A3714(?);
// ? func_801A3820(?);
// ? func_801A3A74(?);
// ? func_801A3E88(?);
// ? func_801A3EF4(?);
// ? func_801A3F48(?);
// ? func_801A4014(?);
// ? func_801A427C(?);
// ? func_801A4284(?);
// ? func_801A428C(?);
// ? func_801A42A0(?);
// ? func_801A42B4(?);
// ? func_801A42C4(?);
// ? func_801A42D4(?);
// ? func_801A42E8(?);
// ? func_801A42F8(?);
// ? func_801A4310(?);
// ? func_801A4320(?);
// ? func_801A4330(?);
// ? func_801A4340(?);
// ? func_801A43A0(?);
// ? func_801A4510(?);
s32 func_801A45E8(s32);
// ? func_801A4624(?);
// ? func_801A4634(?);
// ? func_801A4674(?);
// ? func_801A46B8(?);
// ? func_801A48A4(?);
// ? func_801A4970(?);
// ? func_801A4B08(?);
// ? func_801A4B1C(?);
// ? func_801A4B40(?);
// ? func_801A4B50(?);
// ? func_801A4B60(?);
// ? func_801A4B74(?);
// ? func_801A4B88(?);
// ? func_801A4B90(?);
// ? func_801A4B9C(?);
// ? func_801A4BA8(?);
// ? func_801A4BB8(?);
// ? func_801A4BC8(?);
// ? func_801A4BD4(?);
// ? func_801A4CE0(?);
// ? func_801A4D34(?);
// ? func_801A50A0(?);
// ? func_801A50AC(?);
// ? func_801A5244(?);
// ? func_801A5250(?);
// ? func_801A5258(?);
// ? func_801A52D0(?);
// ? func_801A5360(?);
// ? func_801A55C4(?);
// ? func_801A5618(?);
// ? func_801A5680(?);
// ? func_801A5754(?);
// ? func_801A57A8(?);
// ? func_801A583C(?);
// ? func_801A5AF0(?);
// ? func_801A5C3C(?);
// ? func_801A5EC8(?);
// ? func_801A5F00(?);
// ? func_801A5F64(?);
// ? func_801A659C(?);
// ? func_801A6630(?);
// ? func_801A68D8(?);
// ? func_801A6C54(?);
// ? func_801A6DC0(?);
// ? func_801A6EE4(?);
// ? func_801A7B00(?);
// ? func_801A8114(?);
// ? func_801A85E4(?);
// ? func_801A8D54(?);
// ? func_801A9094(?);
// ? func_801A9630(?);
// ? func_801A9DD0(?);
// ? func_801ACC94(?);
// ? func_801AD088(?);
// ? func_801AD254(?);
// ? func_801ADB04(?);
// ? func_801ADDD8(?);
// ? func_801ADE1C(?);
// ? func_801AE050(?);
// ? func_801AE44C(?);
// ? func_801AE544(?);
// ? func_801AE640(?);
// ? func_801AE74C(?);
// ? func_801AE848(?);
// ? func_801AEBB0(?);
// ? func_801AECC4(?);
// ? func_801AEDC8(?);
// ? func_801AEE6C(?);
// ? func_801AF0D4(?);
// ? func_801AF250(?);
// ? func_801B0348(?);
// ? func_801B0474(?);
// ? func_801B05F4(?);
// ? func_801B0620(?);
// ? func_801B0664(?);
// ? func_801B06B0(?);
// ? func_801B0730(?);
// ? func_801B07B4(?);
// ? func_801B07E8(?);
// ? func_801B23F0(?);
// ? func_801B2BA4(?);
// ? func_801B2D54(?);
// ? func_801B4064(?);
// ? func_801B5324(?);
// ? func_801B6320(?);
// ? func_801B688C(?);
// ? func_801B69C0(?);
// ? func_801B9600(?);
// ? func_801B97C4(?);
// ? func_801BA8FC(?);
// ? func_801BA938(?);
// ? func_801BAB40(?);
// ? func_801BAC9C(?);
// ? func_801BBB64(?);
// ? func_801BC00C(?);
// ? func_801BC488(?);
// ? func_801BC4F4(?);
// ? func_801BC670(?);
// ? func_801BCC9C(?);
// ? func_801BEB68(?);
// ? func_801BEB74(?);
// ? func_801BEB80(?);
// ? func_801BEB8C(?);
// ? func_801BEBA8(?);
// ? func_801BEBC0(?);
// ? func_801BEBF8(?);
// ? func_801BEC54(?);
// ? func_801BEFA4(?);
// ? func_801BEFB0(?);
// ? func_801BEFC0(?);
// ? func_801BEFD0(?);
// ? func_801BEFE0(?);
// ? func_801BEFF0(?);
// ? func_801BF000(?);
// ? func_801BF010(?);
// ? func_801BF020(?);
// ? func_801BF030(?);
// ? func_801BF040(?);
// ? func_801BF050(?);
// ? func_801BF128(?);
// ? func_801BF3F8(?);
// ? func_801BF634(?);
// ? func_801BF648(?);
// ? func_801BF65C(?);
// ? func_801BF670(?);
// ? func_801BF684(?);
// ? func_801BF694(?);
// ? func_801BF6A8(?);
// ? func_801BF6B8(?);
// ? func_801BF6C8(?);
// ? func_801BF6D8(?);
// ? func_801BF6E8(?);
// ? func_801BF6F8(?);
// ? func_801BF708(?);
// ? func_801BF718(?);
// ? func_801BFC60(?);
// ? func_801BFFB0(?);
// ? func_801C0378(?);
f32 func_801C0498(void);
// ? func_801C04BC(?);
// ? func_801C0508(?);
// ? func_801C052C(?);
// ? func_801C0544(?);
// ? func_801C055C(?);
// ? func_801C0574(?);
// ? func_801C058C(?);
// ? func_801C05A4(?);
// ? func_801C05BC(?);
// ? func_801C05D4(?);
// ? func_801C05EC(?);
// ? func_801C0604(?);
// ? func_801C0618(?);
// ? func_801C062C(?);
// ? func_801C0640(?);
// ? func_801C06B8(?);
// ? func_801C0754(?);
// ? func_801C0800(?);
// ? func_801C0A70(?);
// ? func_801C0F78(?);
// ? func_801C0FB8(?);
// ? func_801C1074(?);
// ? func_801C10B8(?);
// ? func_801C1154(?);
// ? func_801C1158(?);
// ? func_801C11AC(?);
// ? func_801C126C(?);
// ? func_801C13D0(?);
struct _HSD_GObj *func_801C14D0(s32);
// ? func_801C1A20(?);
// ? func_801C1D6C(?);
// ? func_801C1D84(?);
// ? func_801C1D98(?);
// ? func_801C1DAC(?);
// ? func_801C1DC0(?);
// ? func_801C1DD4(?);
// ? func_801C1DE4(?);
// ? func_801C1E00(?);
// ? func_801C1E18(?);
// ? func_801C1E84(?);
// ? func_801C1E94(?);
// ? func_801C1FFC(?);
// ? func_801C205C(?);
// ? func_801C2090(?);
// ? func_801C20D0(?);
// ? func_801C20E0(?);
// ? func_801C2374(?);
// ? func_801C247C(?);
// ? func_801C24F8(?);
BOOL func_801C28AC(s32, u32, s32 *);
// ? func_801C28CC(?);
// ? func_801C2AD8(?);
// ? func_801C2AE8(?);
struct _HSD_GObj *func_801C2BA4(s32);
// ? func_801C2BBC(?);
// ? func_801C2BD4(?);
// ? func_801C2C8C(?);
struct _HSD_JObj *func_801C2CF4(s32);
// ? func_801C2D0C(?);
BOOL func_801C2D24(s32, Vec *);
BOOL func_801C2ED0(struct _HSD_JObj *, s32);
// ? func_801C2FE0(?);
// ? func_801C3128(?);
// ? func_801C3214(?);
// ? func_801C3260(?);
// ? func_801C32AC(?);
// ? func_801C32D4(?);
// ? func_801C33C0(?);
// ? func_801C34AC(?);
// ? func_801C36F4(?);
// ? func_801C3880(?);
// ? func_801C3890(?);
// ? func_801C38A0(?);
// ? func_801C38AC(?);
// ? func_801C38BC(?);
// ? func_801C38D0(?);
// ? func_801C38EC(?);
// ? func_801C3900(?);
// ? func_801C392C(?);
// ? func_801C3950(?);
// ? func_801C3960(?);
// ? func_801C3970(?);
// ? func_801C3980(?);
// ? func_801C3990(?);
// ? func_801C39A0(?);
// ? func_801C39B0(?);
void func_801C39C0();
void func_801C3BB4();
// ? func_801C3D44(?);
// ? func_801C3DB4(?);
// ? func_801C3E18(?);
// ? func_801C3F20(?);
struct _HSD_JObj *func_801C3FA4(struct _HSD_GObj *, s32);
// ? func_801C4100(?);
s32 func_801C4210(void);
void func_801C42AC();
// ? func_801C4338(?);
// ? func_801C4368(?);
// ? func_801C438C(?);
// ? func_801C43A4(?);
// ? func_801C43C4(?);
// ? func_801C445C(?);
// ? func_801C466C(?);
// ? func_801C498C(?);
// ? func_801C49B4(?);
void *func_801C49F8(void); // get stage's "yakumono" ("about"?) param
// ? func_801C4A08(?);
// ? func_801C4B50(?);
// ? func_801C4D70(?);
// ? func_801C4DA0(?);
// ? func_801C4DD0(?);
// ? func_801C4E20(?);
// ? func_801C4E70(?);
// ? func_801C4FAC(?);
// ? func_801C53EC(?);
// ? func_801C5414(?);
// ? func_801C5440(?);
// ? func_801C54DC(?);
// ? func_801C5544(?);
// ? func_801C55AC(?);
// ? func_801C5630(?);
// ? func_801C5694(?);
// ? func_801C5700(?);
// ? func_801C5740(?);
// ? func_801C5750(?);
// ? func_801C5764(?);
// ? func_801C5774(?);
// ? func_801C5784(?);
// ? func_801C5794(?);
// ? func_801C57A4(?);
// ? func_801C57C8(?);
// ? func_801C57F0(?);
// ? func_801C5800(?);
// ? func_801C5840(?);
// ? func_801C5878(?);
// ? func_801C58E0(?);
// ? func_801C5940(?);
// ? func_801C5A28(?);
// ? func_801C5A60(?);
void func_801C5A84();
// ? func_801C5A94(?);
void func_801C5AA4();
// ? func_801C5ABC(?);
// ? func_801C5AD0(?);
// ? func_801C5AEC(?);
// ? func_801C5B90(?);
void func_801C5DB0(struct _HSD_GObj *, s32);
// ? func_801C5FC0(?);
// ? func_801C6038(?);
// ? func_801C6228(?);
// ? func_801C6288(?);
// ? func_801C62B4(?);
// ? func_801C6324(?);
// ? func_801C6330(?);
// ? func_801C6478(?);
// ? func_801C65B0(?);
// ? func_801C6620(?);
// ? func_801C6710(?);
// ? func_801C67A8(?);
// ? func_801C683C(?);
// ? func_801C68F4(?);
// ? func_801C6960(?);
// ? func_801C69FC(?);
// ? func_801C6A54(?);
// ? func_801C6C0C(?);
// ? func_801C6F50(?);
// ? func_801C706C(?);
// ? func_801C70E0(?);
// ? func_801C7228(?);
// ? func_801C752C(?);
// ? func_801C775C(?);
// ? func_801C77FC(?);
// ? func_801C787C(?);
// ? func_801C78FC(?);
// ? func_801C7980(?);
// ? func_801C7A04(?);
// ? func_801C7A94(?);
// ? func_801C7B24(?);
// ? func_801C7BA0(?);
// ? func_801C7C1C(?);
void func_801C7FF8(struct _HSD_GObj *, s32, s32, s32, f32, f32);
// ? func_801C8098(?);
void func_801C8138();
// ? func_801C8318(?);
// ? func_801C83D0(?);
// ? func_801C84A4(?);
// ? func_801C8578(?);
// ? func_801C86D4(?);
// ? func_801C8780(?);
// ? func_801C87D0(?);
// ? func_801C8858(?);
// ? func_801C897C(?);
// ? func_801C8A04(?);
// ? func_801C8B28(?);
// ? func_801C8B68(?);
// ? func_801C8CDC(?);
// ? func_801C8CFC(?);
// ? func_801C8D44(?);
// ? func_801C8D98(?);
// ? func_801C8DE0(?);
// ? func_801C8E08(?);
// ? func_801C8E28(?);
// ? func_801C8E48(?);
// ? func_801C8E68(?);
// ? func_801C92C0(?);
// ? func_801C9490(?);
// ? func_801C94D8(?);
void func_801C95C4(struct _HSD_GObj *);
// ? func_801C9604(?);
// ? func_801C9698(?);
// ? func_801C96E8(?);
// ? func_801C96F8(?);
// ? func_801C97DC(?);
// ? func_801C9808(?);
// ? func_801C9834(?);
// ? func_801C9854(?);
// ? func_801C9874(?);
// ? func_801C98A0(?);
// ? func_801C9908(?);
// ? func_801C99C0(?);
// ? func_801C9A10(?);
// ? func_801C9A70(?);
// ? func_801C9B20(?);
// ? func_801C9B6C(?);
// ? func_801C9B8C(?);
// ? func_801C9CEC(?);
// ? func_801C9E40(?);
// ? func_801C9E50(?);
// ? func_801C9E60(?);
// ? func_801C9EE8(?);
// ? func_801CA0B4(?);
// ? func_801CA0F8(?);
// ? func_801CA1C0(?);
// ? func_801CA224(?);
// ? func_801CA284(?);
// ? func_801CA394(?);
// ? func_801CA43C(?);
// ? func_801CA67C(?);
// ? func_801CA8B4(?);
// ? func_801CAC14(?);
// ? func_801CACB8(?);
// ? func_801CADE0(?);
// ? func_801CAE04(?);
// ? func_801CAEB0(?);
// ? func_801CAEF0(?);
// ? func_801CAF08(?);
// ? func_801CAFBC(?);
// ? func_801CBCE8(?);
// ? func_801CC358(?);
// ? func_801CCB18(?);
// ? func_801CCBDC(?);
// ? func_801CCD98(?);
// ? func_801CD090(?);
// ? func_801CD2D4(?);
// ? func_801CD4D0(?);
// ? func_801CDF54(?);
// ? func_801CDFD8(?);
// ? func_801CE054(?);
// ? func_801CE19C(?);
// ? func_801CE3AC(?);
// ? func_801CF7B0(?);
// ? func_801CF868(?);
// ? func_801CFBD4(?);
// ? func_801D0298(?);
// ? func_801D02B8(?);
// ? func_801D0A9C(?);
// ? func_801D0BBC(?);
// ? func_801D0D24(?);
// ? func_801D0D84(?);
// ? func_801D0FF0(?);
// ? func_801D10F8(?);
// ? func_801D1E20(?);
// ? func_801D1EF8(?);
// ? func_801D21E4(?);
// ? func_801D2278(?);
// ? func_801D2344(?);
// ? func_801D2528(?);
// ? func_801D2A60(?);
// ? func_801D2BEC(?);
// ? func_801D2D78(?);
// ? func_801D2E24(?);
// ? func_801D3138(?);
// ? func_801D32D0(?);
// ? func_801D3460(?);
// ? func_801D384C(?);
// ? func_801D39A0(?);
// ? func_801D3A0C(?);
// ? func_801D3B4C(?);
// ? func_801D3BBC(?);
// ? func_801D3F40(?);
// ? func_801D4040(?);
// ? func_801D4084(?);
// ? func_801D40C8(?);
// ? func_801D410C(?);
// ? func_801D4150(?);
// ? func_801D4194(?);
// ? func_801D42B8(?);
// ? func_801D4354(?);
// ? func_801D435C(?);
// ? func_801D4548(?);
// ? func_801D4FF8(?);
// ? func_801D511C(?);
// ? func_801D5340(?);
// ? func_801D69B0(?);
// ? func_801D6AFC(?);
// ? func_801D7134(?);
// ? func_801D77E0(?);
// ? func_801D7BBC(?);
// ? func_801D7E78(?);
// ? func_801D7F78(?);
// ? func_801D8058(?);
// ? func_801D8078(?);
// ? func_801D8270(?);
// ? func_801D828C(?);
// ? func_801D8314(?);
// ? func_801D8558(?);
// ? func_801DA0C4(?);
// ? func_801DA254(?);
// ? func_801DA3E8(?);
// ? func_801DA3F4(?);
// ? func_801DA4FC(?);
// ? func_801DA528(?);
// ? func_801DAA08(?);
// ? func_801DAE70(?);
// ? func_801DB088(?);
// ? func_801DB3CC(?);
// ? func_801DBB60(?);
// ? func_801DC260(?);
// ? func_801DC408(?);
// ? func_801DC744(?);
// ? func_801DC9DC(?);
// ? func_801DCCC8(?);
// ? func_801DCCFC(?);
// ? func_801DCE1C(?);
// ? func_801DD534(?);
// ? func_801DDCF0(?);
// ? func_801DDD4C(?);
// ? func_801DDDA8(?);
// ? func_801DDE88(?);
// ? func_801DEC08(?);
// ? func_801DEC94(?);
// ? func_801DED50(?);
// ? func_801E03C8(?);
// ? func_801E0678(?);
// ? func_801E08CC(?);
// ? func_801E0A74(?);
// ? func_801E0E40(?);
// ? func_801E0F34(?);
// ? func_801E1348(?);
// ? func_801E1878(?);
// ? func_801E1970(?);
// ? func_801E1BF0(?);
// ? func_801E2110(?);
// ? func_801E2228(?);
// ? func_801E2550(?);
// ? func_801E2598(?);
// ? func_801E25C4(?);
// ? func_801E2738(?);
// ? func_801E277C(?);
// ? func_801E2A6C(?);
// ? func_801E2AF4(?);
// ? func_801E2B80(?);
// ? func_801E2C34(?);
// ? func_801E2CE8(?);
// ? func_801E2D14(?);
// ? func_801E2D90(?);
// ? func_801E2E50(?);
// ? func_801E2EA0(?);
// ? func_801E2FCC(?);
// ? func_801E30D8(?);
// ? func_801E3418(?);
// ? func_801E366C(?);
// ? func_801E37F4(?);
// ? func_801E5140(?);
// ? func_801E5194(?);
// ? func_801E5214(?);
// ? func_801E5538(?);
// ? func_801E56FC(?);
// ? func_801E59F8(?);
// ? func_801E8794(?);
// ? func_801E8978(?);
// ? func_801E89DC(?);
// ? func_801E8A1C(?);
// ? func_801E8B84(?);
// ? func_801E8D04(?);
// ? func_801EAB50(?);
// ? func_801EACE8(?);
// ? func_801EB004(?);
// ? func_801EB4AC(?);
// ? func_801EBAF8(?);
// ? func_801EC58C(?);
// ? func_801EC6C0(?);
// ? func_801ECB50(?);
// ? func_801ED694(?);
// ? func_801EDF44(?);
// ? func_801EE398(?);
// ? func_801EEF00(?);
// ? func_801EF424(?);
// ? func_801EF7D8(?);
// ? func_801EF844(?);
// ? func_801EFD0C(?);
// ? func_801F04B8(?);
// ? func_801F0948(?);
// ? func_801F094C(?);
// ? func_801F0D20(?);
// ? func_801F0F4C(?);
// ? func_801F106C(?);
// ? func_801F1328(?);
// ? func_801F1A34(?);
// ? func_801F28A8(?);
// ? func_801F290C(?);
// ? func_801F2AB0(?);
// ? func_801F2DD0(?);
// ? func_801F3B70(?);
// ? func_801F3F10(?);
// ? func_801F4300(?);
// ? func_801F5D4C(?);
// ? func_801F5E28(?);
// ? func_801F62F8(?);
// ? func_801F63F4(?);
// ? func_801F660C(?);
// ? func_801F66A4(?);
// ? func_801F67A4(?);
// ? func_801F71E8(?);
// ? func_801F785C(?);
// ? func_801F8CDC(?);
// ? func_801F91EC(?);
// ? func_801F929C(?);
// ? func_801F9668(?);
// ? func_801F96E0(?);
// ? func_801F98A8(?);
// ? func_801F993C(?);
// ? func_801F9ACC(?);
// ? func_801FA0BC(?);
// ? func_801FA364(?);
// ? func_801FA500(?);
// ? func_801FA6D8(?);
// ? func_801FA728(?);
// ? func_801FA7F0(?);
// ? func_801FA854(?);
// ? func_801FA9B4(?);
// ? func_801FAD84(?);
// ? func_801FB0AC(?);
// ? func_801FB3F0(?);
// ? func_801FBA34(?);
// ? func_801FBAA0(?);
// ? func_801FBC4C(?);
// ? func_801FBCEC(?);
// ? func_801FC018(?);
// ? func_801FC110(?);
// ? func_801FC4A0(?);
// ? func_801FC664(?);
// ? func_801FCAAC(?);
// ? func_801FCB10(?);
// ? func_801FCCDC(?);
// ? func_801FCF2C(?);
// ? func_801FD018(?);
// ? func_801FD0B4(?);
// ? func_801FD368(?);
// ? func_801FD3CC(?);
// ? func_801FD448(?);
// ? func_801FD4CC(?);
// ? func_801FD744(?);
// ? func_801FD7A8(?);
// ? func_801FD824(?);
// ? func_801FD9EC(?);
// ? func_801FDFB4(?);
// ? func_801FE0C4(?);
// ? func_801FE6D8(?);
// ? func_801FEE54(?);
// ? func_801FF068(?);
// ? func_801FF0E0(?);
// ? func_801FF150(?);
// ? func_801FF2C8(?);
// ? func_801FFADC(?);
// ? func_80200540(?);
// ? func_8020071C(?);
// ? func_80200B48(?);
// ? func_80200C04(?);
// ? func_80201110(?);
// ? func_80201288(?);
// ? func_80201410(?);
// ? func_80201588(?);
// ? func_80201918(?);
// ? func_80201988(?);
// ? func_80201B60(?);
// ? func_80201D20(?);
// ? func_8020203C(?);
// ? func_802022A4(?);
// ? func_8020266C(?);
// ? func_80202C78(?);
// ? func_80203560(?);
// ? func_80203624(?);
// ? func_8020362C(?);
// ? func_80203EAC(?);
// ? func_80204B88(?);
// ? func_802052E0(?);
// ? func_80205DF8(?);
// ? func_80205E84(?);
// ? func_80205F30(?);
// ? func_80206BF0(?);
// ? func_80206CB0(?);
// ? func_80206D10(?);
// ? func_80207044(?);
// ? func_8020754C(?);
// ? func_8020836C(?);
// ? func_80208564(?);
// ? func_802086EC(?);
// ? func_802087B0(?);
// ? func_802088C0(?);
// ? func_8020A21C(?);
// ? func_8020A8A4(?);
// ? func_8020AA40(?);
// ? func_8020AB58(?);
// ? func_8020AC44(?);
// ? func_8020AF38(?);
// ? func_8020B020(?);
// ? func_8020B0AC(?);
// ? func_8020B260(?);
// ? func_8020B548(?);
// ? func_8020B9D4(?);
// ? func_8020C238(?);
// ? func_8020C530(?);
// ? func_8020C85C(?);
// ? func_8020CD20(?);
// ? func_8020DA9C(?);
// ? func_8020DAB4(?);
// ? func_8020DD64(?);
// ? func_8020DE48(?);
// ? func_8020DED4(?);
// ? func_8020E080(?);
// ? func_8020E314(?);
// ? func_8020E5A8(?);
// ? func_8020E854(?);
// ? func_8020F31C(?);
// ? func_8020F52C(?);
// ? func_802105AC(?);
// ? func_802105C8(?);
// ? func_80210650(?);
// ? func_802108B4(?);
// ? func_8021128C(?);
// ? func_80211E08(?);
// ? func_802125F0(?);
// ? func_80212CD4(?);
// ? func_80212EF4(?);
// ? func_80212FC0(?);
// ? func_80213030(?);
// ? func_80213128(?);
// ? func_80213224(?);
// ? func_80213250(?);
// ? func_80213524(?);
// ? func_80213AB4(?);
// ? func_8021483C(?);
// ? func_80214B58(?);
// ? func_80214FA8(?);
// ? func_802150C4(?);
// ? func_80215358(?);
// ? func_802159B8(?);
// ? func_80215D54(?);
// ? func_80215ED8(?);
// ? func_802166C4(?);
// ? func_80216C20(?);
// ? func_80216F48(?);
// ? func_80218060(?);
// ? func_802181B4(?);
// ? func_80218260(?);
// ? func_802183E4(?);
// ? func_80218888(?);
// ? func_80218ED4(?);
// ? func_80218FC0(?);
// ? func_802190D0(?);
// ? func_80219204(?);
// ? func_80219230(?);
// ? func_802195CC(?);
// ? func_80219C34(?);
// ? func_80219C50(?);
// ? func_80219D84(?);
// ? func_8021A7F4(?);
// ? func_8021B2E8(?);
// ? func_8021B5C4(?);
// ? func_8021B920(?);
// ? func_8021C40C(?);
// ? func_8021C500(?);
// ? func_8021C640(?);
// ? func_8021C6AC(?);
// ? func_8021C82C(?);
// ? func_8021E500(?);
// ? func_8021EA30(?);
// ? func_8021EAF8(?);
// ? func_8021EC58(?);
// ? func_8021ED74(?);
// ? func_8021EDD4(?);
// ? func_8021EF10(?);
// ? func_8021EFEC(?);
// ? func_8021F4E8(?);
// ? func_8021F628(?);
// ? func_8021F70C(?);
// ? func_8021F79C(?);
// ? func_8021F8E4(?);
// ? func_8021FBE8(?);
// ? func_8021FD04(?);
// ? func_8021FFE8(?);
// ? func_802202CC(?);
// ? func_802205B0(?);
// ? func_8022089C(?);
// ? func_80220C2C(?);
// ? func_80220FB4(?);
// ? func_80221288(?);
// ? func_80221408(?);
// ? func_802216EC(?);
// ? func_802219D0(?);
// ? func_80221CB4(?);
// ? func_80221F98(?);
// ? func_80222284(?);
// ? func_80222674(?);
// ? func_80222958(?);
// ? func_80222C3C(?);
// ? func_80222F20(?);
// ? func_8022320C(?);
// ? func_80223624(?);
// ? func_80223908(?);
// ? func_80223BEC(?);
// ? func_80223ED0(?);
// ? func_802241B4(?);
// ? func_80224498(?);
// ? func_80224784(?);
// ? Stage_GetCamBoundsLeftOffset(?);
// ? Stage_GetCamBoundsRightOffset(?);
// ? Stage_GetCamBoundsTopOffset(?);
// ? Stage_GetCamBoundsBottomOffset(?);
// ? Stage_GetCamPanAngleRadians(?);
// ? Stage_GetCamMaxDepth(?);
// ? Stage_GetCamZoomRate(?);
// ? Stage_GetCamInfoX20(?);
// ? Stage_GetCamInfoX24(?);
// ? Stage_GetCamFixedZoom(?);
// ? Stage_GetCamTrackRatio(?);
// ? Stage_GetCamTrackSmooth(?);
// ? Stage_GetBlastZoneRightOffset(?);
// ? Stage_GetBlastZoneLeftOffset(?);
// ? Stage_GetBlastZoneTopOffset(?);
// ? Stage_GetBlastZoneBottomOffset(?);
// ? Stage_CalcUnkCamY(?);
// ? Stage_CalcUnkCamYBounds(?);
// ? Stage_UnkSetVecTCam_Offset(?);
// ? Stage_GetPauseCamZPosMin(?);
// ? Stage_GetPauseCamZPosInit(?);
// ? Stage_GetPauseCamZPosMax(?);
// ? Stage_GetCamAngleRadiansUp(?);
// ? Stage_GetCamAngleRadiansDown(?);
// ? Stage_GetCamAngleRadiansLeft(?);
// ? Stage_GetCamAngleRadiansRight(?);
// ? Stage_80224CAC(?);
// ? Stage_SetVecToFixedCamPos(?);
// ? Stage_GetCamFixedFov(?);
// ? Stage_80224DC8(?);
// ? Stage_80224E38(?);
// ? Stage_80224E64(?);
// ? Stage_80224FDC(?);
// ? Stage_80225074(?);
s32 Stage_80225194(void);
// ? Stage_8022519C(?);
// ? Stage_802251B4(?);
// ? Stage_802251E8(?);
// ? Stage_8022524C(?);
// ? Stage_80225298(?);
// ? Stage_802252E4(?);
// ? Stage_8022532C(?);
// ? func_80225374(?);
// ? func_802254B8(?);
// ? func_8022558C(?);
// ? func_802255A4(?);
// ? func_802255BC(?);
// ? func_802255D4(?);
// ? func_802256CC(?);
// ? func_80225A00(?);
// ? func_80225A54(?);
// ? func_80225B0C(?);
// ? func_80225B20(?);
// ? func_80225B34(?);
// ? func_80225B48(?);
// ? func_80225B9C(?);
// ? func_80225BF0(?);
// ? func_80225C44(?);
// ? func_80225C8C(?);
// ? func_80225CD4(?);
// ? func_80225D1C(?);
// ? func_80225D2C(?);
// ? func_80225D40(?);
// ? func_80225D54(?);
// ? func_80225D64(?);
// ? func_80225D7C(?);
// ? func_80225DD8(?);
// ? func_80225E6C(?);
// ? func_80225F20(?);
// ? func_802260D4(?);
// ? func_802261BC(?);
// ? func_802262E0(?);
// ? func_802264C4(?);
// ? func_8022659C(?);
// ? func_8022666C(?);
// ? func_80226730(?);
// ? func_802267C8(?);
// ? func_802268B8(?);
// ? func_8022697C(?);
// ? func_802269C0(?);
// ? func_80226BD4(?);
// ? func_80226E00(?);
// ? func_80226E0C(?);
// ? func_802270C4(?);
// ? func_8022713C(?);
// ? func_80227174(?);
// ? func_80227188(?);
// ? func_80227484(?);
// ? func_802277E8(?);
// ? func_80227904(?);
// ? func_802279E8(?);
// ? func_80227B64(?);
// ? func_80227BA8(?);
// ? func_80227CAC(?);
// ? func_80227D38(?);
// ? func_80227EB0(?);
// ? func_80227FE0(?);
// ? func_80228124(?);
// ? func_80228318(?);
// ? func_802283F0(?);
// ? func_80228620(?);
// ? func_8022873C(?);
// ? func_802287C4(?);
// ? func_802287D8(?);
// ? func_80228820(?);
// ? func_8022886C(?);
// ? func_8022887C(?);
// ? func_8022892C(?);
// ? func_802289F8(?);
// ? func_80228A64(?);
// ? func_80228C4C(?);
// ? func_80228CF4(?);
// ? func_80228D18(?);
// ? func_80228D38(?);
// ? func_80228E54(?);
// ? func_8022900C(?);
// ? func_802291A0(?);
// ? func_80229220(?);
// ? func_80229240(?);
// ? func_802295AC(?);
// ? func_80229624(?);
// ? func_80229860(?);
// ? func_80229894(?);
// ? func_80229938(?);
// ? func_80229A04(?);
// ? func_80229A7C(?);
// ? func_80229B2C(?);
// ? func_80229DC0(?);
// ? func_80229F60(?);
// ? func_8022A440(?);
// ? func_8022A5D0(?);
// ? func_8022ADD8(?);
// ? func_8022B3A0(?);
// ? func_8022BCF8(?);
// ? func_8022BD6C(?);
// ? func_8022BD8C(?);
// ? func_8022BE34(?);
// ? func_8022BEDC(?);
// ? func_8022BFBC(?);
// ? func_8022C010(?);
// ? func_8022C068(?);
// ? func_8022C304(?);
// ? func_8022E950(?);
// ? func_8022E978(?);
// ? func_8022EA08(?);
// ? func_8022EA78(?);
// ? func_8022EB24(?);
// ? func_8022EB78(?);
// ? func_8022EBDC(?);
// ? func_8022EC18(?);
// ? func_8022ED6C(?);
// ? func_8022EE84(?);
// ? func_8022EFD8(?);
// ? func_8022F0F0(?);
// ? func_8022F138(?);
// ? func_8022F1A8(?);
// ? func_8022F218(?);
// ? func_8022F268(?);
// ? func_8022F298(?);
// ? func_8022F3D8(?);
// ? func_8022F410(?);
// ? func_8022F470(?);
// ? func_8022F4CC(?);
// ? func_8022FB88(?);
// ? func_8022FD18(?);
// ? func_8022FEC8(?);
// ? func_80230198(?);
// ? func_80230274(?);
// ? func_802307F8(?);
// ? func_802308F0(?);
// ? func_80230D18(?);
// ? func_80230E38(?);
// ? func_80231634(?);
// ? func_8023164C(?);
// ? func_80231714(?);
// ? func_802317E4(?);
// ? func_80231804(?);
// ? func_80231F80(?);
// ? func_80232458(?);
// ? func_802324E4(?);
// ? func_80232660(?);
// ? func_802327A4(?);
// ? func_80232D4C(?);
// ? func_80233218(?);
// ? func_802339FC(?);
// ? func_80233A98(?);
// ? func_80233B68(?);
// ? func_8023405C(?);
// ? func_80234104(?);
// ? func_8023453C(?);
// ? func_80235020(?);
// ? func_802351A0(?);
// ? func_802358C0(?);
// ? func_8023593C(?);
// ? func_802359C8(?);
// ? func_80235C58(?);
// ? func_80235DC8(?);
// ? func_80236178(?);
// ? func_802364A0(?);
// ? func_80236548(?);
// ? func_80236CBC(?);
// ? func_80237410(?);
// ? func_8023749C(?);
// ? func_8023754C(?);
// ? func_80237594(?);
// ? func_802375EC(?);
// ? func_80237654(?);
// ? func_802377A8(?);
// ? func_80237834(?);
// ? func_802379BC(?);
// ? func_80237A04(?);
// ? func_80237A68(?);
// ? func_80237D94(?);
// ? func_80237F78(?);
// ? func_8023817C(?);
// ? func_802385A0(?);
// ? func_802385D4(?);
// ? func_80238698(?);
// ? func_80238754(?);
// ? func_802388D4(?);
// ? func_80238964(?);
// ? func_80238A04(?);
// ? func_80238AE0(?);
// ? func_80238C34(?);
// ? func_80239878(?);
// ? func_80239A24(?);
// ? func_80239EBC(?);
// ? func_80239F5C(?);
// ? func_80239FFC(?);
// ? func_8023A058(?);
// ? func_8023A290(?);
// ? func_8023A59C(?);
// ? func_8023A9B4(?);
// ? func_8023AC40(?);
// ? func_8023B084(?);
// ? func_8023B0F8(?);
// ? func_8023B224(?);
// ? func_8023B314(?);
// ? func_8023B3FC(?);
// ? func_8023BAA8(?);
// ? func_8023BD4C(?);
// ? func_8023BEE0(?);
// ? func_8023BFE4(?);
// ? func_8023C148(?);
// ? func_8023C290(?);
// ? func_8023C54C(?);
// ? func_8023CE4C(?);
// ? func_8023D130(?);
// ? func_8023D3E8(?);
// ? func_8023DA08(?);
// ? func_8023E0D8(?);
// ? func_8023E264(?);
// ? func_8023E32C(?);
// ? func_8023E630(?);
// ? func_8023E6D0(?);
// ? func_8023EA08(?);
// ? func_8023EA2C(?);
// ? func_8023EA40(?);
// ? func_8023EA54(?);
// ? func_8023EAC4(?);
// ? func_8023EB84(?);
// ? func_8023ECC4(?);
// ? func_8023EE38(?);
// ? func_8023EF70(?);
// ? func_8023EFE4(?);
// ? func_8023F068(?);
// ? func_8023F0DC(?);
// ? func_8023F14C(?);
// ? func_8023F238(?);
// ? func_8023F334(?);
// ? func_8023F3A8(?);
// ? func_8023F400(?);
// ? func_8023F45C(?);
// ? func_8023F4CC(?);
// ? func_8023F578(?);
// ? func_8023F8CC(?);
// ? func_8023FA6C(?);
// ? func_8023FC28(?);
// ? func_8023FDD8(?);
// ? func_80240D94(?);
// ? func_80241310(?);
// ? func_80241668(?);
// ? func_80241730(?);
// ? func_802417D0(?);
// ? func_80241B4C(?);
// ? func_80241E78(?);
// ? func_8024227C(?);
// ? func_802427B4(?);
// ? func_80242B38(?);
// ? func_80242C0C(?);
// ? func_802433AC(?);
// ? func_80243434(?);
// ? func_802437E8(?);
// ? func_80243A3C(?);
// ? func_80243A5C(?);
// ? func_80243A84(?);
// ? func_80243AB4(?);
// ? func_80243ADC(?);
// ? func_80243BBC(?);
// ? func_80244330(?);
// ? func_8024469C(?);
// ? func_80244C74(?);
// ? func_80244D80(?);
// ? func_80245068(?);
// ? func_80245178(?);
// ? func_802453B0(?);
// ? func_8024541C(?);
// ? func_80245684(?);
// ? func_8024589C(?);
// ? func_80245AE4(?);
// ? func_80245BA4(?);
// ? func_80246D40(?);
// ? func_80246F2C(?);
// ? func_80247008(?);
// ? func_8024714C(?);
// ? func_802474C4(?);
// ? func_802480B4(?);
// ? func_8024829C(?);
// ? func_80248444(?);
// ? func_80248644(?);
// ? func_80248ED4(?);
// ? func_80249174(?);
// ? func_80249C08(?);
// ? func_8024A09C(?);
// ? func_8024A4BC(?);
// ? func_8024A6C4(?);
// ? func_8024A790(?);
// ? func_8024A958(?);
// ? func_8024AA70(?);
// ? func_8024ABF8(?);
// ? func_8024AD58(?);
// ? func_8024BCA0(?);
// ? func_8024BEE0(?);
// ? func_8024C3C4(?);
// ? func_8024C5C0(?);
// ? func_8024CB94(?);
// ? func_8024CD64(?);
// ? func_8024CE74(?);
// ? func_8024D014(?);
// ? func_8024D0CC(?);
// ? func_8024D15C(?);
// ? func_8024D4E0(?);
// ? func_8024D5B0(?);
// ? func_8024D7E0(?);
// ? func_8024E420(?);
// ? func_8024E524(?);
// ? func_8024E838(?);
// ? func_8024E940(?);
// ? func_8024EA6C(?);
// ? func_8024EBC8(?);
// ? func_8024EEC0(?);
// ? func_8024FE4C(?);
// ? func_80250170(?);
// ? func_8025035C(?);
// ? func_8025072C(?);
// ? func_8025092C(?);
// ? func_80250C7C(?);
// ? func_80250DE4(?);
// ? func_80250FF8(?);
// ? func_802513F4(?);
// ? func_802517E0(?);
// ? func_8025186C(?);
// ? func_80251A08(?);
// ? func_80251AA4(?);
// ? func_80251AFC(?);
// ? func_80251D58(?);
// ? func_80251F04(?);
// ? func_802522B8(?);
// ? func_80252720(?);
// ? func_80252758(?);
// ? func_802528F8(?);
// ? func_802529B4(?);
// ? func_80252ADC(?);
// ? func_80252F8C(?);
// ? func_80253184(?);
// ? func_8025329C(?);
// ? func_80253640(?);
// ? func_80253964(?);
// ? func_80253AE4(?);
// ? func_80253BE0(?);
// ? func_80253E90(?);
// ? func_80253F60(?);
// ? func_80254014(?);
// ? func_8025409C(?);
// ? func_80254298(?);
// ? func_8025441C(?);
// ? func_80257F24(?);
// ? func_80258940(?);
// ? func_80258A08(?);
// ? func_80258BC4(?);
// ? func_80258D50(?);
// ? func_80258DBC(?);
// ? func_802591BC(?);
// ? func_80259604(?);
// ? func_8025963C(?);
// ? func_80259868(?);
// ? func_802599EC(?);
// ? func_80259C28(?);
// ? func_80259ED8(?);
// ? func_8025BBD4(?);
// ? func_8025BC08(?);
// ? func_8025BC20(?);
// ? func_8025BD30(?);
// ? func_8025C020(?);
// ? func_8025D1C4(?);
// ? func_8025D5AC(?);
// ? func_8025DAA0(?);
// ? func_8025DB34(?);
// ? func_8025EE8C(?);
// ? func_8025FB50(?);
// ? func_8025FDEC(?);
// ? mnCharSel_CostumeChange(?);
// ? func_80264070(?);
// ? func_802640A0(?);
// ? func_80266F3C(?);
// ? func_80266F70(?);
// ? func_80266FA8(?);
// ? func_80266FCC(?);
// ? func_80267130(?);
// ? func_80267454(?);
// ? func_802674AC(?);
// ? func_802675A8(?);
// ? func_802676F4(?);
// ? func_8026784C(?);
// ? func_80267978(?);
// ? func_80267AA8(?);
// ? func_802680CC(?);
// ? func_8026814C(?);
// ? func_802682F0(?);
// ? func_8026849C(?);
// ? func_80268560(?);
// ? func_8026862C(?);
// ? func_80268B18(?);
// ? func_80268B5C(?);
// ? func_80268B9C(?);
// ? func_80268BE0(?);
// ? func_80268D34(?);
// ? func_80268DD4(?);
// ? func_80268E40(?);
// ? func_80268E5C(?);
// ? func_802694CC(?);
// ? func_802696CC(?);
// ? func_802697D4(?);
// ? func_80269978(?);
// ? func_80269CA0(?);
// ? func_80269CC4(?);
// ? func_80269DC8(?);
// ? func_80269F14(?);
// ? func_8026A0A0(?);
// ? func_8026A0FC(?);
// ? func_8026A158(?);
// ? func_8026A1E8(?);
// ? func_8026A810(?);
// ? func_8026A848(?);
void func_8026A8EC();
// ? func_8026AB54(?);
void func_8026ABD8(struct _HSD_GObj *, Vec *, f32);
// ? it_Throw(?);
// ? func_8026AD20(?);
// ? func_8026ADC0(?);
// ? func_8026AE60(?);
// ? func_8026AE84(?);
// ? func_8026AF0C(?);
// ? func_8026AFA0(?);
// ? func_8026B034(?);
// ? func_8026B074(?);
// ? func_8026B0B4(?);
// ? func_8026B1A4(?);
// ? func_8026B1D4(?);
// ? func_8026B294(?);
BOOL func_8026B2B4(struct _HSD_GObj *);
// ? func_8026B2D8(?);
s32 itGetKind(struct _HSD_GObj *); // itGetKind
s32 func_8026B30C(struct _HSD_GObj *);
s32 func_8026B320(struct _HSD_GObj *);
// ? func_8026B334(?);
// ? func_8026B344(?);
// ? func_8026B378(?);
// ? func_8026B384(?);
// ? func_8026B390(?);
// ? func_8026B3A8(?);
// ? func_8026B3C0(?);
void func_8026B3F8(struct _Article *, s32);
// ? func_8026B40C(?);
// ? func_8026B424(?);
// ? func_8026B47C(?);
// ? func_8026B4F0(?);
f32 func_8026B54C(struct _HSD_GObj *);
f32 func_8026B560(struct _HSD_GObj *);
f32 func_8026B574(struct _HSD_GObj *);
s32 func_8026B588();
BOOL func_8026B594(struct _HSD_GObj *);
// ? func_8026B5E4(?);
// ? func_8026B634(?);
// ? func_8026B684(?);
// ? func_8026B6A8(?);
// ? func_8026B6C8(?);
// ? func_8026B718(?);
// ? func_8026B724(?);
// ? func_8026B73C(?);
// ? func_8026B774(?);
// ? func_8026B7A4(?);
// ? func_8026B7B0(?);
// ? func_8026B7BC(?);
// ? func_8026B7CC(?);
// ? func_8026B7D8(?);
// ? func_8026B7E0(?);
// ? func_8026B7E8(?);
void func_8026B7F8();
// ? func_8026B894(?);
// ? func_8026B924(?);
// ? func_8026B960(?);
// ? func_8026B9A8(?);
// ? func_8026BAE8(?);
// ? func_8026BB20(?);
// ? func_8026BB44(?);
// ? func_8026BB68(?);
// ? func_8026BB88(?);
// ? func_8026BBCC(?);
// ? func_8026BC14(?);
// ? func_8026BC68(?);
// ? func_8026BC78(?);
// ? func_8026BC84(?);
// ? func_8026BC90(?);
// ? func_8026BCF4(?);
// ? func_8026BD0C(?);
// ? func_8026BD24(?);
// ? func_8026BD3C(?);
// ? func_8026BD54(?);
// ? func_8026BD6C(?);
// ? func_8026BD84(?);
// ? func_8026BD9C(?);
// ? func_8026BDB4(?);
// ? func_8026BDCC(?);
// ? func_8026BE28(?);
// ? func_8026BE84(?);
// ? func_8026C100(?);
// ? func_8026C16C(?);
// ? func_8026C1B4(?);
// ? func_8026C1D4(?);
// ? func_8026C1E8(?);
// ? func_8026C220(?);
// ? func_8026C258(?);
// ? func_8026C334(?);
// ? func_8026C368(?);
// ? func_8026C3FC(?);
// ? func_8026C42C(?);
// ? func_8026C47C(?);
// ? func_8026C530(?);
// ? func_8026C65C(?);
// ? func_8026C704(?);
// ? func_8026C75C(?);
// ? func_8026CA4C(?);
// ? func_8026CB3C(?);
// ? func_8026CB9C(?);
// ? func_8026CD50(?);
// ? func_8026CF04(?);
// ? func_8026D018(?);
// ? func_8026D258(?);
// ? func_8026D324(?);
// ? func_8026D3CC(?);
// ? func_8026D564(?);
// ? func_8026D5CC(?);
// ? func_8026D604(?);
// ? func_8026D62C(?);
// ? func_8026D6F4(?);
// ? func_8026D78C(?);
// ? func_8026D82C(?);
// ? func_8026D8A4(?);
// ? func_8026D938(?);
// ? func_8026D9A0(?);
// ? func_8026DA08(?);
// ? func_8026DA70(?);
// ? func_8026DAA8(?);
// ? func_8026DB40(?);
// ? func_8026DBC8(?);
// ? func_8026DC24(?);
// ? func_8026DD5C(?);
// ? func_8026DDFC(?);
// ? func_8026DE98(?);
// ? func_8026DF34(?);
// ? func_8026DFB0(?);
// ? func_8026E058(?);
// ? func_8026E0F4(?);
// ? func_8026E15C(?);
// ? func_8026E248(?);
// ? func_8026E32C(?);
// ? func_8026E414(?);
// ? func_8026E4D0(?);
// ? func_8026E5A0(?);
// ? func_8026E664(?);
// ? func_8026E71C(?);
// ? func_8026E7E0(?);
// ? func_8026E8C4(?);
// ? func_8026E9A4(?);
// ? func_8026EA20(?);
// ? func_8026EA9C(?);
// ? func_8026EB18(?);
// ? func_8026EBC8(?);
// ? func_8026EC54(?);
// ? func_8026ECE0(?);
// ? func_8026EECC(?);
// ? func_8026F3AC(?);
// ? func_8026F3D4(?);
// ? func_8026F53C(?);
// ? func_8026F5C8(?);
// ? func_8026F6BC(?);
// ? func_8026F7C8(?);
// ? func_8026F8B4(?);
// ? func_8026F9A0(?);
// ? func_8026F9AC(?);
// ? func_8026FA2C(?);
// ? func_8026FAC4(?);
// ? func_8026FC00(?);
// ? func_8026FCF8(?);
// ? func_8026FE68(?);
// ? func_802701BC(?);
// ? func_802703E8(?);
// ? func_802706D0(?);
// ? func_80270CD8(?);
// ? func_80270E30(?);
// ? func_8027129C(?);
// ? func_8027137C(?);
// ? func_8027146C(?);
// ? func_802714C0(?);
// ? func_80271508(?);
// ? func_80271534(?);
// ? func_80271590(?);
// ? func_8027163C(?);
// ? func_80271830(?);
// ? func_80271A58(?);
// ? func_80271B60(?);
// ? func_80271D2C(?);
// ? func_80271F78(?);
// ? func_802721B8(?);
// ? func_80272280(?);
// ? func_80272298(?);
// ? func_802722B0(?);
// ? func_80272304(?);
// ? func_8027236C(?);
// ? func_802723FC(?);
// ? func_80272460(?);
// ? func_80272560(?);
// ? func_802725D4(?);
// ? func_80272674(?);
// ? func_80272784(?);
// ? func_80272818(?);
// ? func_80272828(?);
// ? func_80272860(?);
// ? func_802728C8(?);
// ? func_80272940(?);
// ? func_80272980(?);
// ? func_80272A18(?);
// ? func_80272A3C(?);
// ? func_80272A60(?);
// ? func_80272AC4(?);
// ? func_80272B40(?);
// ? func_80272BA4(?);
// ? func_80272C08(?);
// ? func_80272C6C(?);
// ? func_80272C90(?);
// ? func_80272CC0(?);
// ? func_80272D1C(?);
// ? func_80272D40(?);
// ? itColl_BounceOffVictim(?);
// ? func_80272DE4(?);
// ? func_80272F7C(?);
// ? func_80273030(?);
// ? itColl_BounceOffShield(?);
// ? func_80273130(?);
// ? func_80273168(?);
// ? func_802731A4(?);
// ? func_802731E0(?);
// ? func_8027321C(?);
// ? func_8027327C(?);
// ? func_802732E4(?);
// ? func_80273318(?);
// ? func_80273408(?);
// ? func_80273454(?);
// ? func_8027346C(?);
// ? func_80273484(?);
// ? func_8027349C(?);
// ? func_802734B4(?);
// ? func_80273500(?);
// ? func_80273598(?);
// ? func_80273600(?);
// ? func_80273648(?);
// ? func_80273670(?);
// ? func_80273748(?);
// ? func_80273B50(?);
// ? func_80273F34(?);
// ? func_80274198(?);
// ? func_802741F4(?);
// ? func_80274250(?);
// ? func_8027429C(?);
// ? func_802742F4(?);
// ? func_80274484(?);
// ? func_80274574(?);
// ? func_80274594(?);
// ? func_80274658(?);
// ? func_802746F8(?);
// ? func_80274740(?);
// ? func_80274990(?);
// ? func_80274A64(?);
// ? func_80274C60(?);
// ? func_80274C78(?);
// ? func_80274C88(?);
// ? func_80274CAC(?);
// ? func_80274D04(?);
// ? func_80274D6C(?);
// ? func_80274DAC(?);
// ? func_80274DFC(?);
// ? func_80274E44(?);
// ? func_80274ECC(?);
// ? func_80274ED8(?);
// ? func_80274EE8(?);
// ? func_80274EF8(?);
// ? func_80274F10(?);
// ? func_80274F28(?);
// ? func_80274F48(?);
// ? func_80274FDC(?);
// ? func_80275070(?);
// ? func_802750E8(?);
// ? func_802750F8(?);
// ? func_80275158(?);
// ? func_80275174(?);
// ? func_8027518C(?);
// ? func_802751D8(?);
// ? func_80275210(?);
// ? func_80275228(?);
// ? func_80275240(?);
// ? func_80275258(?);
// ? func_80275270(?);
// ? func_80275288(?);
// ? func_802752D8(?);
// ? func_80275328(?);
// ? func_80275390(?);
// ? func_802753BC(?);
// ? func_802753DC(?);
// ? func_80275414(?);
// ? func_8027542C(?);
// ? func_80275444(?);
// ? func_80275474(?);
// ? func_802754A4(?);
// ? func_802754BC(?);
// ? func_802754D4(?);
// ? func_80275504(?);
// ? func_80275534(?);
// ? func_80275594(?);
// ? func_802755C0(?);
// ? func_80275640(?);
// ? func_802756D0(?);
// ? func_802756E0(?);
// ? func_8027570C(?);
// ? func_8027572C(?);
// ? func_8027574C(?);
// ? func_80275788(?);
// ? func_80275820(?);
// ? func_80275870(?);
// ? func_802758D4(?);
// ? func_802759DC(?);
// ? func_80275BC8(?);
// ? func_80275D5C(?);
// ? func_80275DFC(?);
// ? func_80275E98(?);
// ? func_80276100(?);
// ? func_80276174(?);
// ? func_80276214(?);
// ? func_80276278(?);
// ? func_802762B0(?);
// ? func_802762BC(?);
// ? func_802762D8(?);
// ? func_80276308(?);
// ? func_80276348(?);
// ? func_802763B8(?);
// ? func_802763E0(?);
// ? func_80276408(?);
// ? func_8027649C(?);
// ? func_802765BC(?);
// ? func_80276934(?);
// ? func_80276CB8(?);
// ? func_80276CEC(?);
// ? func_80276D9C(?);
// ? func_80276FC4(?);
// ? func_80277040(?);
// ? func_8027737C(?);
// ? func_80277544(?);
// ? func_802775F0(?);
// ? func_8027770C(?);
// ? func_8027781C(?);
// ? func_80277C40(?);
// ? func_80277F90(?);
// ? func_80278108(?);
// ? func_80278574(?);
// ? func_8027870C(?);
// ? func_802787B4(?);
// ? func_80278800(?);
// ? func_80278F2C(?);
// ? func_8027978C(?);
// ? func_802799E4(?);
// ? func_80279B64(?);
// ? func_80279B88(?);
// ? func_80279BBC(?);
// ? func_80279BE0(?);
// ? func_80279C48(?);
// ? func_80279CDC(?);
// ? func_80279D38(?);
// ? func_80279D5C(?);
// ? func_80279E24(?);
// ? func_80279FF8(?);
// ? func_8027A09C(?);
// ? func_8027A118(?);
// ? func_8027A13C(?);
// ? func_8027A160(?);
// ? func_8027A344(?);
// ? func_8027A364(?);
// ? func_8027A4D4(?);
// ? func_8027A780(?);
// ? func_8027A9B8(?);
// ? func_8027AAA0(?);
// ? func_8027AB64(?);
// ? func_8027ADEC(?);
// ? func_8027AE34(?);
// ? func_8027AF50(?);
// ? func_8027B070(?);
// ? func_8027B0C4(?);
// ? func_8027B1F4(?);
// ? func_8027B288(?);
// ? func_8027B330(?);
// ? func_8027B378(?);
// ? func_8027B408(?);
void func_8027B4A4();
// ? func_8027B508(?);
// ? func_8027B564(?);
void *func_8027B5B0(s32, s32, struct _HSD_JObj *, s32, s32);
// ? func_8027B730(?);
// ? func_8027B798(?);
// ? func_8027B964(?);
// ? func_8027BA54(?);
// ? func_8027BB1C(?);
// ? func_8027BBF4(?);
// ? func_8027C0A8(?);
// ? func_8027C0CC(?);
// ? func_8027C0F0(?);
// ? func_8027C56C(?);
// ? func_8027C794(?);
// ? func_8027C79C(?);
// ? func_8027C824(?);
// ? func_8027C8B0(?);
// ? func_8027C8D0(?);
// ? func_8027C9D8(?);
// ? func_8027CA7C(?);
// ? func_8027CAD8(?);
// ? func_8027CB3C(?);
// ? func_8027CBA4(?);
// ? func_8027CBFC(?);
// ? func_8027CC88(?);
// ? func_8027CE18(?);
// ? func_8027CE44(?);
// ? func_8027CE64(?);
// ? func_8027CF30(?);
// ? func_8027CFE8(?);
// ? func_8027D148(?);
// ? func_8027D2DC(?);
// ? func_8027D670(?);
// ? func_8027D730(?);
// ? func_8027D820(?);
// ? func_8027DE18(?);
// ? func_8027E978(?);
// ? func_8027EE04(?);
// ? func_8027F42C(?);
// ? func_8027F8E0(?);
// ? func_80280B60(?);
// ? func_80280DC0(?);
// ? func_802817A0(?);
// ? func_80281C6C(?);
// ? func_80282074(?);
// ? func_80282B14(?);
// ? func_80282BFC(?);
// ? func_80282DE4(?);
// ? func_80283AE4(?);
// ? func_80283BD4(?);
// ? func_80283DD4(?);
// ? func_802841B4(?);
// ? func_8028428C(?);
// ? func_80284358(?);
// ? func_802846D4(?);
// ? func_80284854(?);
// ? func_80284974(?);
// ? func_802849F0(?);
// ? func_80284D54(?);
// ? func_80284E30(?);
// ? func_80284FC4(?);
// ? func_80285024(?);
// ? func_80285084(?);
// ? func_80285140(?);
// ? func_802851FC(?);
// ? func_802852B8(?);
// ? func_80285300(?);
// ? func_80285314(?);
// ? func_80285424(?);
// ? func_802855F8(?);
// ? func_80286088(?);
// ? func_80286248(?);
// ? func_80286340(?);
// ? func_802863BC(?);
// ? func_8028655C(?);
// ? func_80286AA4(?);
// ? func_80286BA0(?);
// ? func_802870A4(?);
// ? func_802874F0(?);
// ? func_80287690(?);
// ? func_80287D0C(?);
// ? func_80287F20(?);
// ? func_80288194(?);
// ? func_802881B4(?);
// ? func_802881FC(?);
// ? func_8028833C(?);
// ? func_802885C8(?);
// ? func_802886C4(?);
// ? func_80288818(?);
// ? func_80288C88(?);
// ? func_80288DC4(?);
// ? func_80288EFC(?);
// ? func_80288FDC(?);
// ? func_80289094(?);
// ? func_80289158(?);
// ? func_80289218(?);
// ? func_802896CC(?);
// ? func_802897C8(?);
// ? func_80289910(?);
// ? func_80289A00(?);
// ? func_80289B50(?);
// ? func_80289BE8(?);
// ? func_8028A114(?);
// ? func_8028A190(?);
// ? func_8028A3CC(?);
// ? func_8028A544(?);
// ? func_8028AC74(?);
// ? func_8028AD44(?);
// ? func_8028B08C(?);
// ? func_8028B17C(?);
// ? func_8028B3E0(?);
// ? func_8028B618(?);
// ? func_8028B8D8(?);
// ? func_8028B988(?);
// ? func_8028BAD8(?);
// ? func_8028BC2C(?);
// ? func_8028BE54(?);
// ? func_8028C018(?);
// ? func_8028C3A8(?);
// ? func_8028C898(?);
// ? func_8028CB24(?);
// ? func_8028CFE0(?);
// ? func_8028D100(?);
// ? func_8028D26C(?);
// ? func_8028D390(?);
// ? func_8028D3B8(?);
// ? func_8028D4E4(?);
// ? func_8028D56C(?);
// ? func_8028D7F0(?);
// ? func_8028DAE4(?);
// ? func_8028E170(?);
// ? func_8028E774(?);
// ? func_8028E79C(?);
// ? func_8028E860(?);
// ? func_8028E938(?);
// ? func_8028EB88(?);
// ? func_8028EC98(?);
// ? func_8028ECE0(?);
// ? func_8028ECF0(?);
// ? func_8028ED50(?);
// ? func_8028EDBC(?);
// ? func_8028F1D8(?);
// ? func_8028F434(?);
// ? func_8028F7C8(?);
// ? func_8028F8E4(?);
// ? func_8028F968(?);
// ? func_8028F9B8(?);
// ? func_8028F9D8(?);
// ? func_8028FAF4(?);
// ? func_8028FC5C(?);
// ? func_8028FD7C(?);
// ? func_8028FE90(?);
// ? func_8028FF8C(?);
// ? func_80290114(?);
// ? func_80290238(?);
// ? func_802905D8(?);
// ? func_80290614(?);
// ? func_80290938(?);
// ? func_80290A7C(?);
// ? func_80290C38(?);
// ? func_80290CE8(?);
// ? func_80290DD4(?);
// ? func_80290F00(?);
// ? func_80290FE0(?);
// ? func_80291254(?);
// ? func_8029131C(?);
// ? func_80291344(?);
// ? func_80291BE0(?);
// ? func_80291CCC(?);
// ? func_80291CF4(?);
// ? func_80291D38(?);
// ? func_80291DAC(?);
// ? func_80291F14(?);
// ? func_80291FA8(?);
// ? func_80292030(?);
// ? func_802920B8(?);
// ? func_80292394(?);
// ? func_802923BC(?);
// ? func_80292488(?);
// ? func_802927E8(?);
// ? func_8029282C(?);
// ? func_8029290C(?);
// ? func_80292998(?);
// ? func_802929C8(?);
// ? func_802929F8(?);
// ? func_80292A28(?);
// ? func_80292D48(?);
// ? func_80292E64(?);
// ? func_80292EAC(?);
// ? func_80292EF8(?);
// ? func_80292F14(?);
// ? func_80292FF0(?);
// ? func_8029313C(?);
// ? func_80293660(?);
// ? func_8029385C(?);
// ? func_80293BE8(?);
// ? func_80293DCC(?);
// ? func_80293E34(?);
// ? func_8029402C(?);
// ? func_802941A4(?);
// ? func_80294364(?);
// ? func_80294430(?);
// ? func_802944AC(?);
// ? func_80294624(?);
// ? func_802946B0(?);
// ? func_802947CC(?);
// ? func_80294B58(?);
// ? func_80294DC0(?);
void func_80294E78(struct _HSD_GObj *, f32);
// ? func_80294EB0(?);
// ? func_802950D4(?);
// ? func_80295138(?);
// ? func_802951C0(?);
// ? func_80295498(?);
// ? func_80295748(?);
// ? func_80295770(?);
// ? func_8029583C(?);
// ? func_80295D04(?);
// ? func_80295F38(?);
// ? func_802960B8(?);
// ? func_802960CC(?);
// ? func_802961E8(?);
// ? func_802962E0(?);
// ? func_80296694(?);
// ? func_802969D8(?);
// ? func_80296E88(?);
// ? func_80296EA8(?);
// ? func_80296EF0(?);
// ? func_80297154(?);
// ? func_802975F4(?);
// ? func_80297790(?);
// ? func_802979D4(?);
// ? func_80298168(?);
// ? func_802982AC(?);
// ? func_802988E4(?);
// ? func_802989C8(?);
// ? func_80298DEC(?);
// ? func_80298ED0(?);
// ? func_802993E0(?);
// ? func_80299528(?);
// ? func_802996D0(?);
// ? func_802998A0(?);
// ? func_802999E4(?);
// ? func_80299C48(?);
// ? func_80299D7C(?);
// ? func_80299E48(?);
// ? func_80299FB4(?);
// ? func_8029A114(?);
// ? func_8029A218(?);
// ? func_8029A31C(?);
// ? func_8029A498(?);
struct _HSD_GObj *func_8029A748(struct _HSD_GObj *, Vec *, u8, f32);
void func_8029A89C(struct _HSD_GObj *, f32);
void func_8029A8F4(struct _HSD_GObj *, Vec *, f32);
// ? func_8029B0C8(?);
// ? func_8029B268(?);
// ? func_8029B348(?);
// ? func_8029B46C(?);
// ? func_8029B6F8(?);
// ? func_8029B7C0(?);
// ? func_8029BAB8(?);
// ? func_8029BB90(?);
// ? func_8029C4D4(?);
// ? func_8029C504(?);
// ? func_8029C6A4(?);
// ? func_8029C6CC(?);
// ? func_8029CD78(?);
// ? func_8029CEB4(?);
// ? func_8029CFF0(?);
// ? func_8029D798(?);
// ? func_8029D968(?);
// ? func_8029D9A4(?);
// ? func_8029DB5C(?);
// ? func_8029DD58(?);
// ? func_8029F18C(?);
// ? func_8029F69C(?);
// ? func_8029FDBC(?);
// ? func_8029FE64(?);
// ? func_802A013C(?);
// ? func_802A0534(?);
// ? func_802A07B4(?);
// ? func_802A0810(?);
// ? func_802A0930(?);
// ? func_802A0C34(?);
// ? func_802A10E4(?);
// ? func_802A13EC(?);
// ? func_802A15EC(?);
// ? func_802A16E4(?);
// ? func_802A1948(?);
// ? func_802A19E0(?);
// ? func_802A2428(?);
// ? func_802A24D0(?);
// ? func_802A2568(?);
// ? func_802A2B10(?);
// ? func_802A2BA4(?);
// ? func_802A3C98(?);
// ? func_802A3D90(?);
// ? func_802A3E50(?);
// ? func_802A40D0(?);
// ? func_802A42F4(?);
// ? func_802A43B8(?);
// ? func_802A43EC(?);
// ? func_802A4420(?);
// ? func_802A4454(?);
// ? func_802A44CC(?);
// ? func_802A4758(?);
// ? func_802A49B0(?);
// ? func_802A4BFC(?);
// ? func_802A5320(?);
// ? func_802A5770(?);
// ? func_802A5AE0(?);
// ? func_802A5E28(?);
// ? func_802A5FE0(?);
// ? func_802A6474(?);
// ? func_802A678C(?);
// ? func_802A6944(?);
// ? func_802A6A78(?);
// ? func_802A6DC8(?);
// ? func_802A6F80(?);
// ? func_802A7168(?);
// ? func_802A7384(?);
// ? func_802A7688(?);
// ? func_802A76EC(?);
// ? func_802A7764(?);
// ? func_802A77DC(?);
// ? func_802A7840(?);
// ? func_802A78B8(?);
// ? func_802A793C(?);
// ? func_802A79A0(?);
// ? func_802A7A04(?);
// ? func_802A7AAC(?);
// ? func_802A7E40(?);
// ? func_802A8330(?);
// ? func_802A8398(?);
// ? func_802A83E0(?);
// ? func_802A850C(?);
// ? func_802A8A7C(?);
// ? func_802A8C7C(?);
// ? func_802A9458(?);
// ? func_802AA054(?);
// ? func_802AA1D8(?);
// ? func_802AA494(?);
// ? func_802AA55C(?);
// ? func_802AA7E4(?);
// ? func_802AA7F0(?);
// ? func_802AA810(?);
// ? func_802AA8C0(?);
// ? func_802AAA50(?);
// ? func_802AAA80(?);
// ? func_802AB3F0(?);
// ? func_802AB468(?);
// ? func_802AB4B8(?);
// ? func_802AB568(?);
// ? func_802AB58C(?);
// ? func_802AB90C(?);
// ? func_802AB9C0(?);
// ? func_802ABA4C(?);
// ? func_802AC43C(?);
// ? func_802AC58C(?);
// ? func_802AC5D8(?);
// ? func_802AC604(?);
// ? func_802AC8A8(?);
// ? func_802AC9F8(?);
// ? func_802ACBA0(?);
// ? func_802ACEBC(?);
// ? func_802AD160(?);
// ? func_802AD478(?);
// ? func_802AD590(?);
// ? func_802AD6B8(?);
// ? func_802ADA1C(?);
// ? func_802ADAF0(?);
// ? func_802ADC34(?);
// ? func_802ADC54(?);
// ? func_802ADDD0(?);
// ? func_802ADF10(?);
// ? func_802AE1D0(?);
// ? func_802AE200(?);
// ? func_802AE538(?);
// ? func_802AE608(?);
// ? func_802AE63C(?);
// ? func_802AE7B8(?);
// ? func_802AE8A8(?);
// ? func_802AE994(?);
// ? func_802AEAB4(?);
// ? func_802AF1A4(?);
// ? func_802AF304(?);
// ? func_802AF32C(?);
// ? func_802AF940(?);
// ? func_802AFA70(?);
// ? func_802AFBA4(?);
// ? func_802AFD8C(?);
// ? func_802AFEA8(?);
// ? func_802AFF08(?);
// ? func_802B00F4(?);
// ? func_802B18B0(?);
// ? func_802B19AC(?);
// ? func_802B1C60(?);
// ? func_802B1D40(?);
s32 func_802B1DEC(u32);
u32 func_802B1DF8(HSD_GObj *, Vec *, Vec *, s32, s32, s32);
s32 func_802B1FC8(u32);
void func_802B1FE8(u32, Vec *);
// ? func_802B2080(?);
// ? func_802B211C(?);
// ? func_802B22B8(?);
// ? func_802B2560(?);
// ? func_802B2674(?);
// ? func_802B26C0(?);
// ? func_802B26E0(?);
// ? func_802B2890(?);
// ? func_802B28C8(?);
// ? func_802B2A10(?);
// ? func_802B2B08(?);
// ? func_802B2C38(?);
// ? func_802B2FC8(?);
// ? func_802B322C(?);
// ? func_802B3368(?);
// ? func_802B338C(?);
// ? func_802B3544(?);
// ? func_802B3554(?);
// ? func_802B3EFC(?);
// ? func_802B3F20(?);
// ? func_802B3F88(?);
// ? func_802B4224(?);
// ? func_802B43B0(?);
// ? func_802B43D0(?);
// ? func_802B4AC8(?);
// ? func_802B4BA0(?);
// ? func_802B53CC(?);
// ? func_802B5518(?);
// ? func_802B55C8(?);
void func_802B56E4(u32, Vec *, f32, f32, f32);
// ? func_802B5974(?);
// ? func_802B5CBC(?);
// ? func_802B62D0(?);
// ? func_802B63F8(?);
// ? func_802B64FC(?);
// ? func_802B66A8(?);
// ? func_802B6A60(?);
// ? func_802B6C28(?);
// ? func_802B701C(?);
// ? func_802B70A0(?);
// ? func_802B7160(?);
// ? func_802B743C(?);
// ? func_802B75FC(?);
// ? func_802B7B84(?);
// ? func_802B7C18(?);
// ? func_802B900C(?);
// ? func_802B91C4(?);
// ? func_802B9328(?);
// ? func_802B99A0(?);
// ? func_802B9CE8(?);
// ? func_802B9FD4(?);
// ? func_802BA194(?);
// ? func_802BA2D8(?);
// ? func_802BA3BC(?);
// ? func_802BA5DC(?);
// ? func_802BA760(?);
// ? func_802BA97C(?);
// ? func_802BA9B8(?);
// ? func_802BAA08(?);
// ? func_802BAA58(?);
// ? func_802BAA94(?);
// ? func_802BAAE4(?);
// ? func_802BAB40(?);
// ? func_802BAB7C(?);
// ? func_802BABB8(?);
// ? func_802BAC3C(?);
// ? func_802BAEEC(?);
// ? func_802BAF0C(?);
// ? func_802BAF2C(?);
// ? func_802BB20C(?);
// ? func_802BB290(?);
// ? func_802BB938(?);
// ? func_802BBAEC(?);
// ? func_802BBB0C(?);
// ? func_802BBC38(?);
// ? func_802BBD64(?);
// ? func_802BBED0(?);
// ? func_802BC080(?);
// ? func_802BC94C(?);
// ? func_802BCA30(?);
// ? func_802BCB88(?);
// ? func_802BCE94(?);
// ? func_802BCED4(?);
// ? func_802BCF2C(?);
// ? func_802BCF84(?);
// ? func_802BCFC4(?);
// ? func_802BD158(?);
// ? func_802BD248(?);
// ? func_802BD32C(?);
// ? func_802BD45C(?);
// ? func_802BD4AC(?);
// ? func_802BDA40(?);
// ? func_802BDA64(?);
// ? func_802BDB94(?);
// ? func_802BDBF8(?);
// ? func_802BDC18(?);
// ? func_802BDC38(?);
// ? func_802BDDB4(?);
// ? func_802BDE18(?);
// ? func_802BDF40(?);
// ? func_802BDFA0(?);
// ? func_802BDFC0(?);
// ? func_802BE100(?);
// ? func_802BE214(?);
// ? func_802BE2E8(?);
// ? func_802BE598(?);
// ? func_802BE5B8(?);
// ? func_802BE5D8(?);
// ? func_802BE65C(?);
// ? func_802BE958(?);
// ? func_802BE9D8(?);
// ? func_802BF030(?);
// ? func_802BF180(?);
// ? func_802BF28C(?);
// ? func_802BF4A0(?);
// ? func_802BF800(?);
// ? func_802BF900(?);
// ? func_802BFAFC(?);
// ? func_802BFE5C(?);
// ? func_802BFEC4(?);
// ? func_802C0010(?);
// ? func_802C01AC(?);
// ? func_802C027C(?);
// ? func_802C0510(?);
// ? func_802C0850(?);
// ? func_802C09C4(?);
// ? func_802C0B5C(?);
// ? func_802C0DBC(?);
// ? func_802C0DF8(?);
// ? func_802C1180(?);
// ? func_802C1590(?);
// ? func_802C16F8(?);
// ? func_802C17DC(?);
// ? func_802C1854(?);
// ? func_802C1950(?);
// ? func_802C1A58(?);
// ? func_802C1AE4(?);
// ? func_802C2144(?);
// ? func_802C2248(?);
// ? func_802C2358(?);
// ? func_802C248C(?);
// ? func_802C2750(?);
// ? func_802C27D4(?);
// ? func_802C2CA8(?);
// ? func_802C2DB0(?);
// ? func_802C2EC4(?);
// ? func_802C30E8(?);
// ? func_802C32D4(?);
// ? func_802C33B8(?);
// ? func_802C3520(?);
// ? func_802C37BC(?);
// ? func_802C3810(?);
// ? func_802C3864(?);
// ? func_802C3950(?);
// ? func_802C3AF0(?);
// ? func_802C3AFC(?);
// ? func_802C3BAC(?);
// ? func_802C3D44(?);
// ? func_802C3D74(?);
// ? func_802C4580(?);
// ? func_802C46C4(?);
// ? func_802C4820(?);
// ? func_802C49E0(?);
// ? func_802C4A40(?);
// ? func_802C4B38(?);
// ? func_802C4BB8(?);
// ? func_802C4D10(?);
// ? func_802C4F50(?);
// ? func_802C5000(?);
// ? func_802C519C(?);
// ? func_802C53F0(?);
// ? func_802C573C(?);
// ? func_802C5B18(?);
// ? func_802C5E5C(?);
// ? func_802C61F4(?);
// ? func_802C6328(?);
// ? func_802C6374(?);
// ? func_802C6394(?);
// ? func_802C6430(?);
// ? func_802C6458(?);
// ? func_802C6480(?);
// ? func_802C64A8(?);
// ? func_802C65E4(?);
// ? func_802C6718(?);
// ? func_802C6764(?);
// ? func_802C6784(?);
// ? func_802C68F8(?);
// ? func_802C6A2C(?);
// ? func_802C6A78(?);
// ? func_802C6A98(?);
// ? func_802C6C38(?);
// ? func_802C6D6C(?);
// ? func_802C6DB8(?);
// ? func_802C6DD8(?);
// ? func_802C6E50(?);
// ? func_802C6F40(?);
// ? func_802C7074(?);
// ? func_802C70C0(?);
// ? func_802C70E0(?);
// ? func_802C7158(?);
// ? func_802C720C(?);
// ? func_802C7340(?);
// ? func_802C738C(?);
// ? func_802C73AC(?);
// ? func_802C7424(?);
// ? func_802C74D8(?);
// ? func_802C760C(?);
// ? func_802C7658(?);
// ? func_802C7678(?);
// ? func_802C7774(?);
// ? func_802C78B8(?);
// ? func_802C7A84(?);
// ? func_802C7AD0(?);
// ? func_802C7AF0(?);
// ? func_802C7D60(?);
// ? func_802C7E94(?);
// ? func_802C7EE0(?);
// ? func_802C7F00(?);
// ? func_802C8038(?);
// ? func_802C8158(?);
// ? func_802C81C8(?);
// ? func_802C81E8(?);
// ? func_802C8208(?);
// ? func_802C837C(?);
// ? func_802C84A0(?);
// ? func_802C875C(?);
void *func_802C8B28(struct _HSD_GObj *, Vec *, u32, f32);
// ? func_802C8C34(?);
// ? func_802C90E8(?);
// ? func_802C93BC(?);
// ? func_802C9468(?);
// ? func_802C9670(?);
// ? func_802C98E4(?);
// ? func_802C9A74(?);
// ? func_802C9B20(?);
// ? func_802C9CC0(?);
// ? func_802C9E8C(?);
// ? func_802CA074(?);
// ? func_802CA324(?);
// ? func_802CA3F4(?);
// ? func_802CA58C(?);
// ? func_802CA6A0(?);
// ? func_802CA938(?);
// ? func_802CAA40(?);
// ? func_802CAB10(?);
// ? func_802CADF0(?);
// ? func_802CB350(?);
// ? func_802CB4F0(?);
// ? func_802CB798(?);
// ? func_802CB994(?);
// ? func_802CBAA8(?);
// ? func_802CBFE4(?);
// ? func_802CC0EC(?);
// ? func_802CC1CC(?);
// ? func_802CC5D4(?);
// ? func_802CC7D8(?);
// ? func_802CC944(?);
// ? func_802CCC68(?);
// ? func_802CCE28(?);
// ? func_802CD12C(?);
// ? func_802CD2EC(?);
// ? func_802CD4FC(?);
// ? func_802CD9C0(?);
// ? func_802CDAA8(?);
// ? func_802CDCB4(?);
// ? func_802CDE1C(?);
// ? func_802CDF28(?);
// ? func_802CE008(?);
// ? func_802CE400(?);
// ? func_802CE640(?);
// ? func_802CE8D0(?);
// ? func_802CEC24(?);
// ? func_802CED54(?);
// ? func_802CF0D4(?);
// ? func_802CF4D4(?);
// ? func_802CF744(?);
// ? func_802CF908(?);
// ? func_802CFB78(?);
// ? func_802CFD3C(?);
// ? func_802CFFAC(?);
// ? func_802D03F8(?);
// ? func_802D05D8(?);
// ? func_802D0774(?);
// ? func_802D07C0(?);
// ? func_802D08F0(?);
// ? func_802D09D0(?);
// ? func_802D0C44(?);
// ? func_802D100C(?);
// ? func_802D1204(?);
// ? func_802D1320(?);
// ? func_802D1580(?);
// ? func_802D16D4(?);
// ? func_802D1830(?);
// ? func_802D1A44(?);
// ? func_802D1D40(?);
// ? func_802D1E8C(?);
// ? func_802D1F64(?);
// ? func_802D208C(?);
// ? func_802D23F4(?);
// ? func_802D2668(?);
// ? func_802D27B0(?);
// ? func_802D290C(?);
// ? func_802D2A58(?);
// ? func_802D2BE0(?);
// ? func_802D2D2C(?);
// ? func_802D2EF0(?);
// ? func_802D30C4(?);
// ? func_802D31B4(?);
// ? func_802D33F8(?);
// ? func_802D3590(?);
// ? func_802D3848(?);
// ? func_802D39F8(?);
// ? func_802D3BE0(?);
// ? func_802D3C9C(?);
// ? func_802D3D94(?);
// ? func_802D3FA0(?);
// ? func_802D4070(?);
// ? func_802D4168(?);
// ? func_802D43EC(?);
// ? func_802D4494(?);
// ? func_802D4510(?);
// ? func_802D48B0(?);
// ? func_802D4990(?);
// ? func_802D4B54(?);
// ? func_802D4C74(?);
// ? func_802D4F78(?);
// ? func_802D5124(?);
// ? func_802D51C8(?);
// ? func_802D533C(?);
// ? func_802D5560(?);
// ? func_802D5710(?);
// ? func_802D58EC(?);
// ? func_802D5B14(?);
// ? func_802D5C00(?);
// ? func_802D5E4C(?);
// ? func_802D61C8(?);
// ? func_802D6310(?);
// ? func_802D64B8(?);
// ? func_802D6674(?);
// ? func_802D68FC(?);
// ? func_802D6A54(?);
// ? func_802D6DDC(?);
// ? func_802D70A4(?);
// ? func_802D718C(?);
// ? func_802D747C(?);
// ? func_802D758C(?);
// ? func_802D775C(?);
// ? func_802D813C(?);
// ? func_802D81FC(?);
// ? func_802D82C4(?);
// ? func_802D839C(?);
// ? func_802D848C(?);
// ? func_802D8554(?);
void func_802D8618(s32, Vec *, s32, s32);
// ? func_802D8894(?);
// ? func_802D8918(?);
// ? func_802D9168(?);
// ? func_802D9714(?);
// ? func_802D98AC(?);
// ? func_802D98C4(?);
// ? func_802D9A2C(?);
// ? func_802DA104(?);
// ? func_802DA4C0(?);
// ? func_802DA960(?);
// ? func_802DAA10(?);
// ? func_802DAD18(?);
// ? func_802DAE6C(?);
// ? func_802DB074(?);
// ? func_802DB398(?);
// ? func_802DB5F0(?);
// ? func_802DB74C(?);
// ? func_802DB8A8(?);
// ? func_802DB9F4(?);
// ? func_802DBA68(?);
// ? func_802DBAF0(?);
// ? func_802DC0AC(?);
// ? func_802DC310(?);
// ? func_802DC3DC(?);
// ? func_802DC4BC(?);
// ? func_802DC990(?);
// ? func_802DCB9C(?);
// ? func_802DCCCC(?);
// ? func_802DCE00(?);
// ? func_802DCFBC(?);
// ? func_802DD290(?);
// ? func_802DD2DC(?);
// ? func_802DD4A8(?);
// ? func_802DD78C(?);
// ? func_802DD7F0(?);
// ? func_802DDA84(?);
// ? func_802DDB38(?);
// ? func_802DDBE8(?);
// ? func_802DDD38(?);
// ? func_802DDEB4(?);
// ? func_802DE040(?);
// ? func_802DE0F0(?);
// ? func_802DE320(?);
// ? func_802DE434(?);
// ? func_802DE4FC(?);
// ? func_802DE648(?);
// ? func_802DE6F0(?);
// ? func_802DEC80(?);
// ? func_802DEEF4(?);
// ? func_802DF230(?);
// ? func_802DF9F8(?);
// ? func_802DFC34(?);
// ? func_802DFC58(?);
// ? func_802DFC90(?);
// ? func_802DFCB0(?);
// ? func_802DFD60(?);
// ? func_802DFE40(?);
// ? func_802DFF14(?);
// ? func_802DFFA0(?);
// ? func_802DFFB8(?);
// ? func_802E0100(?);
// ? func_802E0488(?);
// ? func_802E0678(?);
// ? func_802E0734(?);
// ? func_802E0D9C(?);
// ? func_802E11E0(?);
// ? func_802E15B0(?);
// ? func_802E1648(?);
// ? func_802E1694(?);
// ? func_802E16F8(?);
// ? func_802E18B4(?);
// ? func_802E1930(?);
// ? func_802E1C4C(?);
// ? func_802E1C84(?);
// ? func_802E1E94(?);
// ? func_802E20D8(?);
// ? func_802E2330(?);
// ? func_802E269C(?);
// ? func_802E27B4(?);
// ? func_802E2BC0(?);
// ? func_802E2C80(?);
// ? func_802E2DF4(?);
// ? func_802E2E30(?);
// ? func_802E3098(?);
// ? func_802E3400(?);
// ? func_802E3528(?);
// ? func_802E35CC(?);
// ? func_802E37A4(?);
// ? func_802E3AC8(?);
// ? func_802E3DA0(?);
// ? func_802E3ED0(?);
// ? func_802E40A4(?);
// ? func_802E4190(?);
// ? func_802E436C(?);
// ? func_802E4464(?);
// ? func_802E48B4(?);
// ? func_802E4980(?);
// ? func_802E4DB4(?);
// ? func_802E4E6C(?);
// ? func_802E503C(?);
// ? func_802E52E0(?);
// ? func_802E53C8(?);
// ? func_802E57D4(?);
// ? func_802E58A0(?);
// ? func_802E5944(?);
// ? func_802E595C(?);
// ? func_802E5AC4(?);
// ? func_802E5EF4(?);
// ? func_802E5F00(?);
// ? func_802E5F8C(?);
// ? func_802E609C(?);
// ? func_802E614C(?);
// ? func_802E61C4(?);
// ? func_802E628C(?);
// ? func_802E6380(?);
// ? func_802E657C(?);
// ? func_802E6658(?);
// ? func_802E66A0(?);
// ? func_802E6888(?);
// ? func_802E6AEC(?);
// ? func_802E70BC(?);
// ? func_802E72E0(?);
// ? func_802E7654(?);
// ? func_802E7A4C(?);
// ? func_802E883C(?);
// ? func_802E890C(?);
// ? func_802E89D0(?);
// ? func_802E8ADC(?);
// ? func_802E9038(?);
// ? func_802E9308(?);
// ? func_802E93C8(?);
// ? func_802E9494(?);
// ? func_802E9738(?);
// ? func_802E98E0(?);
// ? func_802E9A00(?);
// ? func_802E9BA0(?);
// ? func_802E9D50(?);
// ? func_802EA2A0(?);
// ? func_802EA334(?);
// ? func_802EA478(?);
// ? func_802EA674(?);
// ? func_802EA6F4(?);
// ? func_802EA804(?);
// ? func_802EA988(?);
// ? func_802EA9FC(?);
// ? func_802EAAEC(?);
// ? func_802EAC8C(?);
// ? func_802EADD8(?);
// ? func_802EAE80(?);
// ? func_802EAF28(?);
// ? func_802EAF34(?);
// ? func_802EB268(?);
// ? func_802EB6DC(?);
// ? func_802EB870(?);
// ? func_802EBA00(?);
// ? func_802EBD14(?);
// ? func_802EBE5C(?);
// ? func_802EBFAC(?);
// ? func_802EC18C(?);
// ? func_802EC1F4(?);
// ? func_802EC35C(?);
// ? func_802EC3F4(?);
// ? func_802EC4D0(?);
// ? func_802EC604(?);
// ? func_802EC69C(?);
// ? func_802EC830(?);
// ? func_802EC870(?);
// ? func_802EC9E8(?);
// ? func_802ECA70(?);
// ? func_802ECC8C(?);
// ? func_802ECC98(?);
// ? func_802ECCA4(?);
// ? func_802ECD1C(?);
// ? func_802ECD3C(?);
// ? func_802ECEB0(?);
// ? func_802ECFE0(?);
// ? func_802ED0D0(?);
// ? func_802ED25C(?);
// ? func_802ED4F8(?);
// ? func_802ED774(?);
// ? func_802ED8BC(?);
// ? func_802EE200(?);
// ? func_802EE374(?);
// ? func_802EE6A0(?);
// ? func_802EEFA8(?);
// ? func_802EF098(?);
// ? func_802EF320(?);
// ? func_802EF548(?);
// ? func_802EFA44(?);
// ? func_802EFB0C(?);
// ? func_802EFC08(?);
// ? func_802EFCC0(?);
// ? func_802EFD84(?);
// ? func_802EFE28(?);
u32 func_802F0340(struct _HSD_GObj *, Vec *, Vec *, u32, u32, f32);
void func_802F046C(s32);
// ? func_802F0484(?);
// ? func_802F063C(?);
void func_802F0AE0(struct _HSD_GObj *, Vec *, Vec *, s32, s32, f32, f32, f32);
// ? func_802F0BE8(?);
// ? func_802F0D2C(?);
// ? func_802F0F6C(?);
// ? func_802F10F8(?);
// ? func_802F1344(?);
// ? func_802F1588(?);
// ? func_802F2014(?);
// ? func_802F2020(?);
// ? func_802F202C(?);
// ? func_802F2094(?);
// ? func_802F23AC(?);
// ? func_802F23EC(?);
// ? func_802F2810(?);
// ? func_802F28C8(?);
// ? func_802F295C(?);
// ? func_802F2A58(?);
// ? func_802F2BFC(?);
// ? func_802F2CE0(?);
// ? func_802F2D98(?);
// ? func_802F2E7C(?);
// ? func_802F2F34(?);
// ? func_802F3020(?);
// ? func_802F3290(?);
// ? func_802F3394(?);
// ? func_802F33CC(?);
// ? func_802F3404(?);
// ? func_802F3414(?);
// ? func_802F3424(?);
// ? func_802F343C(?);
// ? func_802F3690(?);
// ? func_802F3698(?);
// ? func_802F36A4(?);
// ? func_802F36B0(?);
// ? func_802F370C(?);
// ? func_802F390C(?);
// ? func_802F3A64(?);
// ? func_802F3AE8(?);
// ? func_802F405C(?);
// ? func_802F40B8(?);
// ? func_802F4144(?);
// ? func_802F4248(?);
// ? func_802F446C(?);
// ? func_802F480C(?);
// ? func_802F483C(?);
// ? func_802F4898(?);
// ? func_802F4910(?);
// ? func_802F491C(?);
// ? func_802F4B84(?);
// ? func_802F4EDC(?);
// ? func_802F5B48(?);
// ? func_802F5EC0(?);
// ? func_802F6194(?);
// ? func_802F61FC(?);
// ? func_802F6508(?);
// ? func_802F665C(?);
// ? func_802F66A4(?);
// ? func_802F6788(?);
// ? func_802F6804(?);
// ? func_802F6898(?);
// ? func_802F68F0(?);
// ? func_802F6948(?);
// ? func_802F69C0(?);
// ? func_802F6AF8(?);
// ? func_802F6C04(?);
// ? func_802F6D10(?);
// ? func_802F6E1C(?);
// ? func_802F6E3C(?);
// ? func_802F6EA4(?);
// ? func_802F7034(?);
// ? func_802F7134(?);
// ? func_802F7220(?);
// ? func_802F7288(?);
// ? func_802F77F8(?);
// ? func_802F7AF8(?);
// ? func_802F7BB4(?);
// ? func_802F7C30(?);
// ? func_802F7D08(?);
// ? func_802F7E24(?);
// ? func_802F7E7C(?);
// ? func_802F7EFC(?);
// ? func_802F8298(?);
// ? func_802F89F8(?);
// ? func_802F96D0(?);
// ? func_802F98E8(?);
// ? func_802F9F48(?);
// ? func_802FA118(?);
// ? func_802FA2D0(?);
// ? func_802FA5BC(?);
// ? func_802FAEC4(?);
// ? func_802FB390(?);
// ? func_802FB41C(?);
// ? func_802FB484(?);
// ? func_802FB4EC(?);
// ? func_802FB650(?);
// ? func_802FB6AC(?);
s32 func_802FB6E8(u8);
// ? func_802FB73C(?);
// ? func_802FC3C0(?);
// ? func_802FC618(?);
// ? func_802FC750(?);
// ? func_802FC7C0(?);
// ? func_802FC870(?);
// ? func_802FC8E8(?);
// ? func_802FC940(?);
s32 func_802FC998();
// ? func_802FC9B4(?);
// ? func_802FCBA0(?);
// ? func_802FCF38(?);
// ? func_802FD28C(?);
// ? func_802FD404(?);
// ? func_802FD428(?);
// ? func_802FD450(?);
// ? func_802FD45C(?);
// ? func_802FD468(?);
// ? func_802FD4C8(?);
// ? func_802FD604(?);
// ? func_802FD65C(?);
// ? func_802FD668(?);
// ? func_802FD674(?);
// ? func_802FD704(?);
// ? func_802FD708(?);
// ? func_802FD8A0(?);
// ? func_802FD8C4(?);
// ? func_802FD8E8(?);
// ? func_802FD90C(?);
// ? func_802FD910(?);
// ? func_802FD91C(?);
// ? func_802FD928(?);
// ? func_802FD9D8(?);
// ? func_802FE260(?);
// ? func_802FE390(?);
// ? func_802FE3F8(?);
// ? func_802FE6A8(?);
// ? func_802FE8CC(?);
// ? func_802FE918(?);
// ? func_802FEFAC(?);
// ? func_802FF128(?);
// ? func_802FF190(?);
// ? func_802FF1B4(?);
// ? func_802FF364(?);
// ? func_802FF498(?);
// ? func_802FF4FC(?);
// ? func_802FF570(?);
// ? func_802FF620(?);
// ? func_802FF6A0(?);
// ? func_802FF710(?);
// ? func_802FF78C(?);
// ? func_802FF7DC(?);
// ? func_802FF884(?);
// ? func_802FFB58(?);
// ? func_802FFCD0(?);
// ? func_802FFD94(?);
// ? func_802FFEE0(?);
// ? func_802FFF2C(?);
// ? func_80301BA8(?);
// ? func_80301C64(?);
// ? func_80301E44(?);
// ? func_80301E78(?);
// ? func_80301FB4(?);
// ? func_80301FBC(?);
// ? func_803020FC(?);
// ? func_80302164(?);
// ? func_803022BC(?);
// ? func_8030265C(?);
// ? func_80302708(?);
// ? func_803027A0(?);
// ? func_80302810(?);
// ? func_80302834(?);
// ? func_803029B4(?);
// ? func_80302A3C(?);
// ? func_80302A88(?);
// ? func_80302AB0(?);
// ? func_80302AC0(?);
// ? func_80302AD0(?);
// ? func_80302AE0(?);
// ? func_80302AF0(?);
// ? func_80302B00(?);
// ? func_80302B10(?);
// ? func_80302B1C(?);
// ? func_80302B48(?);
// ? func_80302B64(?);
// ? func_80302B90(?);
// ? func_80302BB0(?);
// ? func_80302BE4(?);
// ? func_80302D0C(?);
// ? func_80302D4C(?);
// ? func_80302DF0(?);
// ? func_80302DF8(?);
// ? func_80302E00(?);
// ? func_80302EA4(?);
// ? func_80302FFC(?);
// ? func_80303444(?);
// ? func_80303720(?);
// ? func_803039A4(?);
// ? func_80303AC4(?);
// ? func_80303FD4(?);
// ? func_80304138(?);
// ? func_80304168(?);
// ? func_80304210(?);
// ? func_80304334(?);
// ? func_80304344(?);
// ? func_80304470(?);
// ? func_803045A0(?);
// ? func_80304690(?);
// ? func_80304780(?);
// ? func_80304870(?);
// ? func_803048C0(?);
// ? func_80304924(?);
// ? func_80304988(?);
// ? func_803049F4(?);
// ? func_80304A58(?);
// ? func_80304B0C(?);
// ? func_80304B94(?);
// ? func_80304CC8(?);
// ? func_80304D30(?);
// ? func_80305058(?);
// ? func_803053C4(?);
// ? Trophy_SetUnlockState(?);
// ? func_80305918(?);
// ? func_80305B88(?);
// ? func_80305C44(?);
// ? func_80305D00(?);
// ? func_80305DB0(?);
// ? func_80305EB4(?);
// ? func_80305FB8(?);
// ? func_803060BC(?);
// ? func_803062BC(?);
// ? func_803062EC(?);
// ? func_803063D4(?);
// ? func_803064B8(?);
// ? func_8030663C(?);
// ? func_803067BC(?);
// ? func_80306A48(?);
// ? func_80306B18(?);
// ? func_80306D14(?);
// ? func_80306D70(?);
// ? func_80306EEC(?);
// ? func_80307018(?);
// ? func_8030715C(?);
// ? func_80307470(?);
// ? func_803075E8(?);
// ? func_80307828(?);
// ? func_803078E4(?);
// ? func_80307BA0(?);
// ? func_80307F64(?);
// ? func_8030813C(?);
// ? func_80308250(?);
// ? func_803082F8(?);
// ? func_80308328(?);
// ? func_80308354(?);
// ? func_803083D8(?);
// ? func_803084A0(?);
// ? func_803087F4(?);
// ? func_80308DC8(?);
// ? func_80308F04(?);
// ? func_80309338(?);
// ? func_8030FA50(?);
// ? func_8030FE48(?);
// ? func_803102C4(?);
// ? func_803102D0(?);
// ? func_80310324(?);
// ? func_80310660(?);
// ? func_803109A0(?);
// ? func_803114E8(?);
// ? func_80311680(?);
// ? func_80311788(?);
// ? func_80311960(?);
// ? func_80311F5C(?);
// ? func_8031234C(?);
// ? func_803124BC(?);
// ? func_8031263C(?);
// ? func_803127D4(?);
// ? func_80312834(?);
// ? func_80312904(?);
// ? func_80312BAC(?);
// ? func_80312E88(?);
// ? func_8031305C(?);
// ? func_80313358(?);
// ? func_80313464(?);
// ? func_80313508(?);
// ? func_80313774(?);
// ? func_8031457C(?);
// ? func_803147C4(?);
// ? func_803148E4(?);
// ? func_80314AA8(?);
// ? func_80314B54(?);
// ? func_803153EC(?);
// ? func_80316420(?);
// ? func_8031753C(?);
// ? func_80317A60(?);
// ? func_803181BC(?);
// ? func_8031830C(?);
// ? func_80318714(?);
// ? func_80318B1C(?);
// ? func_80318CB4(?);
// ? func_80319540(?);
// ? func_80319994(?);
// ? func_80319EF0(?);
// ? func_8031B1FC(?);
// ? func_8031B328(?);
// ? func_8031B850(?);
// ? func_8031B9DC(?);
// ? func_8031BA78(?);
// ? func_8031BB34(?);
// ? func_8031BB94(?);
// ? func_8031BBF4(?);
// ? func_8031BC54(?);
// ? func_8031BF34(?);
// ? func_8031C1D0(?);
// ? func_8031C2CC(?);
// ? func_8031C2EC(?);
// ? func_8031C354(?);
// ? func_8031C454(?);
// ? func_8031C5E4(?);
// ? func_8031C8B8(?);
// ? func_8031C99C(?);
// ? func_8031C9B4(?);
// ? func_8031CA04(?);
// ? func_8031CAAC(?);
// ? func_8031CB00(?);
// ? func_8031D020(?);
// ? func_8031D030(?);
// ? func_8031D708(?);
// ? func_8031D9E4(?);
// ? func_8031D9F8(?);
// ? func_8031E110(?);
// ? func_8031E124(?);
// ? func_8031E9B8(?);
// ? func_8031EE84(?);
// ? func_8031F294(?);
// ? func_8031F980(?);
// ? func_8031F9D8(?);
// ? func_803204B0(?);
// ? func_80320508(?);
// ? func_803205F4(?);
// ? func_803207C4(?);
// ? func_80321178(?);
// ? func_80321900(?);
// ? func_80321950(?);
// ? func_80321A00(?);
// ? func_80321AF4(?);
// ? func_80321BF8(?);
// ? func_80321C28(?);
// ? func_80321C70(?);
// ? func_80321CA4(?);
// ? func_80321CE8(?);
// ? func_80321D30(?);
// ? func_80321EBC(?);
// ? func_8032201C(?);
// ? func_80322178(?);
s32 func_80322258(f32 x);
// ? func_80322298(?);
// ? func_803222EC(?);
// ? func_80322314(?);
// ? func_8032233C(?);
// ? func_803224DC(?);
// ? func_80322598(?);
// ? __va_arg(?);
// ? func_80322714(?);
// ? func_8032275C(?);
// ? func_80322790(?);
// ? func_803227CC(?);
// ? func_80322840(?);
// ? func_803228C0(?);
// ? func_8032291C(?);
// ? func_80322A08(?);
// ? func_80322B40(?);
// ? func_80322C24(?);
// ? func_80322D30(?);
// ? func_80322D54(?);
// ? func_80322D78(?);
void __cvt_sll_flt(void);
void __cvt_dbl_usll(void);
// ? func_80322F20(?);
// ? lbl_80322F9C(?);
// ? func_803230A8(?);
// ? func_8032345C(?);
// ? func_80323528(?);
// ? func_8032355C(?);
// ? func_80323560(?);
// ? func_80323588(?);
// ? func_803235B0(?);
// ? func_8032388C(?);
// ? memcmp(?);
// ? func_8032390C(?);
// ? func_80323938(?);
// ? func_80323A14(?);
// ? func_80323AC4(?);
// ? func_80323B88(?);
// ? func_80323C34(?);
// ? func_80323CF0(?);
// ? sprintf(?);
// ? func_80323DC8(?);
// ? func_80323E38(?);
// ? func_80323EB4(?);
// ? func_80324044(?);
// ? func_80324674(?);
// ? func_80324CAC(?);
// ? func_80324DE0(?);
// ? func_803250C0(?);
// ? func_803252E4(?);
// ? func_803257BC(?);
// ? func_803257C4(?);
int __StringRead(void *, int, int);
char *strchr(const char *, int);
int strncmp(const char *, const char *, unsigned long);
int strcmp(const char *, const char *);
char *strncpy(char *__restrict, const char *__restrict, unsigned long);
char *strcpy(char *__restrict, const char *__restrict);
unsigned long strlen(const char *);
// ? func_80325B24(?);
// ? func_80325BD0(?);
// ? func_80326098(?);
// ? func_80326118(?);
// ? func_803261B4(?);
f32 tanf(f32);
// ? func_80326200(?);
// ? func_80326220(?);
f32 cosf(f32);
f32 sinf(f32);
// ? func_803265A8(?);
// ? TRKHandleRequestEvent(?);
// ? func_8032673C(?);
// ? func_8032675C(?);
// ? func_80326788(?);
// ? TRKInitializeEventQueue(?);
// ? func_803268D8(?);
// ? func_803268FC(?);
// ? func_803269BC(?);
// ? func_80326A9C(?);
// ? func_80326AB4(?);
// ? TRKInitializeNub(?);
// ? func_80326BAC(?);
// ? func_80326BD0(?);
// ? func_80326BF8(?);
// ? func_80326C6C(?);
// ? func_80326C94(?);
// ? func_80326C9C(?);
// ? func_80326D14(?);
// ? func_80326DB0(?);
// ? func_80326DDC(?);
// ? func_80326E44(?);
// ? func_80326E84(?);
// ? func_80326EB4(?);
// ? func_80326F58(?);
// ? func_80326FE4(?);
// ? func_80327038(?);
// ? func_8032709C(?);
// ? func_80327124(?);
// ? func_8032718C(?);
// ? func_80327208(?);
// ? func_8032722C(?);
// ? func_803272AC(?);
// ? func_8032733C(?);
// ? func_803273EC(?);
// ? func_80327460(?);
// ? TRKTestForPacket(?);
// ? func_803275AC(?);
// ? func_80327628(?);
// ? func_80327678(?);
// ? func_8032769C(?);
// ? func_803276A4(?);
// ? TRKInitializeDispatcher(?);
// ? func_803276BC(?);
// ? TRKMessageIntoReply(?);
// ? func_803277D8(?);
// ? func_80327828(?);
// ? func_803289E4(?);
// ? func_80328CBC(?);
// ? func_80328E60(?);
// ? func_80328E68(?);
// ? func_80328E70(?);
// ? func_80328E78(?);
// ? func_80328F50(?);
// ? func_80328F88(?);
// ? func_8032904C(?);
// ? func_80329054(?);
// ? func_8032905C(?);
// ? func_80329194(?);
// ? func_803291D0(?);
// ? func_80329334(?);
// ? func_80329380(?);
// ? func_8032947C(?);
// ? func_803295C4(?);
// ? func_8032973C(?);
// ? func_803298B8(?);
// ? func_803298E0(?);
// ? func_80329984(?);
// ? lbl_803299EC(?);
// ? func_80329CCC(?);
// ? func_80329DE4(?);
// ? func_80329E48(?);
// ? func_80329ED8(?);
// ? func_80329F60(?);
// ? func_80329F9C(?);
// ? func_8032A020(?);
// ? func_8032A090(?);
// ? func_8032A0F8(?);
// ? func_8032A13C(?);
// ? func_8032A184(?);
// ? func_8032A194(?);
// ? func_8032A284(?);
// ? func_8032A2C0(?);
// ? func_8032A2D0(?);
// ? func_8032A2E0(?);
// ? func_8032A308(?);
// ? func_8032A3B8(?);
// ? func_8032A430(?);
// ? func_8032A5B0(?);
// ? func_8032A618(?);
// ? InitMetroTRK(?);
// ? func_8032A6BC(?);
// ? func_8032A6DC(?);
// ? func_8032A724(?);
// ? func_8032A784(?);
// ? func_8032A818(?);
// ? TRKSaveExtended1Block(?);
// ? func_8032AA20(?);
// ? func_8032ABD8(?);
// ? TRK_main(?);
// ? func_8032AC28(?);
// ? func_8032ACE8(?);
// ? func_8032ADD0(?);
// ? TRKInitializeIntDrivenUART(?);
// ? func_8032AE14(?);
// ? func_8032AE44(?);
// ? func_8032AE74(?);
// ? func_8032AEB8(?);
// ? func_8032AEFC(?);
// ? func_8032AF2C(?);
// ? func_8032AF5C(?);
// ? TRKTargetContinue(?);
// ? func_8032AFDC(?);
// ? func_8032AFE4(?);
// ? DBGReadMailbox(?);
// ? DBGRead(?);
// ? DBGWrite(?);
// ? func_8032B4E0(?);
// ? func_8032BA64(?);
// ? ExtHandler(?);
// ? func_8032BBC4(?);
// ? func_8032BC8C(?);
// ? func_8032BF20(?);
// ? func_8032C050(?);
// ? func_8032C144(?);
// ? func_8032C288(?);
// ? func_8032C3CC(?);
// ? func_8032C4F4(?);
// ? func_8032C61C(?);
// ? callbackEventStream(?);
// ? func_8032C7D0(?);
// ? func_8032C848(?);
// ? func_8032C880(?);
// ? func_8032CA60(?);
// ? func_8032CB7C(?);
// ? func_8032CC80(?);
// ? func_8032CC88(?);
// ? func_8032CD40(?);
// ? func_8032CE40(?);
// ? func_8032CF48(?);
// ? func_8032CFD8(?);
// ? func_8032D2B8(?);
// ? func_8032D5E8(?);
// ? func_8032D88C(?);
// ? func_8032D954(?);
// ? func_8032D9AC(?);
// ? func_8032DA3C(?);
// ? func_8032DA44(?);
// ? func_8032DB14(?);
// ? func_8032DBD4(?);
// ? func_8032DCB0(?);
// ? func_8032DDC0(?);
// ? func_8032DFDC(?);
// ? func_8032E1B8(?);
// ? func_8032E504(?);
// ? func_8032E868(?);
// ? fioMccChannelEvent(?);
// ? func_8032EB44(?);
// ? func_8032EC00(?);
// ? func_8032EC6C(?);
// ? func_8032ED8C(?);
// ? func_8032EE94(?);
// ? func_8032EF48(?);
// ? func_8032F020(?);
// ? func_8032F0E4(?);
// ? func_8032F228(?);
// ? func_8032F390(?);
// ? func_8032F39C(?);
// ? func_8032F468(?);
// ? __THPPrepBitStream(?);
// ? JPEGGetFileInfo(?);
// ? func_8032FD40(?);
// ? func_8032FDB8(?);
// ? func_803300E0(?);
// ? func_80330158(?);
// ? func_803302EC(?);
// ? func_803303C4(?);
// ? func_803305CC(?);
// ? func_80330970(?);
// ? func_80330B40(?);
// ? func_80330C98(?);
// ? func_80330E30(?);
// ? func_80330F10(?);
// ? func_803310CC(?);
// ? func_803312F4(?);
// ? func_80331340(?);
// ? func_803313D0(?);
// ? func_80331470(?);
// ? func_80332E80(?);
// ? func_80334880(?);
// ? func_80334F00(?);
// ? func_803355B0(?);
// ? func_80335C58(?);
// ? DBInit(?);
// ? DBIsDebuggerPresent(?);
// ? __DBIsExceptionMarked(?);
// ? DBPrintf(?);
// ? DSPCheckMailToDSP(?);
// ? DSPCheckMailFromDSP(?);
// ? DSPReadMailFromDSP(?);
// ? DSPSendMailToDSP(?);
// ? DSPInit(?);
// ? DSPCheckInit(?);
// ? DSPAddTask(?);
// ? DSPAssertTask(?);
// void __DSP_debug_printf(const char*, ...);
// ? __DSPHandler(?);
// ? __DSP_exec_task(?);
// ? __DSP_boot_task(?);
// ? __DSP_insert_task(?);
// ? __DSP_remove_task(?);
// ? __DVDInitWA(?);
// ? func_80336F08(?);
// ? func_80337018(?);
// ? func_80337098(?);
// ? func_80337330(?);
// ? func_803373C4(?);
// ? func_803373F0(?);
// ? func_80337494(?);
// ? func_80337520(?);
// ? func_803375AC(?);
// ? func_80337648(?);
// ? DVDLowRequestAudioStatus(?);
// ? func_8033776C(?);
// ? func_80337808(?);
// ? DVDLowBreak(?);
// ? DVDLowClearCallback(?);
// ? __DVDLowSetWAType(?);
// ? __DVDFSInit(?);
// ? DVDConvertPathToEntrynum(?);
// ? DVDFastOpen(?);
// ? func_80337CD4(?);
// ? DVDReadAsyncPrio(?);
// ? DVDInit(?);
// ? func_80337FB8(?);
// ? func_80338060(?);
// ? func_803380FC(?);
// ? func_80338124(?);
// ? func_8033856C(?);
// ? func_803386EC(?);
// ? func_803387D0(?);
// ? func_80338804(?);
// ? func_80338B34(?);
// ? func_80338C00(?);
// ? func_80338CA0(?);
// ? stateReady(?);
// ? stateBusy(?);
// ? DVDReadAbsAsyncPrio(?);
// ? DVDReadAbsAsyncForBS(?);
// ? DVDReadDiskID(?);
// ? DVDReset(?);
// ? DVDGetDriveStatus(?);
// ? func_80339BF8(?);
// ? func_80339C08(?);
// ? DVDCancel(?);
// ? func_80339F48(?);
// ? func_80339F50(?);
// ? func_8033A034(?);
// ? __DVDClearWaitingQueue(?);
// ? func_8033A188(?);
// ? func_8033A1F0(?);
// ? func_8033A290(?);
// ? func_8033A2E8(?);
// ? __DVDStoreErrorCode(?);
// ? cb(?);
// ? __fstLoad(?);

#pragma region "asm/dolphin/mtx/mtx.s"
void PSMTXIdentity(Mtx m);
void PSMTXCopy(Mtx src, Mtx dst);
void PSMTXConcat(Mtx, Mtx, Mtx);
void PSMTXTranspose(Mtx src, Mtx xPose);
u32 PSMTXInverse(const Mtx src, Mtx inv);
void PSMTXRotRad(Mtx m, u8 axis, f32 rad);
void PSMTXRotTrig(Mtx m, u8 axis, f32 sin, f32 cos);
void PSMTXRotAxisRad(Mtx m, const Vec *axis, f32 rad);
void PSMTXTrans(Mtx m, f32 x_trans, f32 y_trans, f32 z_trans);
void PSMTXScale(Mtx m, f32 x_scale, f32 y_scale, f32 z_scale);
void PSMTXQuat(Mtx m, const Quaternion *q);
#pragma endregion

// ? C_MTXLookAt(?);
// ? C_MTXLightFrustum(?);
// ? C_MTXLightPerspective(?);
// ? C_MTXLightOrtho(?);
void PSMTXMUltiVec(Mtx, Vec *, Vec *);
// ? PSMTXMultVecSR(?);
// ? C_MTXFrustum(?);
// ? C_MTXPerspective(?);
// ? C_MTXOrtho(?);

#pragma region "asm/dolphin/mtx/vec.s"
void PSVECAdd(Vec *a, Vec *b, Vec *result);
void PSVECSubtract(Vec *a, Vec *b, Vec *result);
void PSVECScale(Vec *src, Vec *dst, f32 scale);
void PSVECNormalize(Vec *src, Vec *unit);
f32 PSVECMag(Vec *v);
f32 PSVECDotProduct(Vec *a, Vec *b);
void PSVECCrossProduct(Vec *a, Vec *b, Vec *result);
#pragma endregion

// ? OSGetConsoleType(?);
// ? ClearArena(?);
// ? OSInit(?);
// ? OSExceptionInit(?);
// ? __OSSetExceptionHandler(?);
// ? __OSGetExceptionHandler(?);
// ? __OSPSInit(?);
// ? __OSGetDIConfig(?);
// ? OSInitAlarm(?);
// ? OSCreateAlarm(?);
// ? InsertAlarm(?);
// ? OSSetAlarm(?);
// ? func_80343A30(?);
// ? OSCancelAlarm(?);
// ? DLInsert(?);
void *OSAllocFromHeap(int, u32);
// ? OSFreeToHeap(?);
// ? OSSetCurrentHeap(?);
// ? OSInitAlloc(?);
// ? OSCreateHeap(?);
// ? OSDestroyHeap(?);
// ? OSCheckHeap(?);
// ? OSGetArenaHi(?);
// ? OSGetArenaLo(?);
// ? OSSetArenaHi(?);
// ? OSSetArenaLo(?);
// ? OSAllocFromArenaLo(?);
// ? OSAllocFromArenaHi(?);
// ? __OSInitAudioSystem(?);
// ? __OSStopAudioSystem(?);
// ? DCEnable(?);
// ? DCInvalidateRange(?);
// ? DCStoreRange(?);
// ? DCFlushRangeNoSync(?);
// ? DCZeroRange(?);
// ? ICInvalidateRange(?);
// ? ICFlashInvalidate(?);
// ? ICEnable(?);
// ? __LCEnable(?);
// ? LCEnable(?);
// ? LCDisable(?);
// ? LCStoreBlocks(?);
// ? LCStoreData(?);
// ? LCQueueWait(?);
// ? L2GlobalInvalidate(?);
// ? __OSCacheInit(?);
// ? OSLoadFPUContext(?);
// ? __OSSaveFPUContext(?);
// ? func_8034507C(?);
// ? func_80345084(?);
// ? OSSetCurrentContext(?);
// ? OSGetCurrentContext(?);
// ? OSLoadContext(?);
// ? OSGetStackPointer(?);
// ? OSInitContext(?);
// ? OSDumpContext(?);
// ? __OSContextInit(?);
void OSReport(char *, ...);
// ? OSPanic(?);
// ? OSSetErrorHandler(?);
// ? __OSUnhandledException(?);
// ? SetExiInterruptMask(?);
// ? EXIImm(?);
// ? EXIImmEx(?);
// ? EXIDma(?);
// ? EXISync(?);
// ? EXIClearInterrupts(?);
// ? EXISetExiCallback(?);
// ? __EXIProbe(?);
// ? EXIProbe(?);
// ? EXIProbeEx(?);
// ? EXIAttach(?);
// ? EXIDetach(?);
// ? EXISelect(?);
// ? EXIDeselect(?);
// ? EXIInit(?);
// ? EXILock(?);
// ? EXIUnlock(?);
// ? EXIGetState(?);
// ? EXIGetID(?);
// ? OSGetFontEncode(?);
BOOL OSDisableInterrupts();
// ? OSEnableInterrupts(?);
void OSRestoreInterrupts(BOOL);
void __OSSetInterruptHandler(s32, void (*)());
// ? __OSGetInterruptHandler(?);
// ? __OSInterruptInit(?);
// ? SetInterruptMask(?);
// ? __OSMaskInterrupts(?);
void __OSUnmaskInterrupts(s32);
// ? __OSModuleInit(?);
// ? OSGetCurrentContext(?);
u32 OSGetConsoleSimulatedMemSize();
// ? RealMode(?);
// ? __OSInitMemoryProtection(?);
// ? __OSUnlockAllMutex(?);
// ? __OSCheckMutex(?);
// ? __OSCheckDeadLock(?);
// ? __OSCheckMutexes(?);
// ? Run(?);
// ? __OSReboot(?);
// ? OSRegisterResetFunction(?);
// ? Reset(?);
// ? __OSDoHotReset(?);
// ? OSResetSystem(?);
// ? OSGetResetCode(?);
// ? __OSResetSWInterruptHandler(?);
// ? OSGetResetButtonState(?);
// ? OSGetResetSwitchState(?);
// ? WriteSramCallback(?);
// ? WriteSram(?);
// ? __OSInitSram(?);
// ? __OSLockSram(?);
// ? __OSLockSramEx(?);
// ? UnlockSram(?);
// ? __OSUnlockSram(?);
// ? __OSUnlockSramEx(?);
// ? __OSSyncSram(?);
// ? OSGetSoundMode(?);
// ? OSSetSoundMode(?);
// ? OSGetProgressiveMode(?);
// ? OSSetProgressiveMode(?);
// ? OSGetWirelessID(?);
// ? OSSetWirelessID(?);
// ? SIBusy(?);
// ? SIIsChanBusy(?);
// ? CompleteTransfer(?);
// ? SIEnablePollingInterrupt(?);
// ? SIRegisterPollingHandler(?);
// ? SIUnregisterPollingHandler(?);
// ? SIInit(?);
// ? __SITransfer(?);
// ? SIGetStatus(?);
// ? SISetCommand(?);
// ? SITransferCommands(?);
// ? SISetXY(?);
// ? SIEnablePolling(?);
// ? SIDisablePolling(?);
// ? SIGetResponseRaw(?);
// ? SIGetResponse(?);
// ? SITransfer(?);
// ? SIGetType(?);
// ? SIGetTypeAsync(?);
// ? SystemCallVector(?);
// ? __OSInitSystemCall(?);
// ? __OSThreadInit(?);
// ? OSInitThreadQueue(?);
// ? OSGetCurrentContext(?);
// ? OSDisableScheduler(?);
// ? func_8034AD88(?);
// ? UnsetRun(?);
// ? __OSGetEffectivePriority(?);
// ? SetEffectivePriority(?);
// ? __OSReschedule(?);
// ? OSCreateThread(?);
// ? OSCancelThread(?);
// ? OSSleepThread(?);
// ? CheckThreadQueue(?);
// ? OSCheckActiveThreads(?);
// ? OSGetTime(?);
// ? OSGetTick(?);
// ? __OSGetSystemTime(?);
// ? __OSTimeToSystemTime(?);
// ? GetDates(?);
// ? OSTicksToCalendarTime(?);
// ? InitializeUART(?);
// ? func_8034C8B4(?);
// ? unknown(?);
// ? __init_user(?);
// ? func_8034CADC(?);
// ? func_8034CB30(?);
// ? ClampStick(?);
// ? PADClamp(?);
// ? UpdateOrigin(?);
// ? PADReset(?);
// ? PADRecalibrate(?);
// ? PADInit(?);
// ? PADRead(?);
// ? SISetSamplingRate(?);
// ? SIRefreshSamplingRate(?);
// ? PADControlMotor(?);
// ? PADSetSpec(?);
// ? PADSetSamplingCallback(?);
// ? __PADDisableRecalibration(?);
// ? __VIRetraceHandler(?);
// ? func_8034EB8C(?);
// ? func_8034EBD0(?);
// ? func_8034EC14(?);
// ? func_8034ECA4(?);
// ? func_8034EE9C(?);
void VIWaitForRetrace(void);
// ? func_8034F368(?);
// ? func_8034F63C(?);
// ? func_8034F7DC(?);
// ? func_8034FF78(?);
// ? func_80350094(?);
// ? func_80350100(?);
// ? func_8035017C(?);
// ? func_80350184(?);
// ? func_803501EC(?);
// ? func_80350294(?);
// ? func_803503A8(?);
// ? AIRegisterDMACallback(?);
// ? AIInitDMA(?);
// ? AIStartDMA(?);
// ? AISetStreamPlayState(?);
// ? AIGetStreamPlayState(?);
// ? AISetDSPSampleRate(?);
// ? AIGetDSPSampleRate(?);
// ? AISetStreamSampleRate(?);
// ? AIGetStreamSampleRate(?);
// ? AISetStreamVolLeft(?);
// ? AIGetStreamVolLeft(?);
// ? AISetStreamVolRight(?);
// ? AIGetStreamVolRight(?);
// ? AIInit(?);
// ? __AICallbackStackSwitch(?);
// ? __AI_SRC_INIT(?);
// ? ARRegisterDMACallback(?);
// ? ARStartDMA(?);
// ? ARAlloc(?);
// ? ARFree(?);
// ? ARInit(?);
// ? ARGetSize(?);
// ? func_80351010(?);
// ? __ARQServiceQueueLo(?);
// ? ARQInit(?);
// ? ARQPostRequest(?);
// ? __CARDDefaultApiCallback(?);
// ? __CARDEnableInterrupt(?);
// ? __CARDReadStatus(?);
// ? __CARDClearStatus(?);
// ? Retry(?);
// ? __CARDStart(?);
// ? __CARDReadSegment(?);
// ? __CARDWritePage(?);
// ? __CARDEraseSector(?);
// ? CARDInit(?);
// ? __CARDSetDiskID(?);
// ? __CARDGetControlBlock(?);
// ? __CARDPutControlBlock(?);
// ? CARDFreeBlocks(?);
// ? __CARDSync(?);
// ? bitrev(?);
// ? ReadArrayUnlock(?);
// ? DummyLen(?);
// ? __CARDUnlock(?);
// ? BlockReadCallback(?);
// ? func_803547FC(?);
// ? func_8035493C(?);
// ? CARDGetXferredBytes(?);
// ? __CARDGetFatBlock(?);
// ? __CARDAllocBlock(?);
// ? __CARDFreeBlock(?);
// ? __CARDUpdateFatBlock(?);
// ? __CARDGetDirBlock(?);
// ? __CARDUpdateDir(?);
// ? __CARDCheckSum(?);
// ? VerifyID(?);
// ? VerifyDir(?);
// ? VerifyFAT(?);
// ? __CARDVerify(?);
// ? CARDCheckExAsync(?);
// ? CARDCheckAsync(?);
// ? CARDProbe(?);
// ? CARDProbeEx(?);
// ? DoMount(?);
// ? __CARDMountCallback(?);
// ? CARDMountAsync(?);
// ? DoUnmount(?);
// ? CARDUnmount(?);
// ? FormatCallback(?);
// ? __CARDFormatRegionAsync(?);
// ? CARDFormatAsync(?);
// ? __CARDCompareFileName(?);
// ? __CARDAccess(?);
// ? __CARDIsPublic(?);
// ? __CARDGetFileNo(?);
// ? CARDFastOpen(?);
// ? CARDOpen(?);
// ? CARDClose(?);
// ? __CARDIsOpened(?);
// ? CreateCallbackFat(?);
// ? CARDCreateAsync(?);
// ? __CARDSeek(?);
// ? CARDReadAsync(?);
// ? CARDRead(?);
// ? WriteCallback(?);
// ? CARDWriteAsync(?);
// ? CARDWrite(?);
// ? DeleteCallback(?);
// ? CARDDeleteAsync(?);
// ? UpdateIconOffsets(?);
// ? CARDGetStatus(?);
// ? CARDSetStatusAsync(?);
// ? CARDRenameAsync(?);
// ? AXInitEx(?);
// ? __AXGetStackHead(?);
// ? func_80358AE0(?);
// ? __AXAllocInit(?);
// ? func_80358C14(?);
// ? func_80358C34(?);
// ? func_80358C44(?);
// ? func_80358C60(?);
// ? func_80358CF4(?);
// ? func_80358D74(?);
// ? func_80358EE8(?);
// ? __AXAuxInit(?);
// ? func_8035906C(?);
// ? func_803590A0(?);
// ? func_803590BC(?);
// ? func_803590F0(?);
// ? func_8035910C(?);
// ? func_8035929C(?);
// ? func_803592A8(?);
// ? __AXGetCommandListCycles(?);
// ? func_803592BC(?);
// ? func_803592F8(?);
// ? __AXClInit(?);
// ? __AXOutNewFrame(?);
// ? func_80359984(?);
// ? __AXOutInit(?);
// ? AXRegisterCallback(?);
// ? __AXGetStudio(?);
// ? func_80359D98(?);
// ? __AXSPBInit(?);
// ? func_8035A1BC(?);
// ? __AXGetNumVoices(?);
// ? func_8035A258(?);
// ? func_8035A934(?);
// ? func_8035AB7C(?);
// ? func_8035AB88(?);
// ? __AXVPBInit(?);
// ? func_8035ADC4(?);
// ? func_8035AE20(?);
// ? func_8035B07C(?);
// ? func_8035B0E0(?);
// ? func_8035B13C(?);
// ? func_8035B194(?);
// ? func_8035B1E0(?);
// ? func_8035B2F0(?);
// ? func_8035B33C(?);
// ? func_8035B390(?);
// ? func_8035B3E4(?);
// ? func_8035B438(?);
// ? func_8035B4DC(?);
// ? func_8035B574(?);
// ? func_8035B60C(?);
// ? __AXGetCurrentProfile(?);
// ? ReverbHICreate(?);
// ? func_8035BBAC(?);
// ? func_8035BD3C(?);
// ? func_8035C248(?);
// ? func_8035C344(?);
// ? func_8035C3B4(?);
// ? ReverbSTDCreate(?);
// ? func_8035C910(?);
// ? func_8035CCC4(?);
// ? func_8035CDC0(?);
// ? func_8035CE2C(?);
// ? do_src1(?);
// ? func_8035D040(?);
// ? func_8035D22C(?);
// ? func_8035D42C(?);
// ? func_8035D47C(?);
// ? AXFXDelayCallback(?);
// ? func_8035DA60(?);
// ? func_8035DC64(?);
// ? func_8035DCAC(?);
// ? func_8035DD8C(?);
// ? func_8035DD98(?);
// ? HSD_DobjGetFlags(?);
// ? HSD_DObjSetFlags(?);
// ? HSD_DObjClearFlags(?);
// ? HSD_DObjModifyFlags(?);
// ? HSD_DObjRemoveAnimAllByFlags(?);
// ? HSD_DObjAddAnimAll(?);
// ? HSD_DObjReqAnimAllByFlags(?);
// ? HSD_DObjReqAnimAll(?);
// ? HSD_DObjAnimAll(?);
struct _HSD_DObj *HSD_DObjLoadDesc(struct _HSD_DObjDesc *);
// ? HSD_DObjRemoveAll(?);
// ? HSD_DObjAlloc(?);
// ? HSD_DObjResolveRefsAll(?);
// ? HSD_TObjRemoveAnimAll(?);
// ? HSD_TObjAddAnim(?);
// ? HSD_TObjAddAnimAll(?);
// ? HSD_TObjReqAnimAllByFlags(?);
// ? HSD_TObjReqAnim(?);
// ? HSD_TObjReqAnimAll(?);
// ? HSD_TObjAnim(?);
// ? HSD_TObjAnimAll(?);
// ? HSD_TObjLoadDesc(?);
// ? HSD_TlutLoadDesc(?);
// ? HSD_TObjTevLoadDesc(?);
// ? _HSD_TObjGetCurrentByType(?);
// ? TObjSetupMtx(?);
// ? HSD_TObjSetupTextureCoordGen(?);
// ? HSD_TObjSetupVolatileTev(?);
// ? MakeColorGenTExp(?);
// ? HSD_TObjAssignResources(?);
// ? HSD_TObjSetup(?);
// ? HSD_TexCoordID2TexGenSrc(?);
// ? HSD_Index2TexCoord(?);
// ? HSD_Index2TexMtx(?);
// ? HSD_Index2TexMap(?);
// ? HSD_TObjRemoveAll(?);
// ? HSD_TObjGetNext(?);
struct _HSD_TObj *allocShadowTObj();
// ? HSD_TObjFree(?);
// ? HSD_TlutAlloc(?);
// ? HSD_TlutFree(?);
// ? HSD_TObjTevAlloc(?);
struct _HSD_ImageDesc *HSD_ImageDescAlloc();
// ? HSD_ImageDescFree(?);
// ? HSD_ImageDescCopyFromEFB(?);
// ? HSD_SetupChannelMode(?);
// ? func_80361778(?);
// ? func_8036190C(?);
// ? HSD_SetupRenderMode(?);
// ? func_80361A20(?);
// ? func_80361A64(?);
// ? func_80361A74(?);
// ? func_80361AD8(?);
// ? func_80361B18(?);
// ? func_80361BB8(?);
// ? func_80361C60(?);
// ? func_80361CC4(?);
// ? func_80361D6C(?);
// ? func_80361DC0(?);
// ? func_80361E14(?);
// ? func_80361E8C(?);
// ? func_80361EE0(?);
// ? func_80361FC4(?);
// ? HSD_RenderInitAllocData(?);
// ? func_803620A4(?);
// ? func_803623D0(?);
// ? func_80362400(?);
// ? func_80362478(?);
// ? func_803624A8(?);
// ? HSD_StateInitTev(?);
// ? func_803624E4(?);
// ? func_803624EC(?);
// ? func_80362518(?);
// ? func_80362548(?);
// ? func_80362640(?);
// ? func_803626B8(?);
// ? func_80362768(?);
// ? func_80362908(?);
// ? func_803629D8(?);
// ? func_80362AA4(?);
// ? HSD_MObjSetCurrent(?);
// ? HSD_MObjSetFlags(?);
// ? HSD_MObjClearFlags(?);
// ? HSD_MObjRemoveAnimByFlags(?);
// ? HSD_MObjAddAnim(?);
// ? HSD_MObjReqAnimByFlags(?);
// ? HSD_MObjReqAnim(?);
// ? HSD_MObjAnim(?);
struct _HSD_MObj *HSD_MObjLoadDesc(struct _HSD_MObjDesc *);
// ? HSD_MObjCompileTev(?);
// ? func_80363B8C(?);
// ? func_80363C10(?);
// ? func_80363C2C(?);
// ? func_80363C38(?);
// ? HSD_MObjRemove(?);
// ? HSD_MObjAlloc(?);
// ? HSD_MaterialAlloc(?);
// ? func_80363D60(?);
// ? func_80363DC4(?);
// ? HSD_AObjInitAllocData(?);
// ? func_80364004(?);
// ? func_8036401C(?);
// ? func_80364054(?);
// ? func_803640A0(?);
// ? func_803640B0(?);
// ? func_8036410C(?);
// ? func_80364190(?);
// ? func_80364340(?);
// ? func_8036439C(?);
void HSD_AObjRemove(struct _HSD_AObj *aobj);
// ? func_8036453C(?);
// ? func_803645A8(?);
// ? callbackForeachFunc(?);
// ? TObjForeachAnim(?);
// ? RObjForeachAnim(?);
// ? func_803647DC(?);
// ? func_80364924(?);
void HSD_ForeachAnim(void *, ...);
// ? func_8036530C(?);
// ? func_8036531C(?);
// ? func_8036532C(?);
// ? func_8036533C(?);
// ? HSD_LObjGetFlags(?);
// ? HSD_LObjSetFlags(?);
// ? HSD_LObjClearFlags(?);
// ? HSD_LObjGetLightMaskDiffuse(?);
// ? HSD_LObjGetLightMaskAttnFunc(?);
// ? HSD_LObjGetLightMaskAlpha(?);
// ? HSD_LObjGetLightMaskSpecular(?);
// ? HSD_LObjGetNbActive(?);
// ? HSD_LObjGetActiveByID(?);
// ? HSD_LObjGetActiveByIndex(?);
// ? func_80365620(?);
// ? func_80365678(?);
// ? func_803656F8(?);
// ? func_80365778(?);
// ? func_80365820(?);
// ? func_8036597C(?);
// ? func_80365AC4(?);
// ? func_80365C50(?);
// ? func_80365D6C(?);
// ? func_80365F28(?);
// ? func_803663B4(?);
// ? func_803664D4(?);
// ? func_80366654(?);
// ? func_803667A8(?);
// ? func_803668EC(?);
// ? func_80366A44(?);
// ? HSD_LightID2Index(?);
// ? func_80366B64(?);
void func_80366BD4();
// ? func_80366CA4(?);
// ? func_80366CB0(?);
// ? func_80366CBC(?);
// ? func_80366CD0(?);
// ? func_80366CE8(?);
// ? func_80366D70(?);
// ? func_80366DB0(?);
// ? func_80366E38(?);
struct _HSD_WObj *func_80366E78(struct _HSD_LObj *);
struct _HSD_WObj *func_80366E90(struct _HSD_LObj *);
// ? func_803672DC(?);
// ? func_803673D8(?);
// ? HSD_CObjEraseScreen(?);
// ? HSD_CObjRemoveAnim(?);
// ? func_803678CC(?);
// ? func_80367AB8(?);
// ? func_80367B08(?);
// ? func_80367B68(?);
// ? func_80367C28(?);
// ? func_80367EB0(?);
// ? func_803680F8(?);
// ? func_803683A4(?);
// ? func_80368458(?);
// ? func_80368608(?);
// ? HSD_CObjGetInterestWObj(?);
// ? HSD_CObjGetEyePositionWObj(?);
// ? func_803686AC(?);
// ? func_80368718(?);
// ? func_80368784(?);
// ? func_803687F0(?);
// ? func_8036885C(?);
// ? func_80368A08(?);
// ? func_80368B0C(?);
// ? func_80368BC0(?);
// ? func_80368E70(?);
// ? func_803690B4(?);
// ? func_803692E8(?);
// ? func_80369564(?);
// ? func_80369574(?);
// ? func_803695F0(?);
// ? func_80369624(?);
// ? func_80369688(?);
// ? func_80369808(?);
// ? func_803699C0(?);
// ? func_80369BC8(?);
// ? func_80369BEC(?);
// ? func_80369C0C(?);
// ? func_80369C30(?);
// ? func_80369C50(?);
// ? func_80369CE4(?);
// ? func_80369D18(?);
// ? func_80369DB0(?);
// ? func_80369DE4(?);
// ? func_80369E84(?);
// ? func_80369EB8(?);
// ? func_80369F54(?);
f32 HSD_CObjGetNear(struct _HSD_CObj *);
// ? func_80369FA0(?);
f32 HSD_CObjGetFar(struct _HSD_CObj *);
// ? func_80369FC8(?);
// ? func_80369FD8(?);
// ? func_80369FF4(?);
void HSD_CObjSetScissorx4();
// ? func_8036A02C(?);
// ? func_8036A058(?);
// ? func_8036A0E4(?);
void HSD_CObjSetViewportfx4();
u32 HSD_CObjGetProjectionType(struct _HSD_CObj *);
// ? func_8036A144(?);
// ? func_8036A154(?);
// ? func_8036A170(?);
// ? func_8036A194(?);
// ? func_8036A1B8(?);
// ? func_8036A1F4(?);
// ? func_8036A250(?);
// ? func_8036A258(?);
// ? func_8036A270(?);
void *func_8036A288(void);
struct _HSD_CObj *HSD_CObjAlloc();
// ? func_8036A2EC(?);
// ? func_8036A55C(?);
// ? func_8036A590(?);
// ? func_8036A944(?);
// ? func_8036A974(?);
// void HSD_FObjRemoveAll(struct _HSD_FObj* fobj);
// ? func_8036AA44(?);
// ? func_8036AA64(?);
// void HSD_FObjReqAnimAll(struct _HSD_FObj* fobj, f32 frame);
// ? HSD_FObjStopAnim(?);
// ? func_8036AB78(?);
// ? parseFloat(?);
// ? parsePackInfo(?);
// ? FObjLaunchKeyData(?);
// ? FObjUpdateAnim(?);
// ? HSD_FObjInterpretAnim(?);
// ? func_8036B6CC(?);
// struct _HSD_FObj* HSD_FObjLoadDesc(struct _HSD_FObjDesc* desc);
// ? func_8036B848(?);
// ? func_8036B8A4(?);
// ? HSD_PObjGetFlags(?);
// ? HSD_PObjRemoveAnimAllByFlags(?);
// ? HSD_PObjAddAnimAll(?);
// ? HSD_PObjReqAnimAllByFlags(?);
// ? HSD_PObjAnimAll(?);
// ? func_8036BBBC(?);
// ? func_8036BC9C(?);
struct _HSD_PObj *HSD_PObjLoadDesc(struct _HSD_PObjDesc *);
// ? HSD_PObjRemoveAll(?);
// ? func_8036BF70(?);
// ? func_8036BFCC(?);
// ? func_8036C028(?);
// ? HSD_PObjResolveRefsAll(?);
// ? HSD_ClearVtxDesc(?);
// ? func_8036C270(?);
// ? func_8036C2E8(?);
// ? func_8036C384(?);
// ? func_8036C404(?);
// ? func_8036C4D4(?);
// ? func_8036C860(?);
// ? func_8036CBEC(?);
// ? func_8036D4D0(?);
// ? func_8036D7E4(?);
// ? func_8036E034(?);
// ? func_8036E04C(?);
// ? func_8036E080(?);
// ? func_8036E12C(?);
// ? func_8036E268(?);
// ? func_8036E4C4(?);
// ? HSD_JObjCheckDependAll(?);
// ? JObjResetRST(?);
// ? HSD_JObjResetRST(?);
// ? func_8036EFAC(?);
// ? func_8036F0F0(?);
// ? HSD_JObjMakeMatrix(?);
// ? func_8036F4C8(?);
// ? func_8036F550(?);
// ? func_8036F644(?);
// ? func_8036F6B4(?);
// ? func_8036F718(?);
// ? func_8036F7B0(?);
// ? HSD_JObjReqAnimAll(?);
// ? func_8036F934(?);
// ? func_8036F9B8(?);
// ? HSD_JObjAddAnim(?);
void HSD_JObjAddAnimAll(struct _HSD_JObj *, struct _HSD_AnimJoint *, struct _HSD_MatAnimJoint *, struct _HSD_ShapeAnimJoint *);
// ? HSD_JObjAnim(?);
// ? func_803707F8(?);
void HSD_JObjAnimAll(struct _HSD_JObj *); // asm/sysdolphin/baselib/jobj.s
// ? func_803709DC(?);
// ? HSD_JObjSetDefaultClass(?);
struct _HSD_JObj *HSD_JObjLoadJoint(struct _HSD_Joint *);
// ? HSD_JObjResolveRefs(?);
// ? HSD_JObjResolveRefsAll(?);
void HSD_JObjUnref(struct _HSD_JObj *jobj);
// ? HSD_JObjUnrefThis(?);
// ? HSD_JObjRemove(?);
void HSD_JObjRemoveAll(struct _HSD_JObj *); // sysdolphin/baselib/jobj.s
// ? func_80371750(?);
// ? HSD_JObjAddChild(?);
// ? HSD_JObjReparent(?);
// ? HSD_JObjAddNext(?);
// ? HSD_JObjGetPrev(?);
// ? func_80371BEC(?);
// ? func_80371C24(?);
// ? func_80371C68(?);
// ? func_80371C98(?);
// ? HSD_JObjGetFlags(?);
// ? HSD_JObjSetFlags(?);
// ? HSD_JObjSetFlagsAll(?);
// ? HSD_JObjClearFlags(?);
// ? HSD_JObjClearFlagsAll(?);
// ? HSD_JObjAlloc(?);
// ? HSD_JObjSetCurrent(?);
// ? HSD_JObjGetCurrent(?);
// ? func_8037231C(?);
// ? func_80372B08(?);
// void HSD_JObjSetupMatrixSub(struct _HSD_JObj*);
// void HSD_JObjSetMtxDirtySub(struct _HSD_JObj*); // sysdolphin/baselib/jobj.s
// ? func_80373404(?);
// ? HSD_ZListInitAllocData(?);
// ? HSD_StateInitDirect(?);
// ? func_80373964(?);
// ? func_80373B90(?);
// ? func_80373E44(?);
// ? func_803742AC(?);
// ? func_80374480(?);
// ? func_80374680(?);
// ? func_803747F8(?);
// ? func_80374848(?);
// ? func_80374910(?);
// ? func_803749B0(?);
// ? func_80374A80(?);
// ? func_80374A88(?);
void HSD_EraseRect();
// void HSD_InitComponent(void);
// void HSD_DVDInit(void);
// void** HSD_AllocateXFB(s32 nbBuffer, GXRenderModeObj* rm);
void HSD_GXInit(void);
void HSD_OSInit(void);
int HSD_GetHeap(void);
// ? HSD_SetHeap(?);
// ? HSD_GetNextArena(?);
// ? HSD_CreateMainHeap(?);
// ? func_80375530(?);
// ? HSD_StartRender(?);
// ? func_803755A8(?);
void HSD_ObjInit(void);
// ? HSD_ObjDumpStat(?);
// ? HSD_SetInitParameter(?);
// ? HSD_VISearchXFBByStatus(?);
// ? func_803758DC(?);
// ? func_80375934(?);
// ? func_8037598C(?);
// ? func_80375E60(?);
// ? func_80375E70(?);
// ? func_80375F74(?);
// ? func_803761C0(?);
// ? func_8037639C(?);
// ? func_803764A8(?);
// ? func_803765A8(?);
// ? func_80376718(?);
// ? func_803767A0(?);
void HSD_VIInit(struct _HSD_VIStatus *vi_status, void *xfb0, void *xfb1, void *xfb2);
// ? HSD_PadGetRawQueueCount(?);
// ? HSD_PadGetResetSwitch(?);
// ? func_803769FC(?);
// ? func_80376D04(?);
// ? func_80376E48(?);
// ? func_80376E90(?);
// ? func_803771D4(?);
// ? func_80377450(?);
// ? func_8037750C(?);
// ? func_803779C0(?);
// ? func_80377B54(?);
// ? func_80377CE8(?);
// ? func_80377D18(?);
// ? func_80377D98(?);
// ? HSD_PadRumbleOn(?);
// ? func_803780DC(?);
// ? func_80378128(?);
// ? func_80378170(?);
// ? func_80378208(?);
void func_80378280(u8, int);
// ? func_80378330(?);
// ? func_803783B0(?);
// ? func_80378430(?);
// ? func_80378524(?);
// ? func_80378560(?);
// ? func_803786F0(?);
// ? func_80378828(?);
f32 splGetHelmite(f32, f32, f32, f32, f32, f32);
// ? func_80378A94(?);
// ? func_80378F38(?);
void splArcLengthPoint(Vec *, struct _HSD_Spline *, f32);
void func_80379310();
// ? HSD_MtxInverseConcat(?);
// ? func_80379A20(?);
// ? func_80379C24(?);
// ? func_80379F6C(?);
// ? func_80379F88(?);
// ? func_8037A120(?);
// ? func_8037A230(?);
void func_8037A250();
// ? func_8037A43C(?);
// ? func_8037A54C(?);
// ? func_8037A610(?);
// ? func_8037A65C(?);
// ? func_8037A68C(?);
// ? func_8037A6D8(?);
// ? func_8037A714(?);
// ? func_8037A750(?);
// ? HSD_MulColor(?);
// ? func_8037A7EC(?);
// ? func_8037A8AC(?);
// ? HSD_ObjSetHeap(?);
// ? func_8037A968(?);
void *func_8037ABC8(struct _HSD_ObjAllocData *data);
void func_8037AD20(struct _HSD_ObjAllocData *data, struct _HSD_ObjAllocLink *obj);
void HSD_ObjAllocInit(struct _HSD_ObjAllocData *data, u32 size, u32 align);
// ? HSD_RObjInitAllocData(?);
// ? func_8037AE90(?);
// ? HSD_RObjGetByType(?);
// ? HSD_RObjAnimAll(?);
// ? HSD_RObjRemoveAnimAllByFlags(?);
void HSD_RObjRemoveAnimAll(struct _HSD_RObj *robj);
// ? HSD_RObjReqAnimAllByFlags(?);
void HSD_RObjReqAnimAll(struct _HSD_RObj *robj, f32 frame);
// ? HSD_RObjAddAnimAll(?);
// ? HSD_RObjGetGlobalPosition(?);
// ? set_dirup_matrix(?);
// ? resolveCnsDirUp(?);
// ? resolveCnsOrientation(?);
// ? resolveLimits(?);
// ? HSD_RObjUpdateAll(?);
// ? HSD_RObjResolveRefsAll(?);
// ? HSD_RObjLoadDesc(?);
// ? HSD_RObjRemove(?);
// ? HSD_RObjRemoveAll(?);
// ? HSD_RObjAlloc(?);
// ? HSD_RObjFree(?);
// ? func_8037C4CC(?);
// ? HSD_RvalueRemoveAll(?);
// ? expLoadDesc(?);
// ? bcexpLoadDesc(?);
// ? HSD_RvalueResolveRefsAll(?);
// ? HSD_RObjSetConstraintObj(?);
// ? func_8037CD8C(?);
void HSD_IDSetup(void);
// ? func_8037CDEC(?);
// ? func_8037CEE8(?);
void *func_8037CF98(struct _HSD_IDTable *table, u32 id, u8 *success);
// ? HSD_WObjRemoveAnim(?);
// ? func_8037D094(?);
// ? HSD_WObjAddAnim(?);
// ? HSD_WObjInterpretAnim(?);
// ? HSD_WObjInit(?);
// ? HSD_WObjLoadDesc(?);
// void HSD_WObjSetPosition(struct _HSD_WObj*, Vec*);
// void HSD_WObjSetPositionX(struct _HSD_WObj*, f32);
// void HSD_WObjSetPositionY(struct _HSD_WObj*, f32);
// void HSD_WObjSetPositionZ(struct _HSD_WObj*, f32);
// ? HSD_WObjGetPosition(?);
// ? HSD_WObjAlloc(?);
// ? HSD_FogSet(?);
// ? func_8037DC38(?);
// ? func_8037DCCC(?);
// ? func_8037DD58(?);
// ? func_8037DDD8(?);
// ? func_8037DE7C(?);
// ? func_8037DED0(?);
// ? func_8037DEF4(?);
// ? func_8037DF2C(?);
// ? HSD_PerfInitStat(?);
// ? HSD_PerfSetStartTime(?);
// ? HSD_PerfSetCPUTime(?);
// ? HSD_PerfSetDrawTime(?);
// ? HSD_PerfSetTotalTime(?);
// ? HSD_PerfCountEnvelopeBlending(?);
// ? HSD_ListInitAllocData(?);
// ? HSD_SListAlloc(?);
// ? HSD_SListAllocAndAppend(?);
// ? HSD_SListAllocAndPrepend(?);
// ? HSD_SListAppendList(?);
// ? HSD_SListPrependList(?);
// ? HSD_SListRemove(?);
// ? MatToQuat(?);
// ? func_8037EB28(?);
// ? func_8037EC4C(?);
// ? func_8037ECE0(?);
void func_8037EE0C(Vec *, Quaternion *);
void func_8037EF28(Quaternion *, Quaternion *, Quaternion *, f32);
// ? HSD_Free(?);
// ? HSD_ShadowInitAllocData(?);
// ? func_8037F280(?);
// ? HSD_ShadowRemove(?);
// ? HSD_ShadowInit(?);
// ? HSD_ShadowSetSize(?);
// ? drawBackgroundRect(?);
// ? HSD_ShadowStartRender(?);
// ? HSD_ShadowEndRender(?);
// ? HSD_ShadowSetActive(?);
// ? HSD_ShadowAddObject(?);
// ? HSD_ShadowDeleteObject(?);
// ? makeMatrix(?);
// ? HSD_ShadowSetViewingRect(?);
// ? HSD_ViewingRectInit(?);
// ? HSD_ViewingRectCheck(?);
// ? func_8038001C(?);
// ? func_803801E4(?);
// ? HSD_ArchiveGetPublicAddress(?);
// ? HSD_ArchiveGetExtern(?);
// ? HSD_ArchiveLocateExtern(?);
// ? HSD_Rand(?);
// ? func_80380528(?);
// ? func_80380580(?);
// ? HSD_ByteCodeEval(?);
// ? ClassInfoInit(?);
void hsdInitClassInfo();
// ? OSReport_PrintSpaces(?);
// ? GetMemoryEntry(?);
// ? hsdAllocMemPiece(?);
// ? hsdFreeMemPiece(?);
void *hsdNew();
// ? func_80382400(?);
BOOL hsdIsDescendantOf(void *, void *);
// ? func_803825D8(?);
// ? func_80382660(?);
// ? func_80382718(?);
struct _HSD_ClassInfo *hsdSearchClassInfo(char *);
// ? func_80382854(?);
// ? func_80382A40(?);
// ? HSD_HashSearch(?);
// ? HSD_TExpGetType(?);
// ? HSD_TExpRef(?);
// ? HSD_TExpUnref(?);
// ? HSD_TExpFreeList(?);
// ? HSD_TExpTev(?);
// ? HSD_TExpCnst(?);
// ? HSD_TExpColorOp(?);
// ? HSD_TExpAlphaOp(?);
// ? HSD_TExpColorInSub(?);
// ? HSD_TExpColorIn(?);
// ? func_80383B64(?);
// ? func_80383F50(?);
// ? func_80384050(?);
// ? func_80384114(?);
// ? func_80384274(?);
// ? func_80384340(?);
// ? func_80384560(?);
// ? func_803846C0(?);
// ? func_80384B20(?);
// ? func_80384F28(?);
// ? func_80385448(?);
// ? func_803854B4(?);
// ? func_80385758(?);
// ? assign_reg(?);
// ? func_80385944(?);
// ? func_80385B8C(?);
// ? func_80385C60(?);
// ? func_80386100(?);
// ? func_80386234(?);
// ? func_80386470(?);
// ? func_8038687C(?);
// ? func_803870E4(?);
// ? func_80387B1C(?);
// ? func_80387BA4(?);
// ? func_80387DF8(?);
void func_803881E4(void);
void __assert(char *, u32, char *);
void HSD_Panic(char *, u32, char *);
// ? func_80388320(?);
// ? func_80388328(?);
// ? HSD_AudioMalloc(?);
// ? HSD_AudioFree(?);
// ? func_803883B4(?);
// ? HSD_SynthSFXLoadNewProc(?);
// ? HSD_SynthSFXLoad(?);
// ? func_80388B0C(?);
// ? func_80388B50(?);
// ? func_80388B60(?);
// ? func_80388CB0(?);
// ? func_80388D30(?);
// ? func_80388DC8(?);
// ? func_80388E08(?);
// ? HSD_SynthSFXGroupDataReaddress(?);
// ? HSD_SynthSFXBankDeflag(?);
// ? HSD_SynthSFXBankDeflagSync(?);
// ? func_80389094(?);
// ? func_803890B4(?);
// ? func_8038912C(?);
// ? func_80389334(?);
// ? func_803896F0(?);
// ? HSD_SynthSFXKeyOff(?);
// ? HSD_SynthSFXStopRange(?);
// ? HSD_SynthSFXPause(?);
// ? HSD_SynthSFXResume(?);
// ? HSD_SynthSFXCheck(?);
// ? HSD_SynthSFXSetVolumeFade(?);
// ? func_80389CC4(?);
// ? HSD_SynthSFXSetMix(?);
// ? HSD_SynthSFXUpdatePitch(?);
// ? func_80389E2C(?);
// ? func_80389F4C(?);
// ? func_8038A000(?);
// ? HSD_SynthSFXUpdateVolume(?);
// ? HSD_SynthSFXUpdateMix(?);
// ? HSD_SynthSFXUpdateAllVolume(?);
// ? HSD_SynthSFXSetDriverInactivatedCallback(?);
// ? HSD_SynthSFXSetDriverMasterClockCallback(?);
// ? HSD_SynthSFXSetDriverPauseCallback(?);
// ? func_8038ADD0(?);
// ? func_8038B5AC(?);
// ? HSD_SynthStreamSetVolume(?);
// ? HSD_SynthInit(?);
// ? AXDriverUnlink(?);
// ? AXDriverKeyOff(?);
// ? func_8038BD6C(?);
// ? func_8038BE64(?);
// ? func_8038BF6C(?);
// ? func_8038C6C0(?);
// ? func_8038CFF4(?);
// ? func_8038D2B4(?);
// ? func_8038D3B8(?);
// ? func_8038D4E4(?);
// ? func_8038D5B4(?);
// ? func_8038D914(?);
// ? func_8038D9D8(?);
// ? func_8038DA70(?);
// ? func_8038DCFC(?);
// ? AXDriverSetupAux(?);
// ? func_8038E034(?);
// ? func_8038E30C(?);
// ? func_8038E37C(?);
// ? func_8038E498(?);
// ? func_8038E5D4(?);
// ? func_8038E5DC(?);
// ? func_8038E5E4(?);
// ? func_8038E6C0(?);
// ? func_8038E768(?);
// ? func_8038E844(?);
// ? func_8038E8EC(?);
// ? func_8038E968(?);
// ? func_8038E9A8(?);
// ? func_8038E9E0(?);
// ? func_8038EA18(?);
// ? HSD_DevComIsBusy(?);
// ? func_8038EA68(?);
// ? func_8038ECDC(?);
// ? func_8038F4F0(?);
// ? func_8038F6D4(?);
// ? func_8038F954(?);
// ? func_8038FAA8(?);
// ? func_8038FC18(?);
// ? func_8038FCE4(?);
void func_8038FD54(struct _HSD_GObj *, void (*)(struct _HSD_GObj *), s32);
// ? func_8038FE24(?);
// ? func_8038FED4(?);
// ? func_8038FF5C(?);
// ? func_8038FFB8(?);
struct _HSD_GObj *func_803901F0(s32, s32, s32);
void func_80390228(struct _HSD_GObj *);
// ? func_8039032C(?);
// ? GObj_GXReorder(?);
// void GObj_SetupGXLink();
// ? GObj_SetupGXLinkMax(?);
// ? GObj_SetupGXLinkMaxSorted(?);
// ? func_8039084C(?);
// ? func_80390908(?);
// ? func_803909D8(?);
// ? func_80390A3C(?);
void func_80390A70(struct _HSD_GObj *, u8, void *);
// ? func_80390ADC(?);
// ? func_80390B0C(?);
// ? GObj_InitUserData(?);
// ? GObj_RemoveUserData(?);
// ? func_80390C5C(?);
// ? func_80390C84(?);
// ? func_80390CAC(?);
// ? func_80390CD4(?);
// ? func_80390CFC(?);
// ? func_80390EB8(?);
// ? func_80390ED0(?);
// ? func_80390FC0(?);
// ? func_80391070(?);
// ? func_803910D8(?);
// ? func_80391260(?);
// ? func_803912A8(?);
// ? func_803912E0(?);
// ? func_80391304(?);
// ? func_80391580(?);
// ? func_80391664(?);
// ? func_80391A04(?);
// ? func_80391AC8(?);
// ? func_80391E18(?);
// ? func_80391F28(?);
// ? func_803921B8(?);
// ? func_803922FC(?);
// ? func_80392474(?);
// ? func_80392480(?);
// ? func_80392528(?);
// ? func_8039254C(?);
// ? func_80392934(?);
// ? func_80392A08(?);
// ? func_80392E80(?);
// ? func_803931A4(?);
// ? func_80393328(?);
// ? func_80393844(?);
// ? func_80393A04(?);
// ? func_80393A54(?);
// ? func_80393A5C(?);
// ? func_80393D2C(?);
// ? func_80393DA0(?);
// ? func_80393E34(?);
// ? func_80393E68(?);
// ? func_80393EF4(?);
// ? func_80394068(?);
// ? func_80394128(?);
// ? func_803941E8(?);
// ? func_80394314(?);
// ? func_80394434(?);
// ? func_80394544(?);
// ? func_80394668(?);
// ? func_80394950(?);
// ? Exception_ReportStackTrace(?);
// ? Exception_ReportCodeline(?);
// ? func_80394DF4(?);
// ? func_80394E8C(?);
// ? func_80395550(?);
// ? func_80395970(?);
// ? func_80397520(?);
// ? func_803975D4(?);
// ? func_80397DA4(?);
// ? Exception_StoreDebugLevel(?);
// ? func_80397DFC(?);
// ? func_80397E0C(?);
// ? func_80398310(?);
// ? func_803983A4(?);
// ? func_803984F4(?);
// ? func_80398614(?);
// ? func_803989A0(?);
// ? func_80398A08(?);
// ? func_80398C04(?);
// ? func_80398F0C(?);
// ? func_80398F8C(?);
// ? func_803991D8(?);
// ? func_8039930C(?);
// ? func_8039CEAC(?);
// ? func_8039CF4C(?);
// ? func_8039D048(?);
// ? func_8039D0A0(?);
// ? func_8039D1E4(?);
// ? func_8039D1EC(?);
// ? func_8039D214(?);
// ? func_8039D354(?);
// ? func_8039D3AC(?);
// ? func_8039D4DC(?);
// ? func_8039D580(?);
// ? func_8039D5DC(?);
// ? func_8039D71C(?);
// ? func_8039D9C8(?);
// ? func_8039DAD4(?);
// ? func_8039EE24(?);
// ? func_8039EFAC(?);
// ? func_8039F05C(?);
// ? func_8039F6CC(?);
// ? func_8039F78C(?);
// ? func_8039F89C(?);
// ? func_8039FA28(?);
// ? func_8039FB74(?);
// ? func_8039FC70(?);
// ? func_803A0088(?);
// ? func_803A3920(?);
// ? func_803A3A50(?);
// ? func_803A3A5C(?);
// ? func_803A4138(?);
// ? func_803A4178(?);
// ? func_803A425C(?);
// ? func_803A4294(?);
// ? func_803A42CC(?);
// ? func_803A4308(?);
// ? func_803A4344(?);
// ? func_803A43E8(?);
// ? func_803A44A4(?);
// ? func_803A44D4(?);
// ? func_803A466C(?);
// ? func_803A4740(?);
// ? func_803A477C(?);
// ? func_803A49E0(?);
// ? func_803A4A68(?);
// ? func_803A54EC(?);
// ? func_803A55DC(?);
// ? func_803A5798(?);
// ? func_803A594C(?);
// ? func_803A5A2C(?);
// ? func_803A5ACC(?);
// ? func_803A5CC4(?);
// ? func_803A5D30(?);
// ? func_803A5DA0(?);
// ? func_803A5E70(?);
// ? func_803A5F50(?);
// ? func_803A5FBC(?);
// ? func_803A6048(?);
// ? func_803A611C(?);
// ? func_803A62A0(?);
// ? func_803A6368(?);
// ? func_803A6478(?);
// ? func_803A6530(?);
// ? func_803A660C(?);
// ? func_803A6754(?);
// ? func_803A67EC(?);
// ? func_803A6B98(?);
// ? func_803A6FEC(?);
// ? func_803A70A0(?);
// ? func_803A746C(?);
// ? func_803A74F0(?);
// ? func_803A7548(?);
// ? func_803A75E0(?);
// ? func_803A7664(?);
// ? func_803A7684(?);
// ? func_803A7F0C(?);
// ? func_803A8134(?);
// ? func_803A84BC(?);
// ? func_803A945C(?);
// ? func_803A947C(?);
// ? func_803AA790(?);
// ? func_803AAA48(?);
// ? func_803AC168(?);
// ? func_803AC258(?);
// ? func_803AC2A4(?);
// ? func_803AC2D4(?);
// ? func_803AC2E0(?);
// ? func_803AC334(?);
// ? func_803AC340(?);
// ? func_803AC3E0(?);
// ? func_803AC3F8(?);
// ? func_803AC558(?);
// ? func_803AC634(?);
// ? func_803AC6B8(?);
// ? func_803AC7DC(?);
// ? func_803ACB74(?);
// ? func_803ACBE8(?);
// ? func_803ACC0C(?);
// ? func_803ACD58(?);
// ? func_803ACF30(?);
// ? func_803ACFC0(?);
// ? func_803AD16C(?);
// ? func_803ADE4C(?);
// ? func_803ADF90(?);
// ? func_803AE7F8(?);
// ? func_803AF3F0(?);
// ? func_803B0120(?);
// ? func_803B0E9C(?);
// ? func_803B1338(?);
// ? func_803B1F78(?);
// ? func_803B21E8(?);
// ? func_803B2374(?);
// ? func_803B24E4(?);
// ? func_803B2550(?);
// ? func_803B2674(?);
// ? func_803B26CC(?);
// ? func_803B27F4(?);
// ? func_803B286C(?);
// ? func_803B2928(?);
// ? func_803B29D8(?);
// ? func_803B2A4C(?);
// ? func_803B2ADC(?);
// ? func_803B2B20(?);
// ? func_803B2E04(?);
// ? func_803B2FA0(?);
// ? func_803B302C(?);
// ? func_803B31CC(?);
// ? func_803B3344(?);
// ? func_803B3398(?);
// ? func_803B3408(?);
// ? func_803B376C(?);
// ? func_803B3CD8(?);
// ? func_803B46D4(?);
// ? func_803B4A2C(?);
// ? func_803B4D64(?);
// ? func_803B51C8(?);
// ? func_803B5C2C(?);
// ? func_803B5C4C(?);
// ? func_803B5D70(?);
// ? func_803B5EA0(?);
// ? func_803B61B4(?);
// ? func_803B6820(?);
// ? func_803B6BE4(?);
void efLib_PauseAll(struct _HSD_GObj *);
void efLib_ResumeAll(struct _HSD_GObj *);
BOOL EnvColl_CheckGroundAndLedge(HSD_GObj *, s32);
s32 func_80096CC8(struct _HSD_GObj *);
void ef_Spawn(s32, ...);
f32 HSD_Randf(void);
s32 HSD_Randi(s32);

#endif
