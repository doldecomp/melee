/// @todo Fix formatting
// Special Taunt (AppealS)

/// Check if Special Taunt has already been performed
bool ftFx_AppealS_CheckIfUsed(Fighter* fp);

/// Check if Fox/Falco has pressed D-Pad Down
bool ftFx_AppealS_CheckInput(HSD_GObj* gobj);

/// Fox & Falco's Special Taunt Motion State handler
void ftFx_AppealS_Enter(HSD_GObj* gobj);

/// Fox & Falco's Special Taunt Start Animation callback
void ftFx_AppealS_Anim(HSD_GObj* gobj);

/// Fox & Falco's Special Taunt Start IASA callback
void ftFx_AppealS_IASA(HSD_GObj* gobj);

/// Fox & Falco's Special Taunt Physics callback
void ftFx_AppealS_Phys(HSD_GObj* gobj);

/// Fox & Falco's Special Taunt Collision callback
void ftFx_AppealS_Coll(HSD_GObj* gobj);

// Neutral Special - Blaster (SpecialN)

/// Get Fox/Falco's Item Hold Bone Position for Blaster GFX
void ftFx_SpecialN_FtGetHoldJoint(HSD_GObj* gobj, Vec3* pos);

/// Get Fox/Falco's Item Hold Bone Position for Blaster GFX again?
/// @remarks Used in Blaster's item code.
void ftFx_SpecialN_ItGetHoldJoint(HSD_GObj* gobj, Vec3* pos);

void ftFx_SpecialN_OnChangeAction(HSD_GObj* gobj);
bool ftFx_SpecialN_CheckRemoveBlaster(HSD_GObj* gobj);
s32 ftFx_SpecialN_GetBlasterAction(HSD_GObj* gobj);
bool ftFx_SpecialN_CheckBlasterAction(HSD_GObj* gobj);
void ftFx_SpecialN_ClearBlaster(HSD_GObj* gobj);
void ftFx_SpecialN_RemoveBlaster(HSD_GObj* gobj);
void ftFx_SpecialN_CreateBlasterShot(HSD_GObj* gobj);
void ftFx_SpecialN_Enter(HSD_GObj* gobj);
void ftFx_SpecialAirN_Enter(HSD_GObj* gobj);
void ftFx_SpecialNStart_Anim(HSD_GObj* gobj);
void ftFx_SpecialNLoop_Anim(HSD_GObj* gobj);
void ftFx_SpecialNEnd_Anim(HSD_GObj* gobj);
void ftFx_SpecialAirNStart_Anim(HSD_GObj* gobj);
void ftFx_SpecialAirNLoop_Anim(HSD_GObj* gobj);
void ftFx_SpecialAirNEnd_Anim(HSD_GObj* gobj);
void ftFx_SpecialNStart_IASA(HSD_GObj* gobj);
void ftFx_SpecialNLoop_IASA(HSD_GObj* gobj);
void ftFx_SpecialNEnd_IASA(HSD_GObj* gobj);
void ftFx_SpecialAirNStart_IASA(HSD_GObj* gobj);
void ftFx_SpecialAirNLoop_IASA(HSD_GObj* gobj);
void ftFx_SpecialAirNEnd_IASA(HSD_GObj* gobj);
void ftFx_SpecialNStart_Phys(HSD_GObj* gobj);
void ftFx_SpecialNLoop_Phys(HSD_GObj* gobj);
void ftFx_SpecialNEnd_Phys(HSD_GObj* gobj);
void ftFx_SpecialAirNStart_Phys(HSD_GObj* gobj);
void ftFx_SpecialAirNLoop_Phys(HSD_GObj* gobj);
void ftFx_SpecialAirNEnd_Phys(HSD_GObj* gobj);
void ftFx_SpecialNStart_Coll(HSD_GObj* gobj);
void ftFx_SpecialNLoop_Coll(HSD_GObj* gobj);
void ftFx_SpecialNEnd_Coll(HSD_GObj* gobj);
void ftFx_SpecialAirNStart_Coll(HSD_GObj* gobj);
void ftFx_SpecialAirNLoop_Coll(HSD_GObj* gobj);
void ftFx_SpecialAirNEnd_Coll(HSD_GObj* gobj);

// Throws (ThrowB/ThrowHi/ThrowL)

void ftFx_Throw_Anim(HSD_GObj* gobj);

// Up Special - Firefox (SpecialHi)

/// Create Firefox/Firebird Launch GFX
void ftFx_SpecialHi_CreateLaunchGFX(HSD_GObj* gobj);

/// Create Firefox/Firebird Charge GFX
void ftFx_SpecialHi_CreateChargeGFX(HSD_GObj* gobj);

/// Fox & Falco's grounded Firefox/Firebird Start Motion State handler
void ftFx_SpecialHi_Enter(HSD_GObj* gobj);

/// Fox & Falco's aerial Firefox/Firebird Start Motion State handler
void ftFx_SpecialAirHiStart_Enter(HSD_GObj* gobj);

void ftFox_SpecialHi_RotateModel(HSD_GObj* gobj);

/// Fox & Falco's grounded Firefox/Firebird Start Animation callback
void ftFx_SpecialHiHold_Anim(HSD_GObj* gobj);

/// Fox & Falco's aerial Firefox/Firebird Start Animation callback
void ftFx_SpecialHiHoldAir_Anim(HSD_GObj* gobj);

/// Fox & Falco's grounded Firefox/Firebird Start IASA callback
void ftFx_SpecialHiHold_IASA(HSD_GObj* gobj);

/// Fox & Falco's aerial Firefox/Firebird Start IASA callback
void ftFx_SpecialHiHoldAir_IASA(HSD_GObj* gobj);

/// Fox & Falco's grorunded Firefox/Firebird Start Physics callback
void ftFx_SpecialHiHold_Phys(HSD_GObj* gobj);

/// Fox & Falco's aerial Firefox/Firebird Start Physics callback
void ftFx_SpecialHiHoldAir_Phys(HSD_GObj* gobj);

/// Fox & Falco's grounded Firerfox/Firebird Start Collision callback
void ftFx_SpecialHiHold_Coll(HSD_GObj* gobj);

/// Fox & Falco's aerial Firefox/Firebird Start Collision callback
void ftFx_SpecialHiHoldAir_Coll(HSD_GObj* gobj);

/// Fox & Falco's ground -> air Firefox/Firebird Start Motion State handler
void ftFx_SpecialHiHold_GroundToAir(HSD_GObj* gobj);

/// Fox & Falco's air -> ground Firefox/Firebird Start Motion State handler
void ftFx_SpecialHiHoldAir_AirToGround(HSD_GObj* gobj);

/// Fox & Falco's grounded Firefox/Firebird Launch Animation callback
void ftFx_SpecialHi_Anim(HSD_GObj* gobj);

/// Fox & Falco's aerial Firefox/Firebird Launch Animation callback
void ftFx_SpecialAirHi_Anim(HSD_GObj* gobj);

/// Fox & Falco's grounded Firefox/Firebird Launch IASA callback
void ftFx_SpecialHi_IASA(HSD_GObj* gobj);

/// Fox & Falco's aerial Firerfox/Firebird Launch IASA callback
void ftFx_SpecialAirHi_IASA(HSD_GObj* gobj);

/// Fox & Falco's grounded Firefox/Firebird Launch Physics callback
void ftFx_SpecialHi_Phys(HSD_GObj* gobj);

/// Fox & Falco's aerial Firefox/Firebird Launch Physics callback
void ftFx_SpecialAirHi_Phys(HSD_GObj* gobj);

/// Fox & Falco's grounded Firefox/Firebird Launch Collision callback
void ftFx_SpecialHi_Coll(HSD_GObj* gobj);

/// Fox & Falco's aerial Firefox/Firebird Launch Collision callback
void ftFx_SpecialAirHi_Coll(HSD_GObj* gobj);

/// Fox & Falco's Firefox/Firebird Launch ground -> air Motion State handler
void ftFx_SpecialHi_GroundToAir(HSD_GObj* gobj);

/// Fox & Falco's grounded Firefox/Firebird Launch Motion State handler
void ftFx_SpecialAirHi_AirToGround(HSD_GObj* gobj);

void ftFx_SpecialAirHi_Enter(HSD_GObj* gobj);
void ftFx_SpecialHiLanding_Anim(HSD_GObj* gobj);
void ftFx_SpecialHiFall_Anim(HSD_GObj* gobj);
void ftFx_SpecialHiLanding_IASA(HSD_GObj* gobj);
void ftFx_SpecialHiFall_IASA(HSD_GObj* gobj);
void ftFx_SpecialHiLanding_Phys(HSD_GObj* gobj);
void ftFx_SpecialHiFall_Phys(HSD_GObj* gobj);
void ftFx_SpecialHiLanding_Coll(HSD_GObj* gobj);
void ftFx_SpecialHiFall_Coll(HSD_GObj* gobj);
void ftFx_SpecialHiFall_Enter(HSD_GObj* gobj);
void ftFx_SpecialHiFall_AirToGround(HSD_GObj* gobj);
void ftFx_SpecialHiLanding_GroundToAir(HSD_GObj* gobj);
void ftFx_SpecialHiBound_Anim(HSD_GObj* gobj);
void ftFx_SpecialHiBound_IASA(HSD_GObj* gobj);
void ftFx_SpecialHiBound_Phys(HSD_GObj* gobj);
void ftFx_SpecialHiBound_Coll(HSD_GObj* gobj);
void ftFx_SpecialHiBound_Enter(HSD_GObj* gobj);

// Down Special - Reflector (SpecialLw)

/// Create Reflector Loop GFX
void ftFx_SpecialLw_CreateLoopGFX(HSD_GObj* gobj);

void ftFx_SpecialLw_CreateStartGFX(HSD_GObj* gobj);

/// Create Reflector Deflect GFX
void ftFx_SpecialLw_CreateReflectGFX(HSD_GObj* gobj);

/// Fox & Falco's grounded Reflector Start Motion State handler
void ftFx_SpecialLw_Enter(HSD_GObj* gobj);

/// Fox & Falco's aerial Reflector Start Motion State handler
void ftFx_SpecialAirLw_Enter(HSD_GObj* gobj);

void ftFx_SpecialLwStart_Anim(HSD_GObj* gobj);
void ftFx_SpecialAirLwStart_Anim(HSD_GObj* gobj);
void ftFx_SpecialLwStart_IASA(HSD_GObj* gobj);
void ftFx_SpecialAirLwStart_IASA(HSD_GObj* gobj);

/// Check for drop-through platform while in @c SpecialLwStart
bool ftFx_SpecialLwStart_CheckPass(HSD_GObj* gobj);

/// Fox & Falco's Reflector Start Platform Drop Motion State handler
void ftFx_SpecialLwStart_Pass(HSD_GObj* gobj);

/// Fox & Falco's Reflector Start Physics callback
void ftFx_SpecialLwStart_Phys(HSD_GObj* gobj);

/// Fox & Falco's aerial Reflector Start Physics callback
void ftFx_SpecialAirLwStart_Phys(HSD_GObj* gobj);

/// Fox & Falco's grounded Reflector Start Collision callback
void ftFx_SpecialLwStart_Coll(HSD_GObj* gobj);

/// Fox & Falco's aerial Reflector Start Collision callback
void ftFx_SpecialAirLwStart_Coll(HSD_GObj* gobj);

/// Fox & Falco's ground -> air Reflector Start Motion State handler
void ftFx_SpecialLwStart_GroundToAir(HSD_GObj* gobj);

/// Fox & Falco's air -> ground Reflector Start Motion State handler
void ftFx_SpecialAirLwStart_AirToGround(HSD_GObj* gobj);

/// Fox & Falco's grounded Reflector Loop Animation callback
void ftFx_SpecialLwLoop_Anim(HSD_GObj* gobj);

/// Fox & Falco's aerial Reflector Loop Animation callback
void ftFx_SpecialAirLwLoop_Anim(HSD_GObj* gobj);

/// Fox & Falco's grounded Reflector Loop IASA callback
void ftFx_SpecialLwLoop_IASA(HSD_GObj* gobj);

/// Fox & Falco's aerial Reflector Loop IASA callback
void ftFx_SpecialAirLwLoop_IASA(HSD_GObj* gobj);

/// Fox & Falco's grounded Reflector Loop Physics callback
void ftFx_SpecialLwLoop_Phys(HSD_GObj* gobj);

/// Fox & Falco's aerial Reflector Loop Physics callback
void ftFx_SpecialAirLwLoop_Phys(HSD_GObj* gobj);

/// Fox & Falco's grounded Reflector Loop Collision callback
void ftFx_SpecialLwLoop_Coll(HSD_GObj* gobj);

/// Fox & Falco's aerial Reflector Loop Collision callback
void ftFx_SpecialAirLwLoop_Coll(HSD_GObj* gobj);

/// Fox & Falco's grounded Reflector Turn Animation callback
void ftFx_SpecialLwTurn_Anim(HSD_GObj* gobj);

/// Fox & Falco's aerial Reflector Turn Animation callback
void ftFx_SpecialAirLwTurn_Anim(HSD_GObj* gobj);

void ftFx_SpecialLwTurn_IASA(HSD_GObj* gobj);
void ftFx_SpecialAirLwTurn_IASA(HSD_GObj* gobj);
void ftFx_SpecialLwTurn_Phys(HSD_GObj* gobj);
void ftFx_SpecialAirLwTurn_Phys(HSD_GObj* gobj);
void ftFx_SpecialLwTurn_Coll(HSD_GObj* gobj);
void ftFx_SpecialAirLwTurn_Coll(HSD_GObj* gobj);
void ftFx_SpecialLwTurn_GroundToAir(HSD_GObj* gobj);
void ftFx_SpecialAirLwTurn_GroundToAir(HSD_GObj* gobj);
bool ftFx_SpecialLwTurn_Check(HSD_GObj* gobj);
bool ftFx_SpecialLwHit_Check(HSD_GObj* gobj);
void ftFx_SpecialLwHit_Anim(HSD_GObj* gobj);
void ftFx_SpecialAirLwHit_Anim(HSD_GObj* gobj);
void ftFx_SpecialLwHit_IASA(HSD_GObj* gobj);
void ftFx_SpecialAirLwHit_IASA(HSD_GObj* gobj);
void ftFx_SpecialLwHit_Phys(HSD_GObj* gobj);
void ftFx_SpecialAirLwHit_Phys(HSD_GObj* gobj);
void ftFx_SpecialLwHit_Coll(HSD_GObj* gobj);
void ftFx_SpecialAirLwHit_Coll(HSD_GObj* gobj);
void ftFx_SpecialLwHit_GroundToAir(HSD_GObj* gobj);
void ftFx_SpecialAirLwHit_AirToGround(HSD_GObj* gobj);
void ftFx_SpecialLwHit_SetCall(HSD_GObj* gobj);
void ftFx_SpecialLwHit_Enter(HSD_GObj* gobj);
void ftFx_SpecialLwEnd_Anim(HSD_GObj* gobj);
void ftFx_SpecialAirLwEnd_Anim(HSD_GObj* gobj);
void ftFx_SpecialLwEnd_IASA(HSD_GObj* gobj);
void ftFx_SpecialAirLwEnd_IASA(HSD_GObj* gobj);
void ftFx_SpecialLwEnd_Phys(HSD_GObj* gobj);
void ftFx_SpecialAirLwEnd_Phys(HSD_GObj* gobj);
void ftFx_SpecialLwEnd_Coll(HSD_GObj* gobj);
void ftFx_SpecialAirLwEnd_Coll(HSD_GObj* gobj);
void ftFx_SpecialLwEnd_GroundToAir(HSD_GObj* gobj);
void ftFx_SpecialAirLwEnd_AirToGround(HSD_GObj* gobj);
void ftFx_SpecialLwEnd_Enter(HSD_GObj* gobj);
void ftFx_SpecialAirLwEnd_Enter(HSD_GObj* gobj);

// Side Special - Fox Illusion/Falco Phantasm (SpecialS)

void ftFx_SpecialS_CreateGFX(HSD_GObj* gobj);
bool ftFx_SpecialS_CheckGhostRemove(HSD_GObj* gobj);
u32 ftFx_SpecialS_GetCmdVar2(HSD_GObj* gobj);
void ftFx_SpecialS_CopyGhostPosIndexed(HSD_GObj* gobj, s32 index,
                                       Vec3* ghostPos);
f32 ftFx_SpecialS_ReturnFloatVarIndexed(HSD_GObj* gobj, s32 index);
void ftFx_SpecialSStart_Enter(HSD_GObj* gobj);
void ftFx_SpecialAirSStart_Enter(HSD_GObj* gobj);
void ftFx_SpecialSStart_Anim(HSD_GObj* gobj);
void ftFx_SpecialAirSStart_Anim(HSD_GObj* gobj);
void ftFx_SpecialSStart_IASA(HSD_GObj* gobj);
void ftFx_SpecialAirSStart_IASA(HSD_GObj* gobj);
void ftFx_SpecialSStart_Phys(HSD_GObj* gobj);
void ftFx_SpecialAirSStart_Phys(HSD_GObj* gobj);
void ftFx_SpecialSStart_Coll(HSD_GObj* gobj);
void ftFx_SpecialAirSStart_Coll(HSD_GObj* gobj);
void ftFx_SpecialSStart_GroundToAir(HSD_GObj* gobj);
void ftFx_SpecialAirSStart_AirToGround(HSD_GObj* gobj);
void ftFx_SpecialS_Anim(HSD_GObj* gobj);
void ftFx_SpecialAirS_Anim(HSD_GObj* gobj);
void ftFx_SpecialS_IASA(HSD_GObj* gobj);
void ftFx_SpecialAirS_IASA(HSD_GObj* gobj);
void ftFx_SpecialS_Phys(HSD_GObj* gobj);
void ftFx_SpecialAirS_Phys(HSD_GObj* gobj);
void ftFx_SpecialS_Coll(HSD_GObj* gobj);
void ftFx_SpecialAirS_Coll(HSD_GObj* gobj);
void ftFx_SpecialS_GroundToAir(HSD_GObj* gobj);
void ftFx_SpecialAirS_AirToGround(HSD_GObj* gobj);
void ftFx_SpecialS_Enter(HSD_GObj* gobj);
void ftFx_SpecialAirS_Enter(HSD_GObj* gobj);
void ftFx_SpecialSEnd_Anim(HSD_GObj* gobj);
void ftFx_SpecialAirSEnd_Anim(HSD_GObj* gobj);
void ftFx_SpecialSEnd_IASA(HSD_GObj* gobj);
void ftFx_SpecialAirSEnd_IASA(HSD_GObj* gobj);
void ftFx_SpecialSEnd_Phys(HSD_GObj* gobj);
void ftFx_SpecialAirSEnd_Phys(HSD_GObj* gobj);
void ftFx_SpecialSEnd_Coll(HSD_GObj* gobj);
void ftFx_SpecialAirSEnd_Coll(HSD_GObj* gobj);
void ftFx_SpecialSEnd_Enter(HSD_GObj* gobj);
void ftFx_SpecialAirSEnd_Enter(HSD_GObj* gobj);
void ftFx_Init_LoadSpecialAttrs(HSD_GObj*);
void ftFx_Init_OnLoadForFalco(Fighter* fp);

void ftFx_Init_OnLoad(HSD_GObj* gobj);
void ftFx_Init_OnKnockbackEnter(HSD_GObj* gobj);
void ftFx_Init_OnKnockbackExit(HSD_GObj* gobj);
