#ifndef __GALE01_1601C4
#define __GALE01_1601C4

#include <placeholder.h>

#include <baselib/forward.h>

#include "gm_1601.h" // IWYU pragma: export
#include "platform.h"

#include "gm/types.h"

#include <dolphin/mtx.h>

struct lbl_8046B488_t {
    /* 0x000 */ char pad_0[0x10];
    /* 0x010:0 */ u8 unk_10_b0 : 1;
    /* 0x010:1 */ u8 unk_10_b1 : 1;
    /* 0x010:2 */ u8 unk_10_b2 : 1;
    /* 0x010:3 */ u8 unk_10_b3 : 1;
    /* 0x010:4 */ u8 unk_10_b4 : 1;
    /* 0x010:5 */ u8 unk_10_b5 : 1;
    /* 0x010:6 */ u8 unk_10_b6 : 1;
    /* 0x010:7 */ u8 unk_10_b7 : 1;
    /* 0x011 */ char pad_11[0x1CF]; /* maybe part of unk_10[0x1D0]? */
}; /* size = 0x1E0 */
STATIC_ASSERT(sizeof(struct lbl_8046B488_t) == 0x1E0);

struct fn_80166CBC_arg0_t {
    /* +0 */ char pad_0[0x5E];
    /* +5E */ u8 x5E;
    /* +5F */ char pad_5F[0xA8 - 0x5F];
};
STATIC_ASSERT(sizeof(struct fn_80166CBC_arg0_t) == 0xA8);

struct lbl_8046DBE8_t {
    /*  +0 */ char pad_0[0x94];
    /* +94 */ int x94;
    /* +98 */ char pad_98[0x5A8 - 0x98];
};
STATIC_ASSERT(sizeof(struct lbl_8046DBE8_t) == 0x5A8);

struct lbl_80472D28_t {
    /*   +0 */ char pad_0[0x104];
    /* +104 */ int x104;
};

struct lbl_80472E48_t {
    /* 0x00 */ char pad_0[4];
    /* 0x04 */ s32 unk_4;        /* inferred */
    /* 0x08 */ s32 unk_8;        /* inferred */
    /* 0x0C */ char pad_C[0x74]; /* maybe part of unk_8[0x1E]? */
}; /* size = 0x80 */
STATIC_ASSERT(sizeof(struct lbl_80472E48_t) == 0x80);

struct lbl_803D9D20_t {
    /*  +0 */ char pad_0[0xB0];
    /* +B0 */ HSD_CObj* cobj;
    /* +B4 */ char pad_B4[0xD8 - 0xB4];
    /* +D8 */ Vec3 eye_position;
    /* +E4 */ char pad_E4[0xEC - 0xE4];
    /* +EC */ Vec3 interest;
};

struct lbl_8046B668_t {
    /* 0x00 */ char pad_0[0x1C];
    /* 0x1C */ s8 unk_1C;         /* inferred */
    /* 0x1D */ char pad_1D[0x1B]; /* maybe part of unk_1C[0x1C]? */
}; /* size = 0x38 */
STATIC_ASSERT(sizeof(struct lbl_8046B668_t) == 0x38);

struct lbl_803D5A4C_t {
    /* +0 */ short x0;
    /* +2 */ short x2;
    /* +4 */ u32 x4;
};

struct lbl_80473700_t {
    /* +0 */ char pad_0[0x114];
};
STATIC_ASSERT(sizeof(struct lbl_80473700_t) == 0x114);

/* 160840 */ static u8 fn_80160840(u8 arg0);
/* 166A8C */ static f32 fn_80166A8C(Vec3*, Vec3*);
/* 166CBC */ static u8 fn_80166CBC(struct fn_80166CBC_arg0_t* arg0,
                                   ssize_t index);
/* 169364 */ static UNK_T fn_80169364(void);
/* 1693A8 */ static s32 fn_801693A8(void);
/* 16A1E4 */ static s32 fn_8016A1E4(void);
/* 1736DC */ static UNK_T gm_801736DC(void);
/* 174274 */ static int fn_80174274(void);
/* 17F294 */ static int fn_8017F294(void);
/* 3B75F8 */ static struct gmMainLib_8015ED8C_arg0_t lbl_803B75F8 = { 0 };
/* 3B7808 */ static s16 lbl_803B7808[0x3C / 2];
/* 3B7864 */ extern const U8Vec4 lbl_803B7864[9];
/* 3B7888 */ static u8 lbl_803B7888[0x1C];
/* 3B78A4 */ static u8 lbl_803B78A4[0x24];
/* 3B7930 */ static Vec2 const lbl_803B7930[0x114 / sizeof(Vec2)];
/* 3D5A4C */ static struct lbl_803D5A4C_t
    lbl_803D5A4C[0x80C / sizeof(struct lbl_803D5A4C_t)] = {
        { 0, 0x11, 0xFF000200 },
        { 1, 0x12, 0xFF000000 },
        { 2, 0x13, 0x7F010000 },
        { 3, 0x14, 0xFF000000 },
        { 4, 0x15, 0xFF000000 },
        { 5, 0x16, 0xFF000200 },
        { 6, 0x17, 0xFF010000 },
        { 7, 0x18, 0xFD010000 },
        { 8, 0x19, 0xFF000000 },
        { 9, 0x1A, 0xFF000000 },
        { 0xA, 0x1B, 0xFF010000 },
        { 0xB, 0x1C, 0xFF010000 },
        { 0xC, 0x1D, 0xFF000000 },
        { 0xD, 0x1E, 0xFF000000 },
        { 0xE, 0x1F, 0xFF000000 },
        { 0xF, 0x20, 0xFF000000 },
        { 0x10, 0x21, 0xFF000000 },
        { 0x11, 0x22, 0xFF000000 },
        { 0x12, 0x23, 0xFF000000 },
        { 0x13, 0x24, 0xFF010000 },
        { 0x14, 0x25, 0xFF000000 },
        { 0x15, 0x26, 0xFF000200 },
        { 0x16, 0x27, 0x9F000000 },
        { 0x17, 0x28, 0xFF000200 },
        { 0x18, 0x29, 0xFF000200 },
        { 0x19, 0x2A, 0xFF000000 },
        { 0x1A, 0x2B, 0xFF010000 },
        { 0x1B, 0x2C, 0xFF000000 },
        { 0x1C, 0x2D, 0xFF000000 },
        { 0x1D, 0x2E, 0xFF000000 },
        { 0x1E, 0x2F, 0xFF000000 },
        { 0x1F, 0x30, 0xFF000000 },
        { 0x20, 0x31, 0xFF000000 },
        { 0x21, 0x33, 0xFF000200 },
        { 0x22, 0x32, 0xFF000200 },
        { 0x23, 0x34, 0xFF000000 },
        { 0x24, 0x35, 0xFF000200 },
        { 0x25, 0x36, 0xFF000000 },
        { 0x26, 0x37, 0xFF000000 },
        { 0x27, 0x38, 0xFF000000 },
        { 0x28, 0x39, 0xFF000000 },
        { 0x29, 0x3A, 0xFF010000 },
        { 0x2A, 0x3B, 0xFD010000 },
        { 0x2B, 0x3C, 0xFF000000 },
        { 0x2C, 0x3D, 0xFF000000 },
        { 0x2D, 0x3E, 0xFF010000 },
        { 0x2E, 0x3F, 0x87000000 },
        { 0x2F, 0x40, 0x87000000 },
        { 0x30, 0x41, 0xFF000000 },
        { 0x31, 0x42, 0xFF000000 },
        { 0x32, 0x43, 0xFF000000 },
        { 0x33, 0x44, 0xFF000000 },
        { 0x34, 0x45, 0xFF000000 },
        { 0x35, 0x46, 0xFF000000 },
        { 0x36, 0x47, 0xFF000000 },
        { 0x37, 0x48, 0xFF000000 },
        { 0x38, 0x49, 0xFF000000 },
        { 0x39, 0x4A, 0xFF000000 },
        { 0x3A, 0x4B, 0xFF000000 },
        { 0x3B, 0x4C, 0xFF010000 },
        { 0x3C, 0x4D, 0xFF000000 },
        { 0x3D, 0x4E, 0xFF010000 },
        { 0x3E, 0x4F, 0xFF010000 },
        { 0x3F, 0x50, 0xFF010000 },
        { 0x40, 0x51, 0xFF010000 },
        { 0x41, 0x52, 0xFF010000 },
        { 0x42, 0x53, 0xFF000000 },
        { 0x43, 0x54, 0xFF010000 },
        { 0x44, 0x55, 0xFF010000 },
        { 0x45, 0x56, 0xFF010000 },
        { 0x46, 0x57, 0xFF010000 },
        { 0x47, 0x58, 0xFF000000 },
        { 0x48, 0x59, 0xFF010000 },
        { 0x49, 0x5A, 0xFF010000 },
        { 0x4A, 0x5B, 0xFF010000 },
        { 0x4B, 0x5C, 0xFF010000 },
        { 0x4C, 0x5D, 0xFF010000 },
        { 0x4D, 0x5E, 0xFF010000 },
        { 0x4E, 0x60, 0x02000000 },
        { 0x4F, 0x61, 0xFF000000 },
        { 0x50, 0x62, 0xDF000000 },
        { 0x51, 0x63, 0xFF000000 },
        { 0x52, 0x64, 0xFF000000 },
        { 0x53, 0x65, 0xFF000000 },
        { 0x54, 0x66, 0xFF010000 },
        { 0x55, 0x67, 0xDF000000 },
        { 0x56, 0x68, 0xFF010000 },
        { 0x57, 0x69, 0xFF000000 },
        { 0x58, 0x6A, 0xFF010000 },
        { 0x59, 0x6B, 0x1F000000 },
        { 0x5A, 0x6C, 0xFF000000 },
        { 0x5B, 0x6D, 0xFF010000 },
        { 0x5C, 0x6E, 0xFF010000 },
        { 0x5D, 0x6F, 0xFF000000 },
        { 0x5E, 0x70, 0xFF000000 },
        { 0x5F, 0x71, 0xFD010000 },
        { 0x60, 0x72, 0xFD000000 },
        { 0x61, 0x74, 0x02000000 },
        { 0x62, 0x75, 0xDF000000 },
        { 0x63, 0x76, 0xDF000000 },
        { 0x64, 0x77, 0xDF000000 },
        { 0x65, 0x78, 0x02000000 },
        { 0x66, 0x7A, 0xFF000000 },
        { 0x67, 0x7B, 0x02000000 },
        { 0x68, 0x7C, 0x02000000 },
        { 0x69, 0x7D, 0x87000000 },
        { 0x6A, 0x7E, 0x87000000 },
        { 0x6B, 0x7F, 0x1F000000 },
        { 0x6C, 0x80, 0x87000000 },
        { 0x6D, 0x82, 0xFF010100 },
        { 0x6E, 0x84, 0xFF010100 },
        { 0x6F, 0x85, 0xFF010100 },
        { 0x70, 0x86, 0xFF010100 },
        { 0x71, 0x87, 0xFF010100 },
        { 0x72, 0x88, 0xFF010100 },
        { 0x73, 0x89, 0x02010100 },
        { 0x74, 0x8A, 0xFF010100 },
        { 0x75, 0x8B, 0xFF010100 },
        { 0x76, 0x8C, 0xFF010100 },
        { 0x77, 0x8D, 0xFF010100 },
        { 0x78, 0x8E, 0xFF010100 },
        { 0x79, 0x8F, 0xFF010100 },
        { 0x7A, 0x90, 0xFF010100 },
        { 0x7B, 0x91, 0xFF010100 },
        { 0x7C, 0x92, 0xFF010100 },
        { 0x7D, 0x93, 0xFF010100 },
        { 0x7E, 0x94, 0xFF010100 },
        { 0x7F, 0x95, 0xFF010100 },
        { 0x80, 0x96, 0xFF010100 },
        { 0x81, 0x97, 0xFF010000 },
        { 0x82, 0x98, 0x02010000 },
        { 0x83, 0x99, 0x02010000 },
        { 0x84, 0x9A, 0x02010000 },
        { 0x85, 0x9B, 0x02010000 },
        { 0x86, 0x9C, 0x02000000 },
        { 0x87, 0x9D, 0x02010000 },
        { 0x88, 0x9E, 0x02010000 },
        { 0x89, 0x9F, 0xFF000000 },
        { 0x8A, 0xA0, 0xFF000000 },
        { 0x8B, 0xA1, 0xFF000000 },
        { 0x8C, 0xA2, 0xFF000000 },
        { 0x8D, 0xA3, 0xFF000000 },
        { 0x8E, 0xA4, 0xFD000000 },
        { 0x8F, 0xA5, 0xFD000000 },
        { 0x90, 0xA6, 0xFD000000 },
        { 0x91, 0xA7, 0xFF000000 },
        { 0x92, 0xA8, 0xDF000000 },
        { 0x93, 0xA9, 0x1F000000 },
        { 0x94, 0xAA, 0xFF000200 },
        { 0x95, 0xAB, 0xFF000200 },
        { 0x96, 0xAC, 0xFF000200 },
        { 0x97, 0xAD, 0xFF010100 },
        { 0x98, 0xAE, 0xFF010100 },
        { 0x99, 0xAF, 0x02010000 },
        { 0x9A, 0xB0, 0xFF010000 },
        { 0x9B, 0xB1, 0xFF010000 },
        { 0x9C, 0xB2, 0xFF010000 },
        { 0x9D, 0xB3, 0xFF010000 },
        { 0x9E, 0xB6, 0x02000000 },
        { 0x9F, 0xB7, 0xFF000000 },
        { 0xA0, 0xB8, 0xFF000000 },
        { 0xA1, 0xB9, 0xFF000000 },
        { 0xA2, 0xBA, 0xFF000000 },
        { 0xA3, 0xBB, 0xFF000000 },
        { 0xA4, 0xBC, 0xFF000000 },
        { 0xA5, 0xBD, 0xFF000000 },
        { 0xA6, 0xBE, 0xFF000000 },
        { 0xA7, 0xBF, 0xFF000000 },
        { 0xA8, 0xC0, 0xFF000000 },
        { 0xA9, 0xC1, 0xFF000000 },
        { 0xAA, 0xC2, 0xFF000000 },
        { 0xAB, 0xC3, 0xFF000000 },
        { 0xAC, 0xC4, 0xFF010100 },
        { 0xAD, 0xC5, 0xFF010100 },
        { 0xAE, 0xC6, 0xFF000000 },
        { 0xAF, 0xC7, 0xFF000000 },
        { 0xB0, 0xC8, 0xFF010100 },
        { 0xB1, 0xC9, 0xFF010100 },
        { 0xB2, 0xCA, 0xFF010100 },
        { 0xB3, 0xCB, 0xFF000000 },
        { 0xB4, 0xCC, 0xFF000000 },
        { 0xB5, 0xCD, 0xFF000000 },
        { 0xB6, 0xCE, 0xFF010000 },
        { 0xB7, 0xCF, 0xFF010100 },
        { 0xB8, 0xD0, 0xFF010100 },
        { 0xB9, 0xD1, 0xFF010100 },
        { 0xBA, 0xD2, 0xFF010100 },
        { 0xBB, 0xD3, 0xFF010100 },
        { 0xBC, 0xD4, 0xFF000000 },
        { 0xBD, 0xD5, 0xFF000000 },
        { 0xBE, 0xD6, 0xFF000000 },
        { 0xBF, 0xD7, 0xFF010100 },
        { 0xC0, 0xD8, 0xFF010100 },
        { 0xC1, 0xD9, 0xFF010100 },
        { 0xC2, 0xDA, 0xFF010000 },
        { 0xC3, 0xDB, 0xFF010000 },
        { 0xC4, 0xDC, 0xFF010000 },
        { 0xC5, 0xDD, 0xFF010000 },
        { 0xC6, 0xDE, 0xFF010100 },
        { 0xC7, 0xDF, 0xFF010000 },
        { 0xC8, 0xE0, 0xFF010000 },
        { 0xC9, 0xE1, 0xFF010000 },
        { 0xCA, 0xE2, 0xFF010000 },
        { 0xCB, 0xE3, 0xFF010100 },
        { 0xCC, 0xE4, 0xFF000000 },
        { 0xCD, 0xE5, 0xFF000000 },
        { 0xCE, 0xF0, 0xFF010000 },
        { 0xCF, 0xF1, 0xFF010000 },
        { 0xD0, 0xF2, 0xFF010000 },
        { 0xD1, 0xF3, 0xFF010000 },
        { 0xD2, 0xF4, 0xFF010000 },
        { 0xD3, 0xF5, 0xFF010000 },
        { 0xD4, 0xF6, 0xFF010000 },
        { 0xD5, 0xF7, 0xFF010000 },
        { 0xD6, 0xF8, 0xFF010000 },
        { 0xD7, 2, 0x02000000 },
        { 0xD8, 3, 0x02000000 },
        { 0xD9, 4, 0x02000000 },
        { 0xDA, 5, 0x02000000 },
        { 0xDB, 6, 0x02000000 },
        { 0xDC, 7, 0x02000000 },
        { 0xDD, 8, 0x02000000 },
        { 0xDE, 9, 0x02000000 },
        { 0xDF, 0xA, 0x02000000 },
        { 0xE0, 0xB, 0x02000000 },
        { 0xE1, 0xC, 0x02000000 },
        { 0xE2, 0xD, 0x02000000 },
        { 0xE3, 0xE, 0x02010000 },
        { 0xE4, 0xF, 0x02010000 },
        { 0xE5, 0x10, 0x02010000 },
        { 0xE6, 0xE6, 0xFD000000 },
        { 0xE7, 0xE7, 0xFD000000 },
        { 0xE8, 0xE8, 0xFD000000 },
        { 0xE9, 0xE9, 0xFD000000 },
        { 0xEA, 0xEA, 0xFD000000 },
        { 0xEB, 0xEB, 0xFD000000 },
        { 0xEC, 0xEC, 0xFD000000 },
        { 0xED, 0xED, 0xFD000000 },
        { 0xEE, 0xEE, 0xFD000000 },
        { 0xEF, 0xEF, 0xFD000000 },
        { 0xF0, 0xF9, 0xFD000000 },
        { 0xF1, 0xFA, 0xFD000000 },
        { 0xF2, 0xFB, 0xFD000000 },
        { 0xF3, 0xFC, 0xFD000000 },
        { 0xF4, 0xFD, 0xFD000000 },
        { 0xF5, 0xFE, 0xFD000000 },
        { 0xF6, 0xFF, 0xFD000000 },
        { 0xF7, 0x100, 0xFD000000 },
        { 0xF8, 0x101, 0xFD000000 },
        { 0xF9, 0x5F, 0x02000000 },
        { 0xFA, 0x73, 0x02000000 },
        { 0xFB, 0x79, 0x02000000 },
        { 0xFC, 0x81, 0x87000000 },
        { 0xFD, 0x83, 0x14000000 },
        { 0xFE, 0xB4, 0x87000000 },
        { 0xFF, 0xB5, 0x87000000 },
        { 0x29A, 0, 0 },
    };
/* 3D9D20 */ static struct lbl_803D9D20_t lbl_803D9D20;
/* 46B488 */ static struct lbl_8046B488_t lbl_8046B488;
/* 46B668 */ static struct lbl_8046B668_t lbl_8046B668;
/* 46B6A0 */ static lbl_8046B6A0_t lbl_8046B6A0;
/* 46DBD8 */ static UNK_T lbl_8046DBD8[4];
/* 46DBE8 */ static struct lbl_8046DBE8_t lbl_8046DBE8;
/* 46E38C */ static int lbl_8046E38C[4];
/* 472C30 */ static UNK_T lbl_80472C30[32];
/* 472CB0 */ static UNK_T lbl_80472CB0[30];
/* 472D28 */ static struct lbl_80472D28_t lbl_80472D28;
/* 472E48 */ static struct lbl_80472E48_t lbl_80472E48;
/* 472EC8 */ static int lbl_80472EC8[4];
/* 473594 */ static u8 lbl_80473594[0x14];
/* 473700 */ static int lbl_80473700[69];
/* 4771C4 */ static UNK_T gm_804771C4[349];
/* 4D4190 */ static s32 lbl_804D4190 = 0xFFFFFFFF;
/* 4D6598 */ static s8 lbl_804D6598;
/* 4D65A0 */ static s8 lbl_804D65A0;

#define NUM_UNLOCKABLE_CHARACTERS 11

#endif
