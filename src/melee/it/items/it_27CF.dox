#ifndef GALE01_27CF30
#define GALE01_27CF30

#include <platform.h>
#include "ft/forward.h"
#include <dolphin/mtx.h>
#include <baselib/forward.h>

#include "ftSeak/types.h"
#include "it/types.h"

#include <placeholder.h>
#include <baselib/gobj.h>
#include <baselib/jobj.h>

void it_8027D730(Item_GObj*);
HSD_GObj* it_80283AE4(s32, Vec3*, s32);
HSD_GObj* it_802841B4(s32, Vec3*, s32);
HSD_GObj* it_802896CC(Vec3*);
void it_8028FE90(Item_GObj*);

void it_8028428C(Item_GObj*);
void it_80283BD4(Item_GObj*);
HSD_GObj* it_80286088(s32);
HSD_GObj* it_80290938(HSD_JObj*);
HSD_GObj* it_80291BE0(Vec3*);
HSD_GObj* it_80292D48(Vec3*);
void it_8029D968(Item_GObj*);
void it_802D09D0(Item_GObj*);

/// @attention Above this line, symbols are placed correctly.

void it_80294E78(Item_GObj*, f32);
HSD_GObj* it_8029A748(Item_GObj*, Vec3*, u8, f32);
void it_8029A89C(Item_GObj*, f32);
void it_8029A8F4(Item_GObj*, Vec3*, f32);
s32 it_802B1DEC(u32);
u32 it_802B1DF8(Item_GObj*, Vec3*, Vec3*, s32, s32, s32);
s32 it_802B1FC8(u32);
void it_802B1FE8(u32, Vec3*);
void it_802B56E4(Item_GObj*, Vec3*, f32, f32, f32);
HSD_GObj* it_802C8B28(Item_GObj*, Vec3*, u32, f32);
void it_802D8618(s32, Vec3*, s32, s32);
u32 it_802F0340(Item_GObj*, Vec3*, Vec3*, u32, u32, f32);
void it_802F046C(s32);
void it_802F0AE0(Item_GObj* fighter_gobj, Vec3*, Vec3*, enum_t, bool,
                 f32 facing_dir, f32, f32);

/// @todo @c arg0 is likely a @c HSD_GObj*.
void it_802C0DBC(u32 arg0);

u32 it_802C0850(Item_GObj*, Vec3*, u32, s32, f32 facing_direction);
void it_802C8C34(Item_GObj*);

void it_802AE1D0(Item_GObj*);
void it_802AEAB4(Item_GObj*);
HSD_GObj* it_802AE8A8(f32, HSD_GObj*, Vec3*, s32, s32);
void it_802ADDD0(Item_GObj*, s32);
void it_802AE538(Item_GObj*);
HSD_GObj* it_802C61F4(Item_GObj*, Vec3*, s32, f32);
void it_802C6328(Item_GObj*);
void it_802C6374(Item_GObj*);
void it_802C6394(Item_GObj*);
void it_802C6430(Item_GObj*);
void it_802C6458(Item_GObj*);
void it_802C6480(Item_GObj*);
void it_802C64A8(Item_GObj*);
HSD_GObj* it_802C6C38(Item_GObj*, Vec3*, enum_t part, f32);
void it_802C7158(Item_GObj*);
void it_802C7074(Item_GObj*);
void it_802C7424(Item_GObj*);
void it_802C6E50(Item_GObj*);
void it_802C6D6C(Item_GObj*);
HSD_GObj* it_802C6F40(Item_GObj*, Vec3*, s32, f32);
HSD_GObj* it_802C65E4(Item_GObj*, Vec3*, s32, f32);
HSD_GObj* it_802C68F8(Item_GObj*, Vec3*, s32, f32);
void it_802C6A2C(Item_GObj*);
void it_802C6A78(Item_GObj*);
void it_802C6A98(Item_GObj*);
HSD_GObj* it_802C8038(Item_GObj*, Vec3*, s32, s32, f32, f32);
HSD_GObj* it_802C7D60(Item_GObj*, Vec3*, s32, f32);
void it_802C7E94(Item_GObj*);
void it_802C7EE0(Item_GObj*);
void it_802C7F00(Item_GObj*);
HSD_GObj* it_802C837C(Item_GObj*, Vec3*, enum_t, u32, f32);
HSD_GObj* it_802C7774(f32, HSD_GObj*, Vec3*, s32, u32);
void it_8028FAF4(Item_GObj*, Vec3*);
void it_802C7A84(Item_GObj*);
void it_802C7AD0(Item_GObj*);
void it_802C7AF0(Item_GObj*);
void it_802C0510(Item_GObj*, Vec3*, s32, s32, f32 facing_dir);
HSD_GObj* it_802B2560(Item_GObj*, f32, Vec3*, long, u32);
void it_802B2674(Item_GObj*);
void it_802B26C0(Item_GObj*);
void it_802B26E0(Item_GObj*);
void it_802C49E0(Item_GObj*);
void it_802BFE5C(Item_GObj*, Vec3*, f32);
void it_802C0010(Item_GObj*, void*);
void it_802BE5D8(void*, f32);
void it_802BE958(void*);
void it_802BFEC4(void*);
HSD_GObj* it_802BE9D8(f32, HSD_GObj*, Vec3*, s32);
void it_802BE598(Item_GObj*);
void it_802BE5B8(Item_GObj*);
HSD_GObj* it_802AD478(Item_GObj*, Vec3*, s32, f32);
void it_802AD6B8(Item_GObj*);
void it_802AB3F0(Item_GObj*, void*, s32);

/// Spawn an item
HSD_GObj* it_802AB58C(Item_GObj* owner, Vec3* pos, f32 facing_dir);

void it_802AB9C0(Item_GObj*);
HSD_GObj* it_802AB568(Item_GObj*);
void it_802AAA50(Item_GObj*);
HSD_GObj* it_802AA8C0(Item_GObj*, Vec3*, s32, f32);
HSD_GObj* it_802AA7E4(Item_GObj*);
s32 it_802AA7F0(Item_GObj*);
void it_802AA054(Item_GObj*, Vec3*, Vec3*, f32, f32);
void it_802B338C(Item_GObj*, Vec3*, f32 facing_dir, u32);
void it_802B5974(Item_GObj*);
HSD_GObj* it_802B55C8(Item_GObj* owner, Vec3*, s32, s32, f32 facing_dir);
void it_802B62D0(Item_GObj*, Vec3* pos, bool, f32 facing_dir);

/// Destroys an item?
void it_802C3D44(Item_GObj*);
HSD_GObj* it_802C3BAC(Item_GObj*, Vec3*, f32 facing_dir, f32);

/// Clones an entity?
HSD_GObj* it_802C3AF0(Item_GObj*);
void it_802AE608(Item_GObj*);
void it_802C7340(Item_GObj*);
void it_802C6DB8(Item_GObj*);
void it_802C70C0(Item_GObj*);
void it_802C738C(Item_GObj*);
void it_802C6DD8(Item_GObj*);
void it_802C70E0(Item_GObj*);
void it_802C73AC(Item_GObj*);
void it_802C6718(Item_GObj*);
void it_802C6764(Item_GObj*);
void it_802C6784(Item_GObj*);
void it_802C8158(Item_GObj*);
void it_802C81C8(Item_GObj*);
void it_802C81E8(Item_GObj*);
HSD_GObj* it_802C4A40(Item_GObj*, Vec3*, f32);
void it_802C573C(Item_GObj*);
HSD_GObj* it_802C5000(Item_GObj*, Vec3*, s32, s32, f32);
void it_802C519C(Item_GObj*, Vec3*, s32, s32, f32, f32);
void it_802B4AC8(Item_GObj* gobj, Vec3*, f32 facing_dir, f32 x);
void it_802C53F0(Item_GObj*, Vec3*, f32, f32, f32);
s32 it_802E5F8C(Item_GObj*, Vec3*, s32, bool, f32, f32);
void it_802950D4(Item_GObj*, bool);
void it_80294EB0(Item_GObj*, Vec3*, Vec3*);
HSD_GObj* it_80294DC0(Vec3*);
void it_8027D670(Vec3* const);
void it_802C17DC(uint);
void it_802C16F8(Item_GObj*);
void it_802C1590(Item_GObj*);
void it_802BB20C(Item_GObj*);
void it_802BAEEC(Item_GObj*);
void it_802BAF0C(Item_GObj*);
void it_802BCFC4(Item_GObj* gobj, f32* arg1, itChainSegment* chainSegment,
                 Item* item_data, f32 arg4);
HSD_GObj* it_802BB290(Item_GObj* gobj, Vec3* arg1, f32 facing_dir);
void it_802BCF84(Item_GObj*);
void it_802BD158(Item_GObj* gobj, Vec3*, int, float);

/// @returns An #Item #HSD_GObj.
HSD_GObj* it_802BD4AC(Item_GObj*, Vec3*, u8, s32, f32);

void it_802BD45C(Item_GObj* gobj);
void it_802BDB94(Item_GObj* gobj);
void it_802BDBF8(Item_GObj* gobj);
void it_802BDC18(Item_GObj* gobj);
bool it_802BDC38(Item_GObj* gobj);
HSD_GObj* it_802BDE18(Item_GObj*, Vec3*, Fighter_Part, enum_t, float);
void it_802BE214(Item_GObj* gobj, Vec3* pos, enum_t, float facing_dir);
void it_802BDF40(Item_GObj* gobj);
void it_802BDFA0(Item_GObj* gobj);
void it_802BDFC0(Item_GObj* gobj);
void it_802BE100(Item_GObj* gobj);
/* 2A07B4 */ void it_802A07B4(Item_GObj* gobj);
/* 2A0534 */ void it_802A0534(Item_GObj* gobj, Vec3*);
/* 29FDBC */ bool it_8029FDBC(Item_GObj* gobj);

/// @returns An #Item #HSD_GObj.
/* 2A013C */ HSD_GObj* it_802A013C(float facing_dir, Fighter_GObj* owner_gobj,
                                   Vec3* pos, Fighter_Part, int);

/* 2A8A7C */ void it_802A8A7C(Item_GObj* gobj);
/* 2AF304 */ void it_802AF304(Item_GObj* gobj);

/// @returns An #Item #HSD_GObj.
/* 29DD58 */ HSD_GObj* it_8029DD58(Item_GObj* fighter_gobj, Vec3*, u8, int,
                                   float);

/* 2AF1A4 */ HSD_GObj* it_802AF1A4(float facing_dir, Fighter_GObj* owner_gobj,
                                   Vec3*, Fighter_Part, int);
/* 2A8398 */ void it_802A8398(Item_GObj*, Vec3*);
/* 2A83E0 */ HSD_GObj* it_802A83E0(float facing_dir, Fighter_GObj*, Vec3*,
                                   Fighter_Part, int);
/* 2A850C */ void it_802A850C(Item_GObj*, Vec3*, Vec3*, float, float, float);

/* 2F3330 */ bool it_802F3330(Item_GObj*);
/* 2F3374 */ void it_802F3374(Item_GObj*, Item_GObj*);
/* 3F94A0 */ extern ItemStateTable it_803F94A0[];

#endif
